basePath: /api
consumes:
- application/json
info:
  version: '0.0'
  title: Rubrik INTERNAL REST API
  description: 'This is the INTERNAL REST API for Rubrik. We don''t guarantee support

    or backward compatibility. Use at your own risk.

    '
produces:
- application/json
schemes:
- https
security:
- BasicAuth: []
- Bearer: []
securityDefinitions:
  BasicAuth:
    type: basic
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: '2.0'
tags:
- description: INTERNAL Archival
  name: /internal/archive
- description: INTERNAL Archival locations
  name: /internal/archive/location
- description: INTERNAL NFS archival
  name: /internal/archive/nfs
- description: INTERNAL QSTAR achival
  name: /internal/archive/qstar
- description: INTERNAL Authentication domains
  name: /internal/auth_domain
- description: INTERNAL Authorization
  name: /internal/authorization
- description: INTERNAL AWS
  name: /internal/aws
- description: INTERNAL Blackout windows.
  name: /internal/blackout_window
- description: INTERNAL Browse
  name: /internal/browse
- description: INTERNAL Cluster configuration and health
  name: /internal/cluster
- description: INTERNAL Internal configuration
  name: /internal/config
- description: INTERNAL Replication locations
  name: /internal/data_location
- description: INTERNAL Events
  name: /internal/event
- description: INTERNAL Events series
  name: /internal/event_series
- description: INTERNAL File system filesets
  name: /internal/fileset
- description: INTERNAL Folders
  name: /internal/folder
- description: INTERNAL Linux hosts and Windows hosts
  name: /internal/host
- description: INTERNAL Network shares
  name: /internal/host/share
- description: INTERNAL operations on network shares
  name: /internal/host/share_credential
- description: INTERNAL physical host fileset
  name: /internal/host_fileset
- description: INTERNAL Hierarchy
  name: /internal/hierarchy
  x-displayName: /internal/hierarchy
- description: INTERNAL Hyper-V clusters
  name: /internal/hyperv/cluster
  x-displayName: /internal/hyperv/cluster
- description: INTERNAL Hyper-V hierarchy
  name: /internal/hyperv/hierarchy
  x-displayName: /internal/hyperv/hierarchy
- description: INTERNAL Hyper-V hosts
  name: /internal/hyperv/host
  x-displayName: /internal/hyperv/host
- description: INTERNAL Hyper-V virtual machines
  name: /internal/hyperv/vm
  x-displayName: /internal/hyperv/vm
- description: INTERNAL Jobs
  name: /internal/job
- description: INTERNAL Logging interface
  name: /internal/log
- description: INTERNAL Managed objects
  name: /internal/managed_object
- description: INTERNAL Managed volumes
  name: /internal/managed_volume
- description: INTERNAL SQL Server instances and databases
  name: /internal/mssql
- description: INTERNAL Nodes
  name: /internal/node
- description: INTERNAL Manage nodes
  name: /internal/node_management
- description: INTERNAL Nutanix clusters
  name: /internal/nutanix/cluster
  x-displayName: /internal/nutanix/cluster
- description: INTERNAL Nutanix hierarchy
  name: /internal/nutanix/hierarchy
  x-displayName: /internal/nutanix/hierarchy
- description: INTERNAL Nutanix virtual machines
  name: /internal/nutanix/vm
  x-displayName: /internal/nutanix/vm
- description: INTERNAL operations on Organizations
  name: organization
  x-displayName: organization
- description: INTERNAL Security principals
  name: /internal/principal_search
- description: INTERNAL Replication
  name: /internal/replication
- description: INTERNAL Reports
  name: /internal/report
- description: INTERNAL Search
  name: /internal/search
- description: INTERNAL SLA Domains
  name: /internal/sla_domain
- description: INTERNAL SMTP instance for sending emails
  name: /internal/smtp_instance
- description: INTERNAL Snapshots
  name: /internal/snapshot
- description: INTERNAL Timeseries stats
  name: /internal/stats
- description: INTERNAL Storage arrays
  name: /internal/storage/array
- description: INTERNAL Support operations
  name: /internal/support
- description: INTERNAL Syslog settings
  name: /internal/syslog
- description: INTERNAL Backup throttle settings
  name: /internal/throttle
- description: INTERNAL Unmanaged objects
  name: /internal/unmanaged_object
- description: INTERNAL User management
  name: /internal/user
- description: INTERNAL User notifications
  name: /internal/user_notification
- description: INTERNAL Vmware agent
  name: /internal/vmware/agent
- description: INTERNAL VMware compute clusters
  name: /internal/vmware/compute_cluster
- description: INTERNAL VMware data center
  name: /internal/vmware/data_center
- description: INTERNAL VMware data store
  name: /internal/vmware/datastore
- description: INTERNAL VMware Guest OS credentials
  name: /internal/vmware/guest_credential
- description: INTERNAL VMware vCenter Server
  name: /internal/vmware/vcenter
- description: INTERNAL VMware virtual machines
  name: /internal/vmware/vm
definitions:
  AddNodesStatus:
    type: object
    required:
    - status
    - message
    - ipConfig
    - cassandraSetup
    - startServices
    - ipmiConfig
    - setupDisks
    - setupEncryptionAtRest
    - setupRootDisks
    - createTopLevelFilesystemDirs
    - setupLoopDevices
    properties:
      status:
        type: string
      message:
        type: string
      ipConfig:
        type: string
      cassandraSetup:
        type: string
      startServices:
        type: string
      ipmiConfig:
        type: string
      setupDisks:
        type: string
      setupEncryptionAtRest:
        type: string
      setupRootDisks:
        type: string
      createTopLevelFilesystemDirs:
        type: string
      setupLoopDevices:
        type: string
  Capacity:
    type: object
    required:
    - bytes
    properties:
      bytes:
        type: integer
        format: int64
  AdminRole:
    type: object
    required:
    - fullAdmin
    properties:
      fullAdmin:
        type: boolean
  AdminUserConfig:
    type: object
    required:
    - id
    - password
    - emailAddress
    properties:
      id:
        type: string
      password:
        type: string
      emailAddress:
        type: string
  ArchivalSpec:
    type: object
    required:
    - locationId
    - archivalThreshold
    properties:
      locationId:
        type: string
      archivalThreshold:
        type: integer
        format: int64
  AuthDomainJoinInfo:
    type: object
    required:
    - dnsName
    - adminUserName
    - adminPassword
    properties:
      dnsName:
        type: string
      adminUserName:
        type: string
      adminPassword:
        type: string
  AuthDomainSummary:
    type: object
    required:
    - id
    - domainType
    - name
    - initialRefreshStatus
    properties:
      id:
        type: string
      domainType:
        type: string
      name:
        type: string
      serviceAccount:
        type: string
      initialRefreshStatus:
        type: string
  BaseGuestCredential:
    type: object
    required:
    - username
    - password
    properties:
      username:
        type: string
        description: Username for the account used to login to the VM guest OS. To
          include a domain, use the format <domain>\<username>.
      password:
        type: string
        description: Password for the account used to login to the VM guest OS.
        x-secret: true
  BaseGuestCredentialDetail:
    type: object
    required:
    - username
    properties:
      username:
        type: string
  BaseOnDemandSnapshotConfig:
    type: object
    properties:
      slaId:
        type: string
  BaseSnapshotSummary:
    type: object
    required:
    - id
    - date
    - isOnDemandSnapshot
    - replicationLocationIds
    - slaId
    - slaName
    properties:
      id:
        type: string
      date:
        type: string
        format: date-time
      expirationDate:
        type: string
        format: date-time
      sourceObjectType:
        type: string
      isOnDemandSnapshot:
        type: boolean
      cloudState:
        type: integer
        format: int64
      consistencyLevel:
        type: string
      indexState:
        type: integer
        format: int64
      replicationLocationIds:
        type: array
        items:
          type: string
      archivalLocationIds:
        type: array
        items:
          type: string
      slaId:
        type: string
      slaName:
        type: string
  BlackoutWindow:
    type: object
    required:
    - startTime
    properties:
      startTime:
        type: string
      endTime:
        type: string
  BlackoutWindowStatus:
    type: object
    required:
    - isGlobalBlackoutActive
    properties:
      isGlobalBlackoutActive:
        type: boolean
      isSnappableBlackoutActive:
        type: boolean
  BooleanResponse:
    type: object
    required:
    - value
    properties:
      value:
        type: boolean
  BootstappedResult:
    type: object
    required:
    - isBootstrapped
    properties:
      isBootstrapped:
        type: boolean
  BrowseResponse:
    type: object
    properties:
      filename:
        type: string
        description: The name of the file
      path:
        type: string
        description: The complete path of the file
      lastModified:
        type: string
      size:
        type: integer
        format: int64
      fileMode:
        type: string
        description: The type of file, either a regular file or a directory
      statusMessage:
        type: string
        description: Description about the status
  BulkUpdateDetail:
    type: object
    required:
    - notificationIds
    - state
    properties:
      notificationIds:
        type: array
        items:
          type: string
      state:
        type: string
  ChartDataPoint:
    type: object
    required:
    - measure
    - value
    properties:
      measure:
        type: string
        description: Measure label for the data.
      value:
        type: number
        format: double
        description: The number value.
  ChartSummary:
    type: object
    required:
    - id
    - name
    - chartType
    - attribute
    - measure
    properties:
      id:
        type: string
        description: ID of the chart.
      name:
        type: string
        description: Name of the chart.
      chartType:
        type: string
        description: Type of the chart.
        enum:
        - Donut
        - VerticalBar
        - HorizontalBar
        - Line
        - StackedVerticalBar
        - StackedHorizontalBar
      attribute:
        type: string
        description: Attribute for the chart.
        enum:
        - TaskStatus
        - Hour
        - Day
        - Month
        - Quarter
        - Year
        - SlaDomain
        - ObjectType
        - Location
        - ObjectName
        - ClusterLocation
        - TaskType
        - ComplianceStatus
      measure:
        type: string
        description: Measure for the chart.
        enum:
        - NumberOfTasks
        - SuccessfulTaskCount
        - FailedTaskCount
        - CanceledTaskCount
        - RunningTaskCount
        - AverageDuration
        - DataTransferred
        - LogicalDataProtected
        - DataStored
        - DedupRatio
        - LogicalDedupRatio
        - DataReductionPercent
        - LogicalDataReductionPercent
        - TotalLocalStorage
        - TotalReplicaStorage
        - TotalArchiveStorage
        - LocalStorageGrowth
        - ArchiveStorageGrowth
        - ReplicaStorageGrowth
        - ComplianceStatusCount
        - InComplianceCount
        - NonComplianceCount
        - StackedTaskCountByStatus
        - StackedTotalData
        - StackedComplianceCountByStatus
  CloudExpirationJobConfig:
    type: object
    required:
    - vmId
    properties:
      vmId:
        type: string
        description: ID of the VM for which we are expiring snapshots
  CloudInstanceUpdate:
    type: object
    required:
    - id
    - powerStatus
    properties:
      id:
        type: string
        description: The ID of the cloud instance to update
      powerStatus:
        type: string
        enum:
        - true
        - false
        description: The new power status of the instance
  CloudUploaderJobConfig:
    type: object
    required:
    - vmId
    properties:
      vmId:
        type: string
        description: ID of the VM to start sending to cloud
  AwsSecuritySettings:
    type: object
    properties:
      awsSecurityGroupIds:
        type: array
        items:
          type: string
        description: 'For AWS instances, this is the security group ID. For images,
          this is the default security group ID for new instances from this image.

          '
  ClusterConfigRec:
    type: object
    required:
    - status
    - id
    properties:
      status:
        type: string
      id:
        type: integer
        format: int64
  ClusterConfigStatus:
    type: object
    required:
    - status
    - message
    - ipConfig
    - cassandraSetup
    - installSchema
    - startServices
    - ipmiConfig
    - configAdminUser
    - resetNodes
    - setupDisks
    - setupEncryptionAtRest
    - setupRootDisks
    - createTopLevelFilesystemDirs
    - setupLoopDevices
    properties:
      status:
        type: string
      message:
        type: string
      ipConfig:
        type: string
      cassandraSetup:
        type: string
      installSchema:
        type: string
      startServices:
        type: string
      ipmiConfig:
        type: string
      configAdminUser:
        type: string
      resetNodes:
        type: string
      setupDisks:
        type: string
      setupEncryptionAtRest:
        type: string
      setupRootDisks:
        type: string
      createTopLevelFilesystemDirs:
        type: string
      setupLoopDevices:
        type: string
  ClusterIpConfig:
    type: object
    required:
    - netmask
    - gateway
    properties:
      netmask:
        type: string
      gateway:
        type: string
  ClusterIpRec:
    type: object
    required:
    - status
    - id
    properties:
      status:
        type: string
      id:
        type: integer
        format: int64
  ClusterTimezone:
    type: object
    required:
    - timezone
    properties:
      timezone:
        type: string
        description: Cluster Timezone.
        enum:
        - America/Anchorage
        - America/Araguaina
        - America/Barbados
        - America/Chicago
        - America/Denver
        - America/Los_Angeles
        - America/Mexico_City
        - America/New_York
        - America/Noronha
        - America/Phoenix
        - America/Toronto
        - America/Vancouver
        - Asia/Bangkok
        - Asia/Dhaka
        - Asia/Dubai
        - Asia/Hong_Kong
        - Asia/Karachi
        - Asia/Magadan
        - Asia/Singapore
        - Asia/Tokyo
        - Atlantic/Cape_Verde
        - Australia/Perth
        - Australia/Sydney
        - Europe/Amsterdam
        - Europe/Athens
        - Europe/London
        - Europe/Moscow
        - Pacific/Auckland
        - Pacific/Honolulu
        - Pacific/Midway
        - UTC
  CommandResult:
    type: object
    required:
    - success
    properties:
      success:
        type: boolean
  CommunityUserCredentials:
    type: object
    required:
    - username
    - password
    properties:
      username:
        type: string
        description: Username for the account used to login to the Rubrik community
          / self-serve website.
      password:
        type: string
        description: Password for the account used to login to the Rubrik community
          / self-serve website.
        x-secret: true
  CorruptSnapshotChainConfig:
    type: object
    required:
    - snappableId
    - corruptSnapshotId
    properties:
      snappableId:
        type: string
        description: ID of the snappable whose snapshot to corrupt
      corruptSnapshotId:
        type: string
        description: ID of the snapshot to corrupt
  CountResponse:
    type: object
    required:
    - count
    properties:
      count:
        type: integer
        format: int64
  CreateCloudInstanceRequest:
    type: object
    required:
    - snappableId
    - snapshotId
    - instantiateLocationId
    - instanceType
    - securityGroup
    - subnet
    properties:
      snappableId:
        type: string
        description: The snappable id to which the snapshot belongs to
      snapshotId:
        type: string
        description: The snapshot to create an instance from
      instantiateLocationId:
        type: string
        description: The data location to instantiate on
      instanceType:
        type: string
        description: Type of the launched instance
      securityGroup:
        type: string
        description: A security group that the instance will be launched with
      subnet:
        type: string
        description: A subnet in which the instance will be launched
  DataLocationEndpointStatus:
    type: object
    required:
    - status
    - message
    properties:
      status:
        type: integer
        format: int32
      message:
        type: string
  DataLocationTeardownRequest:
    type: object
    required:
    - dataLocationId
    properties:
      dataLocationId:
        type: string
  DataLocationUsage:
    type: object
    required:
    - locationId
    - dataDownloaded
    - dataArchived
    - numVMsArchived
    - numFilesetsArchived
    - numLinuxFilesetsArchived
    - numWindowsFilesetsArchived
    - numShareFilesetsArchived
    - numMssqlDbsArchived
    - numHypervVmsArchived
    - numNutanixVmsArchived
    - numManagedVolumesArchived
    properties:
      locationId:
        type: string
      dataDownloaded:
        type: integer
        format: int64
      dataArchived:
        type: integer
        format: int64
      numVMsArchived:
        type: integer
        format: int32
      numFilesetsArchived:
        type: integer
        format: int32
      numLinuxFilesetsArchived:
        type: integer
        format: int32
      numWindowsFilesetsArchived:
        type: integer
        format: int32
      numShareFilesetsArchived:
        type: integer
        format: int32
      numMssqlDbsArchived:
        type: integer
        format: int32
      numHypervVmsArchived:
        type: integer
        format: int32
      numNutanixVmsArchived:
        type: integer
        format: int32
      numManagedVolumesArchived:
        type: integer
        format: int32
  DataStoreSummary:
    type: object
    required:
    - id
    properties:
      id:
        type: string
      name:
        type: string
      capacity:
        type: integer
        format: int64
      dataStoreType:
        type: string
      dataCenterName:
        type: string
      isLocal:
        type: boolean
  DateFilter:
    type: object
    required:
    - period
    properties:
      beforeDate:
        type: string
        format: date-time
        description: End date of the range.
      afterDate:
        type: string
        format: date-time
        description: Start date of the range.
      period:
        type: string
        description: Period of time.
        enum:
        - PastDay
        - PastWeek
        - Past30Days
        - PastYear
        - CustomDate
  DecommissionNodeConfig:
    type: object
    required:
    - nodeId
    properties:
      nodeId:
        type: string
      minTolerableNodeFailures:
        description: Specifies the number of remaining nodes that can fail without
          impact on data availability and consistency, after a specified node is decommissioned
          and removed. For example, setting the value to 1 means that a node can only
          be decommissioned if, after the decommission, the Rubrik cluster can lose
          1 additional node and still continue normal operations.
        type: integer
  DecommissionNodeStatus:
    type: object
    required:
    - status
    - drainSdfs
    properties:
      status:
        type: string
      drainSdfs:
        type: string
  DeleteReplicationSourceJob:
    type: object
    required:
    - jobId
    - locationId
    properties:
      jobId:
        type: string
      locationId:
        type: string
  DeleteReplicationSourceJobConfig:
    type: object
    required:
    - locationId
    properties:
      locationId:
        type: string
        description: Data location Id to delete on target cluster
  DeleteReplicationSourceSummary:
    type: object
    required:
    - status
    - message
    - jobInstanceId
    properties:
      status:
        type: integer
        format: int32
      message:
        type: string
      jobInstanceId:
        type: string
  DiskStatus:
    type: object
    required:
    - id
    - status
    - diskType
    - isEncrypted
    properties:
      id:
        type: string
      status:
        type: string
      isEncrypted:
        type: boolean
      diskType:
        type: string
      nodeId:
        type: string
  EffectiveAuthorizationsQuery:
    type: object
    required:
    - resources
    properties:
      principal:
        type: string
      resources:
        type: array
        items:
          type: string
  EndUserPrivileges:
    type: object
    properties:
      destructiveRestore:
        type: array
        items:
          type: string
      restore:
        type: array
        items:
          type: string
      provisionOnInfra:
        type: array
        items:
          type: string
  EndUserRole:
    type: object
    required:
    - destructiveRestore
    - restore
    - provisionOnInfra
    properties:
      destructiveRestore:
        type: boolean
      restore:
        type: boolean
      provisionOnInfra:
        type: boolean
  EventSeriesSummary:
    type: object
    required:
    - id
    - status
    - time
    - eventInfo
    properties:
      id:
        type: string
      status:
        description: Error, Failure, Warning, Running, Success, Canceled, Canceling
        type: string
      time:
        type: string
      eventInfo:
        type: string
  EventStatusSummary:
    type: object
    required:
    - id
    - progress
    - isCancelable
    - isCancelRequested
    - attemptNumber
    properties:
      id:
        type: string
      progress:
        type: string
      isCancelable:
        type: boolean
      isCancelRequested:
        type: boolean
      attemptNumber:
        type: integer
  EventSummary:
    type: object
    required:
    - id
    - eventInfo
    - objectId
    - objectType
    - eventType
    - time
    - eventStatus
    - eventSeriesId
    properties:
      id:
        type: string
      objectId:
        type: string
      objectType:
        type: string
      objectName:
        type: string
      eventInfo:
        type: string
      time:
        type: string
      eventType:
        type: string
      eventStatus:
        type: string
      eventSeriesId:
        type: string
      eventProgress:
        type: string
      isCancelable:
        type: boolean
      isCancelRequested:
        type: boolean
  ExpireSnapshotJobConfig:
    type: object
    required:
    - snappableId
    properties:
      snappableId:
        type: string
        description: ID of the snappable to expire snapshots for
  FailureToleranceStatus:
    type: object
    required:
    - brik
    - node
    - disk
    properties:
      brik:
        type: integer
        format: int32
        description: Number of brik failures allowed in the cluster under which the
          cluster remains fully functional
      node:
        type: integer
        format: int32
        description: Number of node failures allowed in the cluster under which the
          cluster remains fully functional
      disk:
        type: integer
        format: int32
        description: Number of disk failures allowed in the cluster under which the
          cluster remains fully functional
  FetchUpgradeStatus:
    type: object
    required:
    - status
    - bytesRead
    - fileSize
    properties:
      status:
        type: string
      bytesRead:
        type: string
      fileSize:
        type: string
  FileVersion:
    type: object
    properties:
      lastModified:
        type: string
      size:
        type: integer
        format: int64
      snapshotId:
        type: string
        description: The snapshot this file belongs to
      fileMode:
        type: string
        description: The type of file, either a regular file or a directory
      source:
        type: string
        description: The location where the file is stored, either in the cloud or
          locally
  FilesetCreate:
    allOf:
    - type: object
      required:
      - hostId
      - templateId
      properties:
        hostId:
          type: string
        shareId:
          type: string
        templateId:
          type: string
  FilesetOptions:
    type: object
    properties:
      allowBackupNetworkMounts:
        type: boolean
        description: Include or exclude locally-mounted remote file systems from backups.
      allowBackupHiddenFoldersInNetworkMounts:
        type: boolean
        description: Include or exclude hidden folders inside locally-mounted remote
          file systems from backups.
      useWindowsVss:
        type: boolean
        description: Use VSS during Windows backups.
  FilesetUpdate:
    type: object
    properties:
      configuredSlaDomainId:
        type: string
        description: Assign Fileset to SLA domain
  FloatingIp:
    type: object
    required:
    - ip
    - nodeId
    properties:
      ip:
        type: string
      nodeId:
        type: string
  GarbageCollectionJobConfig:
    type: object
    required:
    - nodeId
    properties:
      nodeId:
        type: string
        description: ID of the node on which to do garbage collection
  GatewayInfo:
    type: object
    required:
    - address
    - ports
    properties:
      address:
        type: string
      ports:
        type: array
        items:
          type: integer
          format: int32
  GenerateSupportBundleRequest:
    type: object
    properties:
      eventId:
        type: string
      requestIds:
        type: array
        items:
          type: string
  GlobalAtlasConfig:
    type: object
    properties:
      default_snapshot_encoding_type:
        type: integer
        format: int32
        description: Default snapshot encoding type
      default_snapshot_replication_factor:
        type: integer
        format: int32
        description: Default snapshot replication factor
      default_journal_replication_factor:
        type: integer
        format: int32
        description: Default journal replication factor
      compacted_patch_dir_replication_factor:
        type: integer
        format: int32
        description: Compacted patch file replication factor for merged files
      default_journal_media_type:
        type: integer
        format: int32
        description: Media type to use for journal files (1 = FLASH, 2 = HDD)
      default_scratch_media_type:
        type: integer
        format: int32
        description: Media type to use for scratch files (1 = FLASH, 2 = HDD)
      brik_failure_tolerance:
        type: integer
        format: int32
        description: Number of brik failures to tolerate
      metadata_scan_enabled:
        type: boolean
        description: Is metadata scan enabled
      maintenance_manager_nthreads:
        type: integer
        format: int32
        description: Number of threads to use for running maintenance manager operations
      maintenance_manager_weights:
        type: string
        description: Weights for each queue for the maintenance manager
      drain_node_failure_tolerance:
        type: integer
        format: int32
        description: Number of OK node failures that each stripe with chunks on a
          node in PRE_MAINTENANCE needs to be able to tolerate.
      storeEventsInCockroachDb:
        type: boolean
        description: Store Events in CockroachDb
  GlobalBlackoutWindowStatus:
    type: object
    required:
    - isGlobalBlackoutActive
    properties:
      isGlobalBlackoutActive:
        type: boolean
  GlobalBlobstoreConfig:
    type: object
    properties:
      backupMetadataDuringGcReleaseLock:
        type: boolean
        description: This is set to true for unit tests
      backupMetadataDuringBlobStoreOpen:
        type: boolean
        description: This is set to true for unit tests
      backupMetadataDuringBlobStoreClose:
        type: boolean
        description: This is set to true for unit tests
      consolidateJobFrequencyInMinutes:
        type: integer
        format: int32
        description: Interval for consolidate jobs in minutes
      crossJobFrequencyInMinutes:
        type: integer
        format: int32
        description: Interval for cross increment jobs in minutes
      gcDeletionGroupSize:
        type: integer
        format: int32
        description: Number of blobs to delete at a time so gc can make incremental
          progress
      reverseMinChangeRate:
        type: integer
        format: int32
        description: Minimum change rate to run reverse
      reverseMinNumberOfDisks:
        type: integer
        format: int32
        description: Minimum number of snapshots required to run reverse This is a
          knob that can be useful to force a reverse in the field but in general we
          do not want reverse operations to happen if it is not absolutely needed
          and hence setting this to a very high value in production.
      reverseJobFrequencyInMinutes:
        type: integer
        format: int32
        description: Maximum number of concurrent reverse jobs per node
      reverseJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent reverse jobs per node
      blobStoreMetadataBackupWindowSize:
        type: integer
        format: int32
        description: The number of metadata backup files to keep.
      enableLocalSdfsBlobStoreMetadataBackup:
        type: boolean
        description: Determines whether metadata should be backed up in sdfs when
          blob store is operating on blobs in the local cluster.
      enableBlobStoreHeavyWeightChecks:
        type: boolean
        description: Whether to enable heavy-weight tests in blob store
      similarityThresholdForCross:
        type: number
        format: double
        description: Threshold of similarity required to choose a cross base while
          deduping a full snapshot.
      maxNumCrossRefsSoftCap:
        type: integer
        format: int32
        description: DiffChainBlobStore's soft cap on the number of crosses to permit
          that are based on a single base. The cap is soft in the sense that we do
          a precheck and exclude candidate bases with more cross refs prior to choosing
          a cross base, but do not enforce anything after the fact. There could be
          races that allow the number to exceed this cap, and if the cap is lowered,
          we will not enter a failure loop.
      simHashCacheFileRefreshFrequencySeconds:
        type: integer
        format: int32
        description: Period of the global job to rebuild the in sim hash cache file.
      simHashCacheStalenessThresholdMillis:
        type: integer
        format: int32
        description: Threshold to reload the in memory sim hash cache from the cached
          file. A value of 0 implies we always reload, assuming time is monotonic.
      maxBlobsToGcPerJob:
        type: integer
        format: int32
        description: Maximum number of blobs to be GCed per job run
  GlobalCerebroConfig:
    type: object
    properties:
      agentServerPort:
        type: integer
        format: int32
        description: Agent server port
      agentServerSecurePort:
        type: integer
        format: int32
        description: Agent server secure port
      agentServerIp:
        type: string
        description: Agent server ip
      clusterPrivateKey:
        type: string
        description: The cluster's private key
      clusterPublicCertificate:
        type: string
        description: The cluster's public certificate, anyone having this can communicate
          with the current cluster
      archivalLocationReconnectJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent archival location reconnect jobs
          per node
      auditJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent audit jobs per node
      calculateEffectiveSlaJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent calculate effective SLA jobs per
          node
      cleanupDatabaseBackupJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent cleanup database backup jobs per
          node
      cleanUpReferencesJobInMemoryShares:
        type: integer
        format: int32
        description: Maximum number of concurrent jobs per node to clean references
      cleanUpReferencesFrequencyInMinutes:
        type: integer
        format: int32
        description: Interval for cleaning up references
      consolidateOnCloudJobFrequencyInMinutes:
        type: integer
        format: int32
        description: Interval for consolidade on cloud jobs in minutes
      createCloudImageJobFrequencyInMins:
        type: integer
        format: int32
        description: Interval for CreateCloudImage jobs in minutes
      createCloudImageJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent CreateCloudImage jobs per node
      throttleMaxRefCount:
        type: integer
        format: int32
        description: Maximum number of concurrent snapshots per ESXi host
      throttlePhysicalHostMaxRefCount:
        type: integer
        format: int32
        description: Maximum number of concurrent snapshots per physical host
      defaultPageSize:
        type: integer
        format: int32
        description: Default size for pagination in cassandra, a smaller value should
          be used for tables with large rows
      defaultSleepForSemaphoreInSeconds:
        type: integer
        format: int32
        description: The default amount of time to sleep when the semaphore cannot
          be acquired
      deleteCorruptSnapshotsJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent delete corrupt snapshots jobs per
          node
      deleteReplicationSourceJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent delete replication source jobs per
          node
      deleteVcenterJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent delete vcenter jobs per node
      downloadJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent download jobs per node
      restoreFileJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent restore file jobs per node
      filesetRestoreFileJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent jobs to restore files to hosts per
          node
      emailReportsJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent email reports jobs per node
      enableBlackoutWindow:
        type: boolean
        description: Whether to check blackout window for scheduling jobs
      enableDiskSpaceSemaphore:
        type: boolean
        description: Whether to use the disk space semaphore before creating a snapshot
      enableSnapshotIntegrity:
        type: boolean
        description: Whether to periodically run snapshot integrity on every snapshot
          to detect corruptions (VERY EXPENSIVE)
      snapshotIntegritySamplingRatio:
        type: number
        format: double
        description: Sample size used for computing hash of a snapshot
      expireJobFrequencyInMinutes:
        type: integer
        format: int32
        description: Expire snapshot jobs interval in minutes
      exportJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent export jobs per node
      filesetByHostInitialRangeForBackOffInMs:
        type: integer
        format: int32
        description: Initial range for exponential backoff for FilesetByHostId insertion
      filesetByHostMaxRetryAttempts:
        type: integer
        format: int32
        description: Number of retries to add an entry into FilesetByHostId table
      filesetBackupScriptTimeoutSec:
        type: integer
        format: int32
        description: Number of seconds after which the pre-backup or post-backup scripts
          are killed if they have not completed execution
      filesetBackupScriptErrorHandling:
        type: string
        description: Default action if pre-backup or post-backup scripts fail
      referenceOpMaxAttempts:
        type: integer
        format: int32
        description: Number of retries to add/remove a reference
      referenceOpBackOffInMs:
        type: integer
        format: int32
        description: Initital backoff duration to add/remove a reference
      archivalConnectJobUpdateRetries:
        type: integer
        format: int32
        description: Number of retries for updating elements in the jobId list
      archivalDisconnectJobUpdateRetries:
        type: integer
        format: int32
        description: Number of retries for disconnect archival location jobs
      archivalDeleteJobUpdateRetries:
        type: integer
        format: int32
        description: Number of retries for delete archival location jobs
      recoverArchivedMetadataJobRetries:
        type: integer
        format: int32
        description: Number of retries for recovering metadata from archive
      fingerprintFrequencyInMinutes:
        type: integer
        format: int32
        description: Interval for fingerprint backfill jobs in minutes
      frequentStatsUpdaterFrequencyInMinutes:
        type: integer
        format: int32
        description: Interval for stats updater jobs in minutes
      frequentStatsUpdaterJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent frequent stats updater jobs per
          node
      gcJobFrequencyInMinutes:
        type: integer
        format: int32
        description: Interval for GC jobs in minutes
      gcJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent GC jobs per node
      shouldThrottleBackupJobs:
        type: boolean
        description: Whether or not to throttle backup jobs based on source load
      backupThrottlingDelayInMinutes:
        type: integer
        format: int32
        description: Number of minutes to delay a backup job if we decide to throttle
          it
      pruneJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent jobs per node to prune job instance
          table
      pruneJobFrequencyInMinutes:
        type: integer
        format: int32
        description: Interval to Prune jobs in minutes
      pruneJobPruningAgeInDays:
        type: integer
        format: int32
        description: Max number of days to keep a job instance around. It gets deleted
          after that many days
      pruneJobPruningCount:
        type: integer
        format: int32
        description: The value for the prunning count was chosen considering job instances
          are archived.
      auditJobFrequencyInMinutes:
        type: integer
        format: int32
        description: Interval to Audit jobs in minutes
      generateReportTemplatesJobFrequencyInMinutes:
        type: integer
        format: int32
        description: Interval to run the generate report template jobs in minutes
      generateCustomReportsJobFrequencyInMinutes:
        type: integer
        format: int32
        description: Interval to run the generate custom report jobs in minutes
      generateReportTemplatesJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent generate report template jobs per
          node
      generateCustomReportsJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent generate custom reports jobs per
          node
      generateReportTemplatesJobStaggeringOffsetInMinutes:
        type: integer
        format: int32
        description: Staggering offset to schedule the job in minutes.
      generateCustomReportsJobStaggeringOffsetInMinutes:
        type: integer
        format: int32
        description: Staggering offset to schedule the job in minutes.
      handleCorruptSnapshotsJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent handle corrupt snapshots jobs per
          node
      indexMaxDirectoriesToDelete:
        type: integer
        format: int32
        description: Maximum number of index directories to delete stored in snappable.
      indexSnappableJobMaxSnapshotsPerRun:
        type: integer
        format: int32
        description: Maximum number of snapshots without index processed per index
          run
      indexSnappableJobMaxSnapshotsWithIndexPerRun:
        type: integer
        format: int32
        description: Maximum number of snapshots with index processed per index run
      indexSnappableJobMaxAttemptsPerSnapshot:
        type: integer
        format: int32
        description: Maximum number of attempts to index a snapshot before we quit
      indexSnappableJobUseUMLForIndexing:
        type: boolean
        description: Whether to use UML for Indexing
      indexSnappableThrottleDelayInMs:
        type: integer
        format: int32
        description: Delay in microseconds for a job to wait in queue in case there
          are more than one job running for a given snappable
      indexSnappableEnablePatchCache:
        type: boolean
        description: Whether PatchCache should be enabled for Indexing
      infrequentStatsUpdaterFrequencyInMinutes:
        type: integer
        format: int32
        description: Interval for infrequent stats jobs in minutes
      infrequentStatsUpdateTimeoutInMins:
        type: integer
        format: int32
        description: Timeout while waiting for the infrequent stats to complete
      infrequentStatsUpdaterJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent infrequent stats updater jobs per
          node
      jobMaintainerFrequencyInMinutes:
        type: integer
        format: int32
        description: Job maintainer interval in minutes
      jobMaintainerJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent job maintainer jobs per node
      jobStaggeringRangeInMinutes:
        type: integer
        format: int32
        description: The time range inside which we will stagger jobs. This is used
          to stagger some of the data management jobs in a week time frame. This will
          be done for reverse increment, cross increment, expire, GC, indexing, upload
          to / download from cloud, consolidate jobs.
      liteRefreshJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent lite refresh jobs per node
      liteRefreshJobIntervalInMinutes:
        type: integer
        format: int32
        description: Interval between lite refresh jobs in minutes
      logUploadEnabled:
        type: boolean
        description: True if log upload is enabled
      logUploaderFrequencyInMinutes:
        type: integer
        format: int32
        description: Interval for stats collecting jobs in minutes
      logUploaderJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent log uploader jobs per node
      metadataMaintenanceJobFrequency:
        type: integer
        format: int32
        description: Interval for metadata maintenance jobs in minutes
      metadataMaintenanceJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent metadata maintenance jobs per node
      mssqlLogDownloadMaxAttempts:
        type: integer
        format: int32
        description: Max number of times to attempt to download a mssql log before
          giving up and failing the job
      mssqlTakeSnapshotSizeEstimationBuffer:
        type: number
        format: double
        description: Buffer as a fraction of size for size estimation when taking
          a mssql snapshot
      refreshMountSharesJobFrequencyInMinutes:
        type: integer
        format: int32
        description: Interval (in minutes) for the job to refresh mount shares
      refreshMountSharesJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent jobs to refresh mount shares per
          node
      esxAddrResolvJobFrequencyInMinutes:
        type: integer
        format: int32
        description: Interval for nfs share jobs in minutes
      oracleBackupQueryFrequencyInMinutes:
        type: integer
        format: int32
        description: Interval between Oracle database backup queries in minutes
      oracleBackupCleanupFrequencyInMinutes:
        type: integer
        format: int32
        description: Interval to check deleted Oracle databases in minutes
      periodicUpdateDefaultTimeoutInMins:
        type: integer
        format: int32
        description: Default time out while waiting for any periodic update to run
      periodicUpdateAbortTimeoutInMins:
        type: integer
        format: int32
        description: Time out after issuing the abort to each update
      perNodeJobMaintainerFrequencyInMinutes:
        type: integer
        format: int32
        description: Interval beween job maintainer jobs in minutes
      pullReplicateIntegrityProbability:
        type: integer
        format: int32
        description: Probability that we will decide to run snapshot integrity for
          a replicated snapshot
      pullMssqlLogReplicateJobIntervalInMinutes:
        type: integer
        format: int32
        description: Interval of mssql log replication jobs in minutes
      pullReplicateCloseSnappableNumRetries:
        type: integer
        format: int32
        description: Number of retries to close snappable before raising alert
      maximumReplicationCatchupBoundInDays:
        type: integer
        format: int32
        description: Maximum time in days within which replication jobs try to select
          the next snapshot to replicate
      minimumReplicationLagAllowedInDays:
        type: integer
        format: int32
        description: Minimum lag time in days a replication job waits before starts
          to skip snapshots
      laggedTimeToSkipFraction:
        type: number
        format: double
        description: Fraction of the lagged time we skip for the next snapshot to
          replicate. With the default of 0.5, we skip all snapshots within the first
          half of the lagged time and start picking next snapshot from the second
          half
      mssqlLogUploadJobIntervalInMinutes:
        type: integer
        format: int32
        description: Interval of mssql log upload jobs in minutes
      mssqlLogUploadJobMaxLogsToUpload:
        type: integer
        format: int32
        description: Max number of logs to upload in a single mssql log upload job
      pullReplicatePollPeriodMinutes:
        type: integer
        format: int32
        description: Interval between pull replicate jobs in minutes
      pullReplicateJobDelayRangeSeconds:
        type: integer
        format: int32
        description: Time by which the pull replicate job should be delayed if it
          can't aquire resources
      queryDatabaseBackupJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent query database backup jobs per node
      recoverArchivedMetadataJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent recover archived metadata jobs per
          node
      refreshAuthDomainJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent refresh auth domain jobs per node
      refreshAuthDomainJobIntervalInMinutes:
        type: integer
        format: int32
        description: Interval for refreshing auth domain jobs in minutes
      refreshAuthDomainJobRetries:
        type: integer
        format: int32
        description: Number of retries for auth domain jobs
      refreshHostNumRetries:
        type: integer
        format: int32
        description: Number of retries for host refresh jobs
      refreshNumRetries:
        type: integer
        format: int32
        description: Delay the lite refresh by the specified time if the refresh throttle
          is not available. The unit is seconds.
      refreshHostJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent host refresh jobs per node
      refreshJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent refresh jobs per node
      refreshCachedObjectsFrequencyInMinutes:
        type: integer
        format: int32
        description: Interval for refreshing cached objects table in minutes. We cache
          small tables inside cached_value table in order to optimize full-table scans.
          Those caches might sometime go out of sync (for example, if update to original
          table succeeded, but update to cache failed). This value denotes how frequently
          the job to sync the cache with original table should run.
      refreshHostJobIntervalInMinutes:
        type: integer
        format: int32
        description: Interval of refresh host jobs in minutes
      refreshJobIntervalInMinutes:
        type: integer
        format: int32
        description: Interval of refresh jobs in minutes
      esxCbtBlacklistAlertIntervalInMs:
        type: integer
        format: int32
        description: Interval of the alert check for ESX with CBT blacklisted builds.  Regardless
          of the value here this check will not run more frequently than the full
          refresh, i.e. the effective period will not be shorter than the interval
          specified by refreshJobIntervalInMinutes.
      remoteSnapshotRefreshPeriodMinutes:
        type: integer
        format: int32
        description: Interval between remote snapshot refresh jobs in minutes
      remoteSnapshotRefreshRetryAttempts:
        type: integer
        format: int32
        description: Maximum number of times to retry a remote snapshot refresh job
      removeVmwareSnapshotIssuesJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent remove vmware snapshot issues jobs
          per node
      snapshotIntegrityJobFrequencyInMinutes:
        type: integer
        format: int32
        description: How frequently to run snapshot integrity (if enabled)
      snapshotIntegrityJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent snapshot integrity jobs per node
      snapshotIntegrityMinSnapshotPeriodInMinutes:
        type: integer
        format: int32
        description: Maximum frequency (minimum period) for verifying a snapshot's
          integrity
      snapshotInitialRangeForBackOffInMs:
        type: integer
        format: int32
        description: Initial range for exponential backoff for Snapshot insertion
      snapshotMaxRetryAttempts:
        type: integer
        format: int32
        description: Number of retries to add an entry into Snapshot table
      snapshotEarlyAllowanceInMinutes:
        type: integer
        format: int32
        description: Number of minutes early we will allow a snapshot to run if it
          was scheduled but doesn't need to run to meet SLA
      snappableGroupInitialRangeForBackOffInMs:
        type: integer
        format: int32
        description: Initial range for exponential backoff for Snappable Group update
      snappableGroupMaxRetryAttempts:
        type: integer
        format: int32
        description: Number of retries to update an entry into Snappable Group table
      sourceClusterRefreshJobFrequencyInMinutes:
        type: integer
        format: int32
        description: Interval between source cluster refresh jobs in minutes
      sourceClusterRefreshJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent source cluster refresh jobs per
          node
      sourceClusterRefreshSnappableBatchSize:
        type: integer
        format: int32
        description: Number of snappables whose configs should be updated together
      statCollectorJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent stat collector jobs per node
      failOnMountBootupFailure:
        type: boolean
        description: Fail mount job if mount fails to boot up
      failOnExportBootupFailure:
        type: boolean
        description: Fail mount job if export VM fails to boot up
      uploadJobFrequencyInMinutes:
        type: integer
        format: int32
        description: Upload job interval in minutes
      uploadIndexJobFrequencyInMinutes:
        type: integer
        format: int32
        description: Upload job interval in minutes
      archivedIndexableSnapshotExpiryThresholdInMins:
        type: integer
        format: int32
        description: If a snapshot is uploaded and is going to expire but hasn't been
          indexed yet, then we don't expire it immediately and wait for certail threshold
          to reach before expiring it
      verifySlaJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent verify sla jobs per node
      verifySlaJobFrequencyInMinutes:
        type: integer
        format: int32
        description: Frequency in minutes for verify sla jobs
      acceptableThresholdViolation:
        type: number
        format: double
        description: Factor by which unexpired snapshots can violate SLA Bucket
      firstSnapshotViolationThresholdInHours:
        type: integer
        format: int32
        description: Amount of time it is OK to miss the first snapshot by
      minimumAcceptableSlaThresholdInMinutes:
        type: integer
        format: int32
        description: Minimum threshold to flag a snapshot as missed, in minutes
      maximumAcceptableSlaThresholdInDays:
        type: integer
        format: int32
        description: Maximum threshold allowance before flagging missed snapshot,
          in days
      diskSpaceSemaphoreMinSizeInGb:
        type: number
        format: double
        description: Min size guarded by a single disk space semaphore, in GiB
      diskSpaceSemaphoreChunkSizeInGb:
        type: number
        format: double
        description: Chunk size used for distributed disk space allocation, in GiB
      distributedSemaphoreMaxRetryAttempts:
        type: integer
        format: int32
        description: Number of retries to allocate on a single semaphore
      distributedSemaphoreInitialRangeForBackOffInMs:
        type: integer
        format: int32
        description: Initial range for exponential backoff
      distributedSemaphoreMaxSleepForRetryInMs:
        type: integer
        format: int32
        description: Max range for exponential backoff
      emailReportsJobFrequencyInMinutes:
        type: integer
        format: int32
        description: Interval for email reports jobs in minutes
      emailReportsJobStaggeringOffsetInMinutes:
        type: integer
        format: int32
        description: Staggering offset for scheduling email report jobs
      eventsTTLInDays:
        type: integer
        format: int32
        description: Number of days events are kept. This is required to determine
          the point till which we need to query. This should match TTL of the table
      notificationsTTLInDays:
        type: integer
        format: int32
        description: Number of days notifications are kept. This is required to determine
          the point till which we need to query. This should match TTL of the table
      perNodeJobMaintainerJobInMemorySemShares:
        type: integer
        format: int32
        description: Number of perNodeJob maintainer jobs that can run concurrently
          on a given node.
      enableDiskStreamSemaphore:
        type: boolean
        description: Whether to use the disk stream semaphore
      archivalConnectingJobsSerializedList:
        type: string
        description: Serialized list of archival location connecting jobs which are
          still running
      diskStreamSemaphoreMinSize:
        type: integer
        format: int32
        description: Min num streams guarded by a single disk stream semaphore
      diskStreamSemaphoreChunkSize:
        type: integer
        format: int32
        description: Chunk size used for disk stream semaphore allocation
      diskStreamSemaphoreStreamsPerDisk:
        type: number
        format: double
        description: Number of streams per disk for optimal throughput
      diskStreamSemaphoreScaleFactor:
        type: integer
        format: int32
        description: Factor by which to multiply to get the internal equivalent of
          a single disk stream (here, 1 disk stream = 100 semaphore units)
      jobFetcherSleepTimeSeconds:
        type: integer
        format: int32
        description: Sleep time between each iteration of JFL
      maxRandomSleepBetweenPointQueriesMs:
        type: integer
        format: int32
        description: Maximum sleep time used for picking the random duration when
          pacing point queries.
      alwaysForceFullSnapshot:
        type: boolean
        description: Whether or not to always force a full snapshot, even when an
          incremental would normally be taken
      ingestVmToDiskThresholdInGb:
        type: integer
        format: int32
        description: Size of full disks for a VM past which to ingest direct to disk
          (/sd/snapshot) and not copy
      snapshotAtomicOpMaxAttempts:
        type: integer
        format: int32
        description: Max attempts to add/delete a snapshot to/from virtual machine
          snapshot index.
      snapshotAtomicOpInitialSleepInMs:
        type: integer
        format: int32
        description: Milliseconds to sleep between attempts to add/delete a snapshot
          to/from virtual machine snapshot index.
      maxRandomSleepBetweenVirtualMachinePointQueriesMs:
        type: integer
        format: int32
        description: Maximum sleep time used for picking the random duration when
          pacing point queries on the virtual machine table.
      maxRandomSleepBetweenPagesInMs:
        type: integer
        format: int32
        description: Maximum sleep time used for picking the random duration when
          pacing paginated iterate queries.
      blobStorePrefixPathInSdSnapshot:
        type: string
        description: Blobstore root working directory
      blobStorePrefixPathInSdScratch:
        type: string
        description: Blobstore root scratch directory
      snappablePrefixPathInSdSnapshot:
        type: string
        description: Snappables root working directory
      snappablePrefixPathInSdScratch:
        type: string
        description: Snappables root scratch directory
      reportsPrefixPathInSdSnapshot:
        type: string
        description: Reports root working directory
      reportsPrefixPathInSdScratch:
        type: string
        description: Reports root scratch directory
      boltPrefixPathInSdScratch:
        type: string
        description: Bolts root scratch directory
      reportsDirTtlInSeconds:
        type: integer
        format: int32
        description: Time to live of files in reports working directory
      reportsCsvDirTtlInSeconds:
        type: integer
        format: int32
        description: Time to live of files in reports working directory
      mergedSpecPrefixStrip:
        type: string
        description: Prefix to strip from MergedSpec
      filesetTemporaryMountPrefix:
        type: string
        description: Prefix for temporary fileset ext4 mounts
      defaultThriftSocketRequestTimeoutInMs:
        type: integer
        format: int32
        description: The timeout for the thrift response
      snappableMaxRetryAttempts:
        type: integer
        format: int32
        description: Number of retries to add an entry into Snappable table
      snappableInitialRangeForBackOffInMs:
        type: integer
        format: int32
        description: Initial range for exponential backoff for Snappable insertion
      maxJobFetcherStalenessMillis:
        type: integer
        format: int32
        description: Status server will report unhealthy status if no useful work
          has been done for this span of time.
      jobScanCacheBaseDir:
        type: string
        description: Base directory to create job scan cache files
      jobScanCacheStalenessThresholdMillis:
        type: integer
        format: int32
        description: Do not read a job scan cache from if the timestamp is older than
          this duration
      jobScanCacheReadRetrySleepMillis:
        type: integer
        format: int32
        description: Time to sleep in between retries of reading job scan cache from
          file
      snappableIndexJobFrequencyInMinutes:
        type: integer
        format: int32
        description: Interval in minutes for the snappable index job
      vmwareSnapshotJobRetries:
        type: integer
        format: int32
        description: Number of retries for the VMware snapshot job
      hypervSnapshotJobRetries:
        type: integer
        format: int32
        description: Number of retries for the hyperv snapshot job
      disableNetworkOnClonedVm:
        type: boolean
        description: Disable network on exported, restored or mounted VM
      nutanixSnapshotJobRetries:
        type: integer
        format: int32
        description: Number of retries for the Nutanix snapshot job
      filesetSnapshotJobRetries:
        type: integer
        format: int32
        description: Number of retries for the fileset snapshot job
      filesetMaxParallelStreams:
        type: integer
        format: int32
        description: Maximum number of parallel streams we can have at the same time
          when fetching filesets
      filesetMaxVolumeSizeMb:
        type: integer
        format: int32
        description: Maximum size for a Fileset volume.
      filesetMinVolumeSizeMb:
        type: integer
        format: int32
        description: Minimum size for a Fileset volume.
      filesetOptimalNumDisks:
        type: integer
        format: int32
        description: Optimal number of disks per snapshot
      filesetExtraSlackPercent:
        type: integer
        format: int32
        description: Extra percentage to be added to physical space estimates with
          the purpose of accomodating estimation errors.
      filesetExtraSlackPercentFirstSnapshot:
        type: integer
        format: int32
        description: Extra percentage to be added to the first snapshot's physical
          space estimate with the purpose of delaying the growth in number of disks.
      filesetChangePercentThresholdForNewBaseSnapshot:
        type: integer
        format: int32
        description: Fileset change percentage threshold that is used to ignore the
          previous base snapshot and recreate a new base.
      mssqlSnapshotJobRetries:
        type: integer
        format: int32
        description: Number of retries for the Mssql snapshot job
      selfRefreshingInMemoryCacheMaxAcceptableStalenessInMinutes:
        type: integer
        format: int32
        description: If the cached value is stale for more than these many minutes,
          a cache refresh will be triggered.
      maximumDbLogBlobChainLength:
        type: integer
        format: int32
        description: The maximum number of blobs in a single blob chain for database
          logs
      chunkDownloadRetryCount:
        type: integer
        format: int32
        description: Retry count for chunk download from object store in case of a
          network flap
      chunkDownloadBackoffInitialRangeInMs:
        type: integer
        format: int32
        description: Initial back off time for chunk download in case of a failure
      auditJobMaxTimeInMinsForJobToRun:
        type: integer
        format: int32
        description: Max time allowed for a job to run
      auditJobContinuousFailedCountThreshold:
        type: integer
        format: int32
        description: Number of continuous failed jobs that will trigger an alert
      auditJobConsiderationPeriodInHours:
        type: integer
        format: int32
        description: Audit job takes a time interval from the start time of the job
          for which it will audit the  jobs
      auditJobStagnationThresholdInHours:
        type: integer
        format: int32
        description: Number of hours for a job to be considered "stagnant"
      auditJobCancelationThresholdInHours:
        type: integer
        format: int32
        description: Number of hours for a job's cancelation to be considered failed
      jobMaintainerScanCacheNumThreads:
        type: integer
        format: int32
        description: Number of threads to be used by job maintainer task to cache
          data
      jobMaintainerScanCacheMinNumShards:
        type: integer
        format: int32
        description: Initial number of shards to split the job table scan into. This
          will be increased dynamically if TargetJobsPerShard is exceeded.
      jobMaintainerScanCacheTargetJobsPerShard:
        type: integer
        format: int32
        description: Max number of jobs we want in each shard. Bigger may speed up
          the scan, but will make failures/retries more expensive.
      jobMaintainerScanCacheMaxRetriesPerShard:
        type: integer
        format: int32
        description: Number of times to retry fetching a shard before giving up
      jobMaintainerScanCacheRetryDelayInMs:
        type: integer
        format: int32
        description: Time to wait between shard fetch retries
      jobMaintainerScanCacheMaxNumShards:
        type: integer
        format: int32
        description: Upper bound on the number of shards that will be used for a job
          scan. No shard will be shrunk to smaller than 1/<this value> of the total
          token range.
      memoizedMetadataThreadCount:
        type: integer
        format: int32
        description: Number of threads to be used by MemoizedMetadata class
      maxSleepForImmutableDirectoryCreationInMs:
        type: integer
        format: int32
        description: max random sleep in between retries to acquire or release the
          lock to create the immutable directories
      cassandraRepairJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of cassandra repair jobs per node
      cassandraRepairJobFrequencyInMinutes:
        type: integer
        format: int32
        description: Frequency of cassandra repair jobs
      enableSpaceReservation:
        type: boolean
        description: Whether to enable space reservation for background activities
      reservedSpaceFraction:
        type: number
        format: double
        description: Fraction of total space reserved for background activities. This
          is on top of the 5% reserved by sdfs.
      maxReservedSpacePerClusterInMb:
        type: integer
        format: int32
        description: Max amount of reserved space in megabytes in a cluster.
      injectCbtCorruptionException:
        type: boolean
        description: This is a parameter used only for testing the CBT corruption
          code path in a CREATE_SNAPSHOT job. This parameter should be removed once
          we have a better testing framework, that can inject failures using byteman.
          This parameter should be set to true only in test mode. If true, make the
          CopyBluePrintFile call fail to simulate CBT corruption.
      jobIntervalToleranceFactor:
        type: integer
        format: int32
        description: This is the tolerance factor between two job instances's start
          time. Usually if we subtract the start time between two job instances we
          should be within a small factor from the job frequency. If this factor is
          greater than this factor we will log a message and alert back home. We provide
          a larger tolerance for single node mode because it has more limited resources
          to process all the jobs as compared to other platforms.
      cassandraBackupJobPeriodMinutes:
        type: integer
        format: int32
        description: Period of the cassandra backup job, in minutes.
      numCassandraSnapshotsToKeepPerDisk:
        type: integer
        format: int32
        description: Number of cassandra snapshots to keep on each HDD.
      increasedNfcTimeoutSeconds:
        type: integer
        format: int32
        description: When the flag increaseNfcTimeout is set, the NFC timeout will
          be set to this value. A value of -1 would mean do not change the NFC timeout
          setting. The default should be 360000 (100 hours) for clone to work reliably.
          We are using 0 for now because this feature is not production ready yet.
      useHistoricSlaForReports:
        type: boolean
        description: Whether to use historic sla in custom reports. This is currently
          limited to protection task reports only.
      enableCustomReports:
        type: boolean
        description: Whether to enable custom report generation
      enableReportsCleanup:
        type: boolean
        description: Whether to enable global reports cleanup job
      cleanupReportsJobFrequencyInMinutes:
        type: integer
        format: int32
        description: Frequency of reports cleanup job
      cleanupReportsJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent cleanup reports jobs per node
      cleanupReportScratchDirCutoffSeconds:
        type: integer
        format: int32
        description: Staleness in seconds before a report file on scratch can be delete.
          This defaults to number one week.
      cleanupReportJobInstanceRetentionDays:
        type: integer
        format: int32
        description: Staleness in days before a report job instance can be deleted.
      cleanupReportJobInstanceIntervalDays:
        type: integer
        format: int32
        description: The number of days prior to the cutoff date for which report
          job instances should be deleted.
      corruptBlobstoreChainOnIntegrityFailure:
        type: boolean
        description: Whether to mark the blob chain as corrupt if snapshot integrity
          fails for a particular group
      numFileChannelTransferRetries:
        type: integer
        format: int32
        description: FileChannel.transferTo/From doesn't always transfer all the requested
          bytes, and it therefore needs to be retried. This is the maximum number
          of times we will allow it to retry.
      smbSupportedOptions:
        type: string
        description: Smb supported options. List of options is separated by a semicolon
          and the list of valid option values is comma separated.
      smbDefaultOptions:
        type: string
        description: Smb default options. CSV list of options.
      sdfsServiceSocketTimeoutInMs:
        type: integer
        format: int32
        description: Timeout while connecting to SDFS service
      agentServerSocketTimeoutInMs:
        type: integer
        format: int32
        description: Timeout while connecting to agent server service
      enableForceFullForBigVmdk:
        type: boolean
        description: Whether to allow a full to be forced for a big vmdk
      hypervExportJobTimeoutInSeconds:
        type: integer
        format: int32
        description: Timeout for disk copy during create, export, retore snapshot
          jobs
      hypervCheckJobProgressRetries:
        type: integer
        format: int32
        description: Number of retries to check copy job progress
      hypervCheckJobProgressDelayInMs:
        type: integer
        format: int32
        description: Delay between retries of check copy job progress
      hypervWmiJobProgressRetries:
        type: integer
        format: int32
        description: Number of retries to check WMI job progress
      hypervWmiJobProgressDelayInMs:
        type: integer
        format: int32
        description: Delay between retries of check WMI job progress
      sdfsPatchFIleCreationDelayInMs:
        type: integer
        format: int32
        description: Delay between retries of checking sdfs patch file createion job
          progress
      gracePeriodToDeleteJobInMs:
        type: integer
        format: int32
        description: Grace period to delete a job partition. This is needed to avoid
          a race where a job partition is created but the very first instance is not
          yet populated.
      conflictHandlerOpRetries:
        type: integer
        format: int32
        description: Number of retries for the conflict handler operations
      usedStoragePercentThreshold:
        type: integer
        format: int32
        description: Storage used percent threshold to trigger a notification.
      replicationDelegationRetries:
        type: integer
        format: int32
        description: Number of retries for replicaiton delegation requests
      replicationDelegationDelayInMs:
        type: integer
        format: int32
        description: Delay between retries of replication delegation requests
      allowReplicationJobPruneWithoutDelegation:
        type: boolean
        description: Allow pruning of replicaiton job instances even if delegation
          fails
      jflServerThreadCount:
        type: integer
        format: int32
        description: Number of threads to be used by jfl server, which is used to
          compute stream counts and enqueue one-off jobs.
      hypervIngestUseSingleReplica:
        type: boolean
        description: Whether to use single-replica (mirrored) or Reed-Solomon \ for
          Hyper-V Ingest
      gcPublicCloudImageAndInstanceJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent GC AMI jobs per node
      gcPublicCloudImageAndInstanceJobFrequencyInMinutes:
        type: integer
        format: int32
        description: Interval for GC jobs in minutes
      jobFetcherConsecutiveErrorsThreshold:
        type: integer
        format: int32
        description: Number of consecutive errors JobFetcherLoop will tolerate before
          concluding something is really wrong, giving up, and suiciding. JFL sleeps
          2 minutes between errors by default, so 60 consecutive errors is about 2
          hours.
  GlobalCrystalConfig:
    type: object
    properties:
      useAutoprotectSlaAssignmentWorkflow:
        type: boolean
        description: Whether to use older bulk assignment workflow or newer autoprotect
          workflow in the VM Assignment Screen
      useNewVmAssignmentScreen:
        type: boolean
        description: Whether to use the new VM assignment screen
      useNewVmDetails:
        type: boolean
        description: Whether to use the new VM Details screen
      enableSingleNodeMode:
        type: boolean
        description: Whether to display UI associated with single node appliance
      enableDataNetworkConfiguration:
        type: boolean
        description: Whether to display UI associated with dedicated data network
      enableIpmiConfiguration:
        type: boolean
        description: Whether to display UI associated with IPMI
      useRemoteReplicationRetentionPanel:
        type: boolean
        description: Whether to show UI associstaed with remote replication retention
      useLocalReplicationRetentionPanel:
        type: boolean
        description: Whether to show UI associstaed with local replication retention
      enableThrottlingUi:
        type: boolean
        description: Whether to display UI associated with throttling
      apiTokenTimeToLiveMinutes:
        type: integer
        format: int32
        description: Number of minutes a REST API token can be idle before expiration
      apiTokensPerUser:
        type: integer
        format: int32
        description: Number of active REST API tokens a user can have
      missedSnapshotActivityInterval:
        type: integer
        format: int32
        description: Number of hours to look before and after a missed snapshot for
          activities
      enableMissedSnapshotsPage:
        type: boolean
        description: Associates the missing snapshot times with their activity details
      unmanagedObjectPaginationLimit:
        type: integer
        format: int32
        description: Pagination limit for the unmanaged object page
      enableOrganizations:
        type: boolean
        description: Whether to display UI associated with Organizations
      globalSearchLoadDelayInSec:
        type: integer
        format: int32
        description: How long to delay loading global search
      enableConvertToCloud:
        type: boolean
        description: Whether to display UI for convert-to-cloud feature
      enableKmipAndKeyRotation:
        type: boolean
        description: Whether to enable KMIP setting and key rotation
  GlobalFilesetConfig:
    type: object
    properties:
      compression_type_for_rba:
        type: integer
        format: int32
        description: Compression type to use for rba
      rba_remote_transfer_size:
        type: integer
        format: int32
        description: Maximum size for remote reads and writes
      rba_bulk_transfer_size:
        type: integer
        format: int32
        description: Maximum size for bulk data transfers
      rba_bulk_copier_buffer_bytes:
        type: integer
        format: int32
        description: Threaded copier buffer for bulk remote reads
      rba_file_copier_buffer_bytes:
        type: integer
        format: int32
        description: Threaded copier buffer for remote data copy
      rba_bulk_reader_batch_files:
        type: integer
        format: int32
        description: Maximum number of files to accumulate in a single batch read
      rba_bulk_writer_batch_files:
        type: integer
        format: int32
        description: Maximum number of files to accumulate in a single batch write
      rba_bulk_writer_batch_directories:
        type: integer
        format: int32
        description: Maximum number of directories to accumulate in a single batch
          write
      rba_bulk_writer_batch_symlinks:
        type: integer
        format: int32
        description: Maximum number of symlinks to accumulate in a single batch write
      rba_bulk_writer_batch_set_stats:
        type: integer
        format: int32
        description: Maximum number of set stats to accumulate in a single batch write
      rba_max_file_errors:
        type: integer
        format: int32
        description: Maximum number of file errors to log when restoring files
      filesetEnablePatchCache:
        type: boolean
        description: Whether PatchCache should be enabled for filesets
      filesetIngestUseSingleReplica:
        type: boolean
        description: Whether to use single-replica (mirrored) or Reed-Solomon \ for
          Fileset Ingest
      filesetIngestUserFacingIOPriority:
        type: boolean
        description: Whether to set MJF IO priority to USER_FACING for \ Fileset Ingest
  GlobalForgeConfig:
    type: object
    properties:
      proxyConfiguration:
        type: string
        description: Proxy Configuration
      log4jMonitorIntervalSeconds:
        type: integer
        format: int32
        description: monitorInterval attribute in log4j2.xml
      log4jTraceLoggers:
        type: string
        description: Comma separated list of logger names to enable TRACE level logging.
          For example akka.io.TcpListener,com.scaledata.metadatastore.CassandraEntityManager,com.scaledata.vmclient.vmware.impl.VmwareToolImpl,com.scaledata.util.package,com.amazonaws
      syslogAppName:
        type: string
        description: App name to use for messages sent to remote syslog servers
      syslogFormat:
        type: string
        description: Format to use for messages sent to remote syslog servers
      syslogHost:
        type: string
        description: Syslog server hostname or IP address
      syslogMdcId:
        type: string
        description: MDC ID to use for messages sent to remote syslog servers
      syslogMsgId:
        type: string
        description: MSGID to use for messages sent to remote syslog servers
      syslogNewLine:
        type: boolean
        description: Whether to send a new line with each remote syslog message
      syslogPort:
        type: integer
        format: int32
        description: Syslog server port
      syslogProtocol:
        type: string
        description: Syslog server protocol
      diskCheckerMountPartitionsRate:
        type: integer
        format: int32
        description: Mount device partitions every this many iterations in the DiskChecker
      diskCheckerPartitionMountRate:
        type: integer
        format: int32
        description: Mount device partitions every so many iterations in the DiskChecker
      brikAwareConversionEnabled:
        type: boolean
        description: Automatically convert nodes to be Brik Aware when necessary
      verifyBrikSerialsOnAdd:
        type: boolean
        description: Sanity check brik serials while adding a node
      blinkLedForDiskStatus:
        type: boolean
        description: Change LED state based on disk status
      blockCassandraForRemovedNodes:
        type: boolean
        description: Block Cassandra traffic to and from removed nodes using iptables
      autoRemoveJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of auto remove jobs per node
      autoRemoveDeadNodeJobFrequencyInMinutes:
        type: integer
        format: int32
        description: Frequency of job to automatically remove dead node
      autoRemoveMaxAllowed:
        type: integer
        format: int32
        description: Number of auto node removals the cluster is allowed to perform
      autoRemoveDeadNodeResurrectionWindowMultiplier:
        type: integer
        format: int32
        description: How stale should a node be before we auto remove it
      autoRemoveMinNodesAtStart:
        type: integer
        format: int32
        description: How many nodes should a cluster have for auto remove to run
      autoInstallOnAddEnabled:
        type: boolean
        description: Is auto install enabled on node add
      autoInstallMinVersion:
        type: string
        description: Minimum supported version for auto install
      subrangeRepairOnNodeRemoval:
        type: boolean
        description: Whether to perform subrange repair on node removal
      cassandraRepairNumThreads:
        type: integer
        format: int32
        description: Num threads parameter passed to cassandra for repair
      cassandraCompactionDefaultThroughput:
        type: integer
        format: int32
        description: Default Cassandra compaction throughput in MBps
      cassandraCompactionRepairThroughput:
        type: integer
        format: int32
        description: Cassandra compaction throughput during a repair operation
      cassandraStreamDefaultThroughput:
        type: integer
        format: int32
        description: Default Cassandra stream throughput in Mbps
      cassandraStreamRepairThroughput:
        type: integer
        format: int32
        description: Cassandra stream throughput during a repair operation
  GlobalInfinityConfig:
    type: object
    properties:
      activeDirectoryJoinRetries:
        type: integer
        format: int32
        description: How many times to retry if joining active directory fails
      esxCbtBuildBlackList:
        type: string
        description: These are ESX6 build numbers that we have collected from cassandra
          dumps that we collect from our customers and host in our EC2 archive2 machine.
          To get to it one can do deployment/infrastructure.sh ssh archive2
      maxNestedVsphereSnapshots:
        type: integer
        format: int32
        description: Maximum number of nested vSphere snapshots to allow VMs to have
      minVsphereDatastoreFreeSpaceRatio:
        type: number
        format: double
        description: None
      vcenterWsClientConnectTimeoutInMilliseconds:
        type: integer
        format: int32
        description: Connect timeout for vCenter web services client, in milliseconds
      vcenterWsClientReadTimeoutInMilliseconds:
        type: integer
        format: int32
        description: Read timeout for vCenter web services client, in milliseconds
      vsphereSnapshotRemovalTimeoutInSeconds:
        type: integer
        format: int32
        description: Timeout for vSphere tasks to remove virtual machine snapshots,
          in seconds
      vsphereSnapshotTaskTimeoutInSeconds:
        type: integer
        format: int32
        description: Timeout for vSphere snapshot related tasks, in seconds
      vsphereVmManageTaskTimeoutInSeconds:
        type: integer
        format: int32
        description: Timeout for vSphere virtual machine management tasks, in seconds
      vsphereRelocateVmTaskTimeoutInSeconds:
        type: integer
        format: int32
        description: Timeout for vSphere virtual machine storage vmotion tasks, in
          seconds
      usePerDatastoreThrottle:
        type: boolean
        description: Whether to check all datastores or VM I/O latency threshold
      perfMetricTimeAggregationPeriodInMinutes:
        type: integer
        format: int32
        description: Number of minutes to aggregate performance metrics over
      vSphereMetricDatastoreTotalLatencyCounterId:
        type: integer
        format: int32
        description: Metric ID in vSphere API for datastore total latency counter
      vSphereMetricMaxTotalLatencyCounterId:
        type: integer
        format: int32
        description: Metric ID in vSphere API for max total latency counter
      vSphereDatastoreTotalReadLatencyCounterId:
        type: integer
        format: int32
        description: Metric ID in vSphere API for datastore total read latency counter
      shouldUseRealTimeDatastoreMetrics:
        type: boolean
        description: Whether or not to use the real-time datastore metric method to
          get the maximum datastore latency
      vSphereHttpsRequestTimeoutInSeconds:
        type: integer
        format: int32
        description: Timeout in seconds for HTTPS requests sent to vSphere
      nfsExportsOverride:
        type: string
        description: Override the contents of /etc/exports with the value specified
          in this parameter. An empty string means no override.
      esxSubnets:
        type: string
        description: Preferred subnets to reach to esx hosts. Comma separated list
          e.g. 192.168.2.10/24,10.255.0.2/16
      bootstrapServicePort:
        type: integer
        format: int32
        description: Port used by Rubrik Bootstrap Service on all platforms
      backupAgentPort:
        type: integer
        format: int32
        description: Port used by Rubrik Backup Agent on all platforms
      backupAgentInternalPort:
        type: integer
        format: int32
        description: Port used by Rubrik Backup Agent internally to the cluster
      backupAgentInternalShareMountRoot:
        type: string
        description: Location inside the Rubrik node where shares will be mounted
      backupAgentChroot:
        type: string
        description: Location inside the Rubrik node where the agent chroots
      enableBackupAgentUpgrade:
        type: boolean
        description: (For internal use only) Whether to enable automatic upgrade of
          Rubrik Backup Agent
      generateConnectorJobFrequencyInMinutes:
        type: integer
        format: int32
        description: Frequency of job generating the agent connector
      defaultMssqlLogBackupFrequencyInSeconds:
        type: integer
        format: int32
        description: The default log backup frequency for MSSQL databases, in seconds
      mssqlRecoverableChainReadBackoffDurationInMs:
        type: integer
        format: int32
        description: Backoff duration between failed read attempts of a MSSQL recoverable
          chain.
      mssqlRecoverableChainReadAttempts:
        type: integer
        format: int32
        description: Number of times to try reading a MSSQL recoverable chain.
      mssqlMaximumLogsPerLogChainPage:
        type: integer
        format: int32
        description: The maximum number of serialized log metadata tuples to be stored
          in a MSSQL log chain page.
      mssqlRecoverableChainMaximumErrors:
        type: integer
        format: int32
        description: The maximum number of serialized log backup error metadata to
          be stored in one MSSQL recoverable chain.
      mssqlExpireRehydratedRangesInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent jobs per node to expire rehydrated
          MSSQL recoverable ranges.
      windowsX64AgentDir:
        type: string
        description: Directory where we store backup agent files for Windows 64-bit
          platform.
      windowsX64AgentVersionFileName:
        type: string
        description: Name of the backup agent version file for Windows 64-bit platform
      windowsX64AgentExeFileName:
        type: string
        description: Name of the backup agent executable for Windows 64-bit platform
      linuxX64AgentVersionFileName:
        type: string
        description: File containing the agent version for Linux 64-bit platform
      windowsClusterUpdateRetryAttempts:
        type: integer
        format: int32
        description: Maximum number of attempts to update a WindowsCluster during
          discovery or host removal.
      managedObjectApiCacheTtlSecs:
        type: integer
        format: int32
        description: Cache TTL for /managed_object endpoint (in seconds)
      filesetMetadataParallelism:
        type: integer
        format: int32
        description: Parallelism to be used by agent in metadata computation
      filesetRemoteMetadataScanParallelism:
        type: integer
        format: int32
        description: Parallelism to be used by agent in metadata computation during
          the remote metadata scan.
      filesetNasRemoteMetadataScanParallelism:
        type: integer
        format: int32
        description: Parallelism to be used by agent in metadata computation during
          the remote metadata scan on top of a NAS share.
      filesetRestoreWriteParallelism:
        type: integer
        format: int32
        description: Parallelism to be used by agent in data restore when sending
          data.
      filesetNasRestoreWriteParallelism:
        type: integer
        format: int32
        description: Parallelism to be used by agent in data restore when sending
          data to a NAS share.
      vmwareRestoreWriteParallelism:
        type: integer
        format: int32
        description: Parallelism to be used by agent in data restore when sending
          data to a VMWare VM.
      filesetRestoreReadParallelism:
        type: integer
        format: int32
        description: Parallelism to be used by agent in data restore when reading
          data from SDFS.
      vmwareRestoreReadParallelism:
        type: integer
        format: int32
        description: Parallelism to be used by agent in data restore when reading
          data from SDFS and writing to a VMWare VM.
      filesetScriptStatusCheckPeriodMs:
        type: integer
        format: int32
        description: Number of milliseconds after which status of a script running
          on host is checked
      filesetScriptTerminateTimeoutMs:
        type: integer
        format: int32
        description: Number of milliseconds after which a script that has received
          SIGTERM must terminate. After this a SIGKILL will be sent.
      filesetPrefixPathInSdMount:
        type: string
        description: Fileset mount root working directory
      restoreFileTransferTimeoutFactorInMBps:
        type: number
        format: double
        description: We calculate the file transfer to guest timeout using this value.
          For example, if we want to send a 1MB file and the value is 0.05 (MBps),
          then the timeout is 20s. This value is essentially the lowest MBps transfer
          rate tolerated when we are pushing a file to the guest VM. Be aware of VMware
          KB 2144004 - the transfer rate to guest VMs is limited to 2MBps
      minRestoreFileTransferTimeoutInSeconds:
        type: integer
        format: int32
        description: The minimum file transfer timeout in seconds during the restore
          file job. This is to protect against too small of timeouts for small files.
      restoreFileCreateDirOrLinkTimeoutInSeconds:
        type: integer
        format: int32
        description: The amount of time to wait for creating a guest directory or
          symlink in the restore file job before timing out.
      enableHostNameOverrideForPushFileToGuest:
        type: boolean
        description: Whether we allow overriding the API-returned host IP with the
          VMware host's name when we push a file to guest
      useMjfForFilesetIngest:
        type: boolean
        description: If set, we use mjf as backing disks for the fileset ingest as
          opposed to scratch
      filesetEnableFingerprinting:
        type: boolean
        description: If set, we will enable fingerprinting for incremental backups
      filesetEnableVss:
        type: boolean
        description: If set, we will take VSS snapshots in Windows
      vssSnapshotTimeoutInSeconds:
        type: integer
        format: int32
        description: The timeout for a VSS snapshot operation
      filesetNumFilesReducedWarningPercentage:
        type: integer
        format: int32
        description: Issues a warning if the number of files is reduced by this percentage
          or more.
      filesetIgnoreRestoreErrors:
        type: boolean
        description: Tolerate failure during file write or creation during fileset
          restore and export jobs.
      guestOperationRetries:
        type: integer
        format: int32
        description: How many times to retry guest operations to handle InvalidState
          exceptions from VMware KB 2145245
      guestOperationRetryTimeoutInSeconds:
        type: integer
        format: int32
        description: Number of seconds before retrying guest operation after InvalidState
          exception from VMware KB 2145245
      mssqlEnableRecoveryCompatibilityCheck:
        type: boolean
        description: Whether to check the export/restore target instance is compatibile
          with the source database.
      maxBytesToDownloadFromVmwareLog:
        type: integer
        format: int32
        description: The maximum bytes we download from the vmware.log, from the end
          of file. If it is larger than the log size, it will retrieve the complete
          file.
      supportedVCenterVersions:
        type: string
        description: The supported vmware virtual center version list
      collectAclsDuringSnapshotForWindowsVms:
        type: boolean
        description: Whether we should collect file permissions for Windows VMs during
          snapshot
      supportedESXHostVersion:
        type: string
        description: The supported vmware ESX HOST version list
      vmwareProxyVmNamePrefix:
        type: string
        description: The prefix prepended to names of proxy VMs created by Rubrik
          in user vCenter. Proxy VMs are created for storage array based ingest. This
          prefix contains a magic number which serves as a unique identifier. Such
          VMs should not be refreshed during VmwareRefresh. This prefix will also
          be used to cleanup leftover proxy VMs.
      mssqlEnableNewDagSupport:
        type: boolean
        description: Feature toggle used during development of new dag design. True
          to enable use of new dag design.
      mssqlEnableDifferentialBackup:
        type: boolean
        description: Whether to do differential backup
      mssqlDifferentialBackupThreshold:
        type: number
        format: double
        description: Fall back to full backup if database file total change size divids
          total file size < this value
      shouldDeleteRestoreFileGuestWorkingDir:
        type: boolean
        description: Whether we should delete the guest VM temporary working dir created
          by the RESTORE_FILE job. This toggle is useful when we want to examine the
          files created in the tmp dir while debugging customer cases.
      removeVmwareSnapshotRetryDurationInSeconds:
        type: integer
        format: int32
        description: The time period during which removing VMware snapshot operations
          should be tried again
      removeVmwareSnapshotMaxSleepInSeconds:
        type: integer
        format: int32
        description: The maximum amount of time to sleep before trying to remove the
          VMware snapshot again
      resolveVmwareSnapshotIssuesDurationInSeconds:
        type: integer
        format: int32
        description: The time period during which resolving VMware snapshot issue
          operations should be tried again
      resolveVmwareSnapshotIssuesMaxTries:
        type: integer
        format: int32
        description: The maximum times that resolving VMware snapshot issue operation
          should be tried.
      mssqlLogBackupTimeoutInSeconds:
        type: integer
        format: int32
        description: The timeout for a SQL Server log backup operation
      mssqlDefaultMaxDataStreamsPerDatabase:
        type: integer
        format: int32
        description: The default value of maximum number of data streams per database
      hostPublicCertificateFolder:
        type: string
        description: A folder where the public certificates for known hosts will be
          stored.
      vmPublicCertificateFolder:
        type: string
        description: A folder where the public certificates for known virtual machine
          will be stored.
      vssThreadTimeOutInMinute:
        type: integer
        format: int32
        description: The number of minutes that windows background thread that wait
          if there is no status update. This will prevent the thread that holds vss
          mutex hang there forever and not release mutex.
      dataTransferNotificationIntervalInMInute:
        type: integer
        format: int32
        description: The interval in minute that cluster notify the windows client
          that transfer is still in progress.
      removeNutanixSnapshotRetryDurationInSeconds:
        type: integer
        format: int32
        description: The time period during which removing Nutanix snapshot operations
          should be tried again
      removeNutanixSnapshotSleepInSeconds:
        type: integer
        format: int32
        description: The amount of time to sleep before trying to remove the Nutanix
          snapshot again
      removeNutanixObjectsRetries:
        type: integer
        format: int32
        description: The number of times to retry removing Nutanix objects in a job
          (e.g. create/export snapshot)
      removeNutanixObjectsSleepInSeconds:
        type: integer
        format: int32
        description: The amount of time to sleep before trying to remove Nutanix objects
          in a job (e.g. create/export snapshot)
      nutanixClientPageSize:
        type: integer
        format: int32
        description: Page size to request on "list" queries
      windowsMsiPath:
        type: string
        description: The path where we store the msi for windows agent.
      certificateFileNameForWindows:
        type: string
        description: The cluster certificate file name for windows agent
      vmwareFileRestoreUseZip:
        type: boolean
        description: Should zip fle restoration method be attempted (unconditionally
          fallback to file-by-file on False)
      vmwareFileRestoreUseNtfsSecAudit:
        type: boolean
        description: Should restoring Windows ACLs from raw block device via `ntfs-3g.secaudit`
          be attempted (unconditionally fallback to the list generated during backup
          on False)
      guestOsWithVssSupport:
        type: string
        description: Guest Operating Systems for which VSS consistent snapshots are
          supported
      sambaShareNameLength:
        type: integer
        format: int32
        description: Recommended length for the name of a Samba share. A name of this
          length composed of random lowercase alphanumeric characters should be resistant
          to brute-force guessing.
      nutanixIscsiQualifiedName:
        type: string
        description: The Nutanix iSCSI Qualifed Name (IQN). It is generally fixed.
          It's encouraged to have 1 IQN for the entire company.
      vmwareVixDefaultTransportModes:
        type: string
        description: Priority order of transport modes to use by default for vix disk
          connections.
      shouldAllowNonValidatingNutanixClient:
        type: boolean
        description: Whether the Nutanix client allows non-validating connections.
          Users who want secure connections will need to generate valid certificates
          for their Nutanix cluster and import them to the Rubrik nodes.
      tlsProtocolForNutanixClient:
        type: string
        description: TLS protocol to be used when connecting to Nutanix cluster
      tlsCipherSuitesForNutanixClient:
        type: string
        description: TLS cipher suites to use when connecting to Nutanix cluster
      shouldVerifyHostnameForNutanixClient:
        type: boolean
        description: Whether to verify name in HTTPS session when connecting to Nutanix
          cluster
      nutanixValidateClusterTimeoutInSeconds:
        type: integer
        format: int32
        description: Timeout, in seconds, to wait for API call to validate Cluster
      nutanixClusterStatusTimeoutInSeconds:
        type: integer
        format: int32
        description: Timeout, in seconds, to wait for API call to get Cluster status
      tlsProtocolForVmwareVersionPreSixOrUnknown:
        type: string
        description: TLS protocol to be used when connecting to vCenter or ESX whose
          version is unknown or lower than 6.0
      tlsProtocolForVmwareVersionSix:
        type: string
        description: TLS protocol to be used when connecting to vCenter or ESX whose
          version is equal to or higher than 6.0
      tlsCipherSuitesForVmwareVersionPreSixOrUnknown:
        type: string
        description: TLS cipher suites to use when connecting to vCenter or ESX whose
          version is unknown or lower than 6.0
      tlsCipherSuitesForVmwareVersionSix:
        type: string
        description: TLS cipher suites to use when connecting to vCenter or ESX whose
          version is unknown or lower than 6.0
      tlsNameVerificationForVmware:
        type: boolean
        description: Whether to verify name in HTTPS session when connecting to Vmware
          hosts.
      useVddk6:
        type: boolean
        description: Whether to enable VDDK6. To enable TLS certificates validation
          from VIX, or use IPv6, this needs to be true.
      vmwareVerifyIncrementalsEnabled:
        type: boolean
        description: Whether additional verification should be performed for Vmware
          Incremental snapshots
      vmwareVerifyIncrementalsMaxBytes:
        type: integer
        format: int32
        description: Maximum number of bytes to verify for a Vmware Incremental
      sequenceNumberGenerationRetries:
        type: integer
        format: int32
        description: The number of times to retry generating a sequence number
      vmwareMountNfsCommonOptions:
        type: string
        description: Comma separated list of common NFS share options used by all
          VMware virtual machine live mounts
      esxDatastoreAccessibleTimeoutInSecs:
        type: integer
        format: int32
        description: The number of seconds to wait a new NAS datastore to become accessible.
      nutanixApiCallRetries:
        type: integer
        format: int32
        description: How many times to retry a Nutanix API rest call. This aims to
          alleviate problems from flaky networks.
      nutanixApiCallRetryTimeoutInSeconds:
        type: integer
        format: int32
        description: Number of seconds before retrying a Nutanix API rest call
      nutanixApiServiceUnavailableRetryTimeoutInSeconds:
        type: integer
        format: int32
        description: Number of seconds before retrying a Nutanix API rest call after
          we received a 503 (Service Unavailable) response code. Nutanix uses 503
          to signal API usage overload.
      vmLookforHostRetries:
        type: integer
        format: int32
        description: Number of retries if we can't find the host of virtual machine
      vmLookforHostSleepTimeInMs:
        type: integer
        format: int32
        description: The time to sleep if we fail previous try to retrieve a host
          object for a given virtual machine
      vSphereMinimunHardwareVersion:
        type: integer
        format: int32
        description: The minimum vsphere hardware version that we will support
      vmwareAdvancedConfigsToExclude:
        type: string
        description: The list of VMware virtual machine advanced configs to be excluded
          when mount or export a new virtual machine.
      autoInstallAgentOnVms:
        type: boolean
        description: Determines whether to automatically install the Rubrik Backup
          Service on virtual machines. Default is false, which means automatic installation
          is disabled. Set to true to enable automatic installation.
      shouldUseChangedRegionsForNutanixFulls:
        type: boolean
        description: Whether we should query changed regions when creating Nutanix
          full snapshots. Using the changed regions we can identify and drop ZEROED
          regions.
      nutanixCbtPerNodeScalingFactor:
        type: integer
        format: int32
        description: Number of CBT requests a Nutanix node can concurrently handle
      shouldNutanixAllocateDiskSpace:
        type: boolean
        description: Whether or not Nutanix should allocate disk space using the disk
          space semaphore
      shouldThrottleNutanixCbtRequests:
        type: boolean
        description: Whether or not we should throttle CBT requests on a Nutanix cluster,
          which also affects if we store a host count
      numNodesPerNutanixCluster:
        type: string
        description: This is a HACK and is dynamically changed from code. It is a
          map from Nutanix cluster ID to the number of nodes. In 4.0, we did not get
          a schema change in to store these, so will have to resort to this.
      defaultNumNutanixNodes:
        type: integer
        format: int32
        description: Default number of Nutanix nodes if the value isn't populated
          yet
      shouldUseV3HostCount:
        type: boolean
        description: Whether we should use Nutanix V3 host count. Other option is
          V2.
      iscsiDiskIdMappingSleepMs:
        type: integer
        format: int32
        description: Time to sleep after attaching to iSCSI target before mapping
          disk ids to block device paths using entries in /dev/disk/by-id which may
          take a few seconds to populate.
      nutanixAhvHypervisorTypeString:
        type: string
        description: The string that represents an AHV hypervisor in Nutanix API
      enableNutanixClusterAhvTypeCheck:
        type: boolean
        description: Whether we should verify that the Nutanix Cluster consists of
          all AHV nodes on add, update, status, and refresh
      vsphereDeleteNasDatastoreRetries:
        type: integer
        format: int32
        description: Number of retries for deleting a NAS datastore from vSphere.
      vsphereDeleteNasDatastoreRetryIntervalSecs:
        type: integer
        format: int32
        description: Number of seconds to sleep between retries when deleting a NAS
          daatastore from vSphere
      resetCbtOnValidationFailure:
        type: boolean
        description: If VMware incremental snapshot fails on CBT validation, force
          the next snapshot to be a full.
      nutanixApiVersionRegexCheck:
        type: string
        description: Regex to check if this version of Nutanix API is supported
      nutanixNosVersionRegexCheck:
        type: string
        description: Regex to check if this version of NOS is supported
      secureAgentServerSocketTimeoutInMs:
        type: integer
        format: int32
        description: Timeout while waiting for Agent server response
      saveVmwareCbtFile:
        type: boolean
        description: Whether to save the CBT file for VMware incremental snapshots.
      verifyAllNutanixSnapshottableDisks:
        type: boolean
        description: Whether to verify that all the Nutanix VM's snapshottable disks
          are present in the new snapshot.
      enableNutanixApiResponseLogTruncation:
        type: boolean
        description: Whether we allow truncation of known long Nutanix API responses
          such as the changed regions response.
      maxNutanixApiResponseCharsAfterTruncation:
        type: integer
        format: int32
        description: Max number of characters of the raw Nutanix API response we will
          log if truncation is enabled for the response.
  GlobalJarvisConfig:
    type: object
    properties:
      sfdcOrgId:
        type: string
        description: Salesforce Organization ID for Rubrik
      sfdcHostname:
        type: string
        description: Salesforce hostname for Rubrik support portal
      sfdcAuthEndPoint:
        type: string
        description: Salesforce community portal endpoint for login
      sfdcRegistrationSvcEndPoint:
        type: string
        description: Salesforce community portal endpoint for cluster registration
          Service
  GlobalManagedVolumeConfig:
    type: object
    properties:
      managedVolumeReadOnlyExportOptions:
        type: string
        description: Export options for managed volume in read-only mode.
      managedVolumeReadWriteExportOptions:
        type: string
        description: Export options for managed volume in read-write mode.
      managedVolumeCleanupWriteLockWaitMs:
        type: integer
        format: int32
        description: Maximum time waiting for a the managed volume cleanup read write
          lock in write mode.
      managedVolumeCleanupFrequencyInMinutes:
        type: integer
        format: int32
        description: Number of minutes between managed volume cleanup jobs
      managedVolumeCleanupJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent managed volume cleanup jobs per
          node
      managedVolumeCleanupWriteLockSleepMs:
        type: integer
        format: int32
        description: Sleep time between checks for the managed volume cleanup read
          write lock in write mode.
      managedVolumeCleanupDiscoverTimeoutInMs:
        type: integer
        format: int32
        description: Maximum time to wait for the managed volume cleanup discovery
          to scan all devices in a single node.
      managedVolumeSnapshotJobRetries:
        type: integer
        format: int32
        description: Number of retries for the managed volume snapshot job
      managedVolumeSnapshotFrequencyInMinutes:
        type: integer
        format: int32
        description: Number of minutes between managed volume snapshot jobs
      managedVolumeSnapshotJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent managed volume snapshot jobs per
          node
      managedVolumeExportJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent managed volume export jobs per node
      managedVolumeUnexportJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent managed volume unexport jobs per
          node
      managedVolumeRebaseJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent managed volume rebase jobs per node
      managedVolumeConcurrentPatchConversionsPerNode:
        type: integer
        format: int32
        description: Maximum number of concurrent managed volume patch file conversions
          per node
      managedVolumePatchFileCompressionType:
        type: string
        description: Compression type for managed volume patch files
      managedVolumePatchCreationStatusCheckPeriodMs:
        type: integer
        format: int32
        description: Period between patch file creation checks for managed volumes.
      managedVolumeMaxDiskSizeMb:
        type: integer
        format: int32
        description: Maximum size for a managed volume disk
      managedVolumeMinDiskSizeMb:
        type: integer
        format: int32
        description: Minimum size for a managed volume disk.
      managedVolumeOptimalNumDisks:
        type: integer
        format: int32
        description: Optimal number of disks per snapshot
      managedVolumeMaxChannels:
        type: integer
        format: int32
        description: Maximum number of channels per managed volume
      managedVolumeSdfsMountPath:
        type: string
        description: Directory where managed volumes are mounted in Sdfs
      managedVolumeMountPath:
        type: string
        description: Directory where managed volumes are mounted for export
      managedVolumeSnapshotAcquireTimeoutInSeconds:
        type: integer
        format: int32
        description: Maximum wait time when acquiring the semaphore while taking snapshots
      managedVolumeMaintainJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent managed volume maintain jobs per
          node
      managedVolumeMaintainJobIntervalInMinutes:
        type: integer
        format: int32
        description: Interval for managed volume maintainer jobs in minutes
      managedVolumeResetJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent managed volume reset jobs per node
      managedVolumeMaintainJobRetries:
        type: integer
        format: int32
        description: Number of retries for the managed volume maintain job
      managedVolumeExportJobRetries:
        type: integer
        format: int32
        description: Number of retries for the managed volume export job
      managedVolumeUnexportJobRetries:
        type: integer
        format: int32
        description: Number of retries for the managed volume unexport job
      managedVolumeResetJobRetries:
        type: integer
        format: int32
        description: Number of retries for the managed volume reset job
      managedVolumeStatePersistRetries:
        type: integer
        format: int32
        description: Number of retries when trying to transition managed volume state
      managedVolumeReportJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent managed volume report jobs per node
      managedVolumeReportJobRetries:
        type: integer
        format: int32
        description: Number of retries for the managed volume report job
      managedVolumeReportJobIntervalInMinutes:
        type: integer
        format: int32
        description: Number of minutes between refreshes of managed volume stats
      managedVolumeMaxChannelsPerNode:
        type: integer
        format: int32
        description: Maximum number of channels per node for all managed volumes of
          the cluster.
      managedVolumeMaxChannelsPerManagedVolume:
        type: integer
        format: int32
        description: Maximum number of channels per managed volume.
      managedVolumeMaxSizePerChannelInGb:
        type: integer
        format: int32
        description: Maximum size per managed volume channel in GBs
      managedVolumeEnablePatchCache:
        type: boolean
        description: Whether PatchCache should be enabled for managed volumes
      managedVolumeIngestUseReedSolomon:
        type: boolean
        description: Whether to use Reed-Solomon or Mirrored (2-way) \ for Managed
          Volume Ingest
      managedVolumeIngestUserFacingIOPriority:
        type: boolean
        description: Whether to set MJF IO priority to USER_FACING for \ ManagedVolume
          Ingest
      useFloatingIpForManagedVolume:
        type: boolean
        description: Whether to use nodes with floating IP to distribute managed volume
          channels. if set to false, all nodes in the cluster will be used to distribute
          the channels. To correctly use floating IPs for managed volume, user has
          to configure as many floating IP as nodes in cluster and they should be
          configured on bond0 (10G) interfaces. However there are units in field which
          have only one floating IP per cluster (for replication and GUI failover
          purposes) and this single floating IP is configured on the management interface
          (1G) If only a single floating IP is configured, all channels will be mapped
          to the single node that currently owns this floating IP severly hobbling
          parallel ingest using RMAN channels.
      sdfsServiceSocketTimeoutInMs:
        type: integer
        format: int32
        description: Timeout while connecting to SDFS service
      managedVolumeNameLengthMax:
        type: integer
        format: int32
        description: Maximum length of managed volume name
  GlobalMssqlConfig:
    type: object
    properties:
      physicalHostLogBackupThrottleMaxRefCount:
        type: integer
        format: int32
        description: Maximum number of concurrent MSSQL log backup jobs per physical
          host
      mssqlDagUpdateRetryAttempts:
        type: integer
        format: int32
        description: Maximum number of attempts to update a MssqlDag when adding or
          removing a database ID.
      fileTransferParallelism:
        type: integer
        format: int32
        description: The number of concurrent file transfer requests
      fileTransferBlockSize:
        type: integer
        format: int32
        description: Block size used to transfer file data in MB
  GlobalShieldConfig:
    type: object
    properties:
      authorizationRaceInitialRangeForBackOffInMs:
        type: integer
        format: int32
        description: Initial range for exponential backoff for manipulation of explicit
          authorizations
      authorizationRaceMaxRetryAttempts:
        type: integer
        format: int32
        description: Number of retries for manipulation of explicit authorizations
      clientSslCipherSuites:
        type: string
        description: SSL cipher suites enabled with a client socket in order of preference,
          colon(:) separated.
      groupMembershipCacheRefreshSecs:
        type: integer
        format: int32
        description: Interval at which a user's group membership is refreshed from
          its auth domain
      groupMembershipCacheEvictionSecs:
        type: integer
        format: int32
        description: Period of inactivity after which a user's group membership is
          evicted from the cache
      ldapQueryDelayInMs:
        type: integer
        format: int32
        description: Delay in ms for LDAP queries (for performance simulation)
      ldapsTlsProtocol:
        type: string
        description: Protocol to use for LDAPS connections. See <http://docs.oracle.com/javase/7/docs/technotes/guides/security/
          StandardNames.html#SSLContext> for more details.
      principalSearchApiCacheTtlSecs:
        type: integer
        format: int32
        description: Cache TTL for /principal_search endpoint (in seconds)
      sendStackTraceInServerErrorRestResponse:
        type: boolean
        description: Flag determining whether stack traces should be sent along with
          the '500 server error' response.
      serverSslCipherSuites:
        type: string
        description: SSL cipher suites enabled with a server socket in order of preference,
          colon(:) separated
      isSoftwareEncryptionAtRestEnabled:
        type: boolean
        description: Flag determining whether software encryption at rest is enabled.
      sprayMinumumTlsVersion:
        type: string
        description: Minimum TLS Version for Spray server. Allowed values are TLSv1,
          TLSv1.1, TSLv1.2
      sprayServerTlsCipherSuites:
        type: string
        description: TLS cipher suites enabled with a server socket for spray server
          in order of preference, colon(:) separated
      registrationPublicRSAKey:
        type: string
        description: Path to public RSA key for cluster registration service.
      supportTunnelInactivityTimeoutInSeconds:
        type: integer
        format: int32
        description: Inactivity timeout after which support tunnel is automatically
          closed. Activity is defined as executing at least one command when logged
          in via SSH as the rksupport user.
      verifyEncryptionKeysFrequencyInMinutes:
        type: integer
        format: int32
        description: Frequency in minutes to run job to verify KMIP connectivity (if
          enabled).
      csrRsaKeyBits:
        type: integer
        format: int32
        description: Number of bits used for RSA key in certificate signing request
      csrMessageDigestAlgorithm:
        type: string
        description: Message digest algorithm used in certificate signing request
  GlobalSnapshotConfig:
    type: object
    properties:
      similarity_threshold:
        type: number
        format: double
        description: Similarity threshold to pick a sim disk
  GlobalThorConfig:
    type: object
    properties:
      archivalLockManagerCacheTimeoutInMilis:
        type: integer
        format: int32
        description: The archival lock manager caches the contents of the cluster
          lock file and the cluster encryption file. This specifies the expiration
          time on that cache.
      azureUploadStreamSizeInMB:
        type: integer
        format: int32
        description: For Azure we upload files in chunks. This specifies the size
          of that chunk. For prod it is set to 5 Gigs
      useNfsUploadInBlocks:
        type: boolean
        description: This is a feature toggle for NFS block uploading. When false,
          NFS will upload files in a single part. When true, NFS will use the same
          codepath as Azure for block uploading.
      useNfsUploadInBlocksWithFileChannel:
        type: boolean
        description: This is a feature toggle for an improvement over NFS block uploading.
          NFS upload in single part uses FileChannel to copy the file, whereas the
          Azure codepath does not. This feature uses FileChannel together with block
          uploading.
      defaultChunkSizeForEncryptedFileChannelTransferInMiB:
        type: integer
        format: int32
        description: While sending files over NFS, we use FileChannels to send data
          instead of using java InputStreams as FileChannels are much faster. In order
          to use FileChannel, we either need a file or a byte array. When we have
          encrypted streams, we do not want to instantiate a file from the encrypted
          stream. That leaves us with the option of instantiating byte arrays out
          of the encrypted stream. As the stream can be huge, it is not possible to
          simply convert the entire stream to a byte array, so we instantiate the
          byte arrays one chunk at a time. This config dictates the size of such a
          chunk.
      nfsUploadStreamSizeInMB:
        type: integer
        format: int32
        description: For NFS we upload files in chunks. This specifies the size of
          that chunk. For prod it is set to 5 Gigs
      ignoreEncryptionPasswordAndCreateUnencryptedNfsLocation:
        type: boolean
        description: We no longer allow creation of NFS archival locations without
          encryption. But to test backward compatibility, we still need a way to create
          such unencrypted locations in tests. This flag, when enabled, makes the
          NFS location creation code simply ignore the `encryptionPassword` REST parameter.
      useQstarUploadInBlocks:
        type: boolean
        description: This is a feature toggle for Qstar block uploading. When false,
          Qstar will upload files in a single part. When true, it will use the same
          codepath as Azure for block uploading.
      qstarMaxThreadCountForUpload:
        type: integer
        format: int32
        description: Max number of threads used to upload a file to Qstar
      qstarUploadStreamSizeInMB:
        type: integer
        format: int32
        description: For Qstar archival, we upload files in chunks. This specifies
          the size of that chunk. For prod it is set to 5 Gigs
      qstarSupportIncrementalSnapshots:
        type: boolean
        description: For Qstar archival, we upload only full snapshots. When true,
          incremental snapshots will be uploaded.
      useQstarWebServicesForStatusChecks:
        type: boolean
        description: Use QStar webservices APIs to check space availability, file
          accessibility, and other conditions.
      failFileAccessibleCheck:
        type: boolean
        description: Fail the QStar file accessible check when set. This is for testing
          purposes.
      failSpaceAvailableCheck:
        type: boolean
        description: Fail the QStar space available check when set. This is for testing
          purposes.
      chunkSizeForEncryptionAuthenticationInKB:
        type: integer
        format: int32
        description: For Google Storage, we encrypt data client-side and hash chunks
          to ensure integrity. This specifies the size of each chunk to be hashed.
      thresholdForUploadingFullInMinutes:
        type: integer
        format: int32
        description: Threshold in minutes after which we should try to upload a full
          to archival location (30 * 24 * 60)
      archivalThresholdMultiplierForFullUpload:
        type: integer
        format: int32
        description: We should only upload a full if time elapsed since last full
          is greater than archivalThresholdMultiplierForFullUpload * archival threshold.
          This will ensure that we are not uploading fulls that often
      minTimeForUploadingFullInMinutes:
        type: integer
        format: int32
        description: Minimum time for which we should wait before uploading full even
          if other conditions are met (15 * 24 * 60)
      percentChangeRateForUploadingFull:
        type: integer
        format: int32
        description: Percent change rate of a virtual disk which would make it neccessary
          to upload a full
      maxFullUploadRefsCount:
        type: integer
        format: int32
        description: Max count of jobs that can upload full snapshots
      minFullUploadRefsCount:
        type: integer
        format: int32
        description: Min count of jobs that can upload full snapshots
      maxArchiveJobsThatCanRunOnCluster:
        type: integer
        format: int32
        description: Max number of archive jobs that will run on the cluster irrespective
          of whether a full or increment is being archived
      pctOfFullUploadJobsPerNode:
        type: number
        format: double
        description: Percentage of upload jobs per node that can upload full. If we
          have n jobs running per node then we can have max pctOfFullUploadJobsPerNode
          * n * numNodes jobs that can upload full
      forceFullUploadToArchivalStore:
        type: boolean
        description: Force a full upload to archival store
      chunkDownloadRetryCount:
        type: integer
        format: int32
        description: Retry count for chunk download from object store in case of a
          network flap
      chunkDownloadBackoffInitialRangeInMs:
        type: integer
        format: int32
        description: Initial back off time for chunk download in case of a failure
      ec2EbsVolumeType:
        type: string
        description: Type of the volume to use for instantiating EBS volumes
      ec2EbsDeviceId:
        type: string
        description: Device Id to use for the EBS volume
      ec2EbsMountPoint:
        type: string
        description: Mount point to use to mount the EBS volume
      dropCountInArchivalBandwidthQuery:
        type: integer
        format: int32
        description: Num of elements to drop from the archival bandwidth query This
          is needed because the first few elements have very high value and ui currently
          doesn't provide zooming capability in the graph as a result of which rest
          of the graph looks really skewed. Therefore dropping first few elements
      downloadSnapshotFromCloudJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent download snapshot from cloud jobs
          per node
      maxS3FileSizeInMB:
        type: integer
        format: int32
        description: Max File size that S3 supports
      maxDiskSizeForCloudUploadInGB:
        type: integer
        format: int32
        description: Max Disk Space that should be used by multi part upload s3 api
      partSizeForCloudUploadInMB:
        type: integer
        format: int32
        description: Default part size used for cloud upload
      maxPartSizeForCloudUploadInMB:
        type: integer
        format: int32
        description: Maximum part Size used by multi part upload s3 api
      maxNumPartsForCloudUpload:
        type: integer
        format: int32
        description: Maximum number of parts for a single upload to S3
      awsMaxConnectionsToS3:
        type: integer
        format: int32
        description: The maximum number of allowed open HTTP connections to S3
      awsSocketTimeoutInMillis:
        type: integer
        format: int32
        description: Timeout for reading from a connected socket. default 50 seconds
      awsConnectionTimeoutInMillis:
        type: integer
        format: int32
        description: Timeout for creating new connections. Deafult 10 seconds
      awsConnectionMaxIdleMillis:
        type: integer
        format: int32
        description: The maximum idle time (in milliseconds) for a connection in the
          connection pool. Default 60 seconds
      awsMaxRetriesForRetryableErrors:
        type: integer
        format: int32
        description: Maximum number of retry attempts for failed retryable requests.
      partUploadRetryCount:
        type: integer
        format: int32
        description: Retry count for uploading chunks to S3. This is the number of
          times we retry irrespective of what the failure is
      partUploadInitialSleepInMs:
        type: integer
        format: int32
        description: Initial sleep time in ms when doing back off during part uploads
      ttlForAJenkinsTestBucketInHours:
        type: integer
        format: int32
        description: For buckets used in jenkins test we will delete all files in
          that particular bucket if any file in that bucket exceeds the TTL value
      maxDownloadSnapshotRetries:
        type: integer
        format: int32
        description: Number of retries of the download job which is an one off job
      archivalKeyDownloadBatchSize:
        type: integer
        format: int32
        description: Size of the batch while downloading archival keys
      ec2ImageId:
        type: string
        description: Ec2 ami id for the specific os which can be used to launch an
          ec2 instance
      ec2InstanceType:
        type: string
        description: Ec2 ami id for the specific os which can be used to launch an
          ec2 instance
      trustObjectStoreTlsCertificateOnFirstUse:
        type: boolean
        description: Sets whether or not we should trust self signed certificates
          from private object stores
      tlsProtocolForPrivateObjectStores:
        type: string
        description: TLS protocol to be used when connecting to private object stores
      initialHeapSizeForRubrikBoltService:
        type: string
        description: Initial heap size for Rubrik Bolt Service, ie -Xms
      maxHeapSizeForRubrikBoltService:
        type: string
        description: max heap size for Rubrik Bolt Service, ie -Xmx
      allowListAllKeysForGc:
        type: boolean
        description: Sets whether or not we list all keys to delete with a prefix
          on archival GC, since it could be costly
      multiPartUploadDirectory:
        type: string
        description: Temporary directory where chunks are written to before being
          uploaded by AWS SDK
      sampleFingerprintsToValidate:
        type: integer
        format: int32
        description: Number of fingerprints to validate after archival of a subobject
      cacheBlockSizeInMB:
        type: integer
        format: int32
        description: Block size used by Archival Service helper to download from archival
          source
      archivalServiceHelperThriftTimeoutInSeconds:
        type: integer
        format: int32
        description: Archival Service Helper Thrift Timeout In seconds
      nonCacheableKeyTtlInSeconds:
        type: integer
        format: int32
        description: TTL in seconds for non Cacheable keys that are used for fingerprint
          validation after snapshot upload
      retryForUploadingSubObjectInArchiveJob:
        type: integer
        format: int32
        description: Number of retries to archive a subobject
      retryForValidatingPatchFilesAfterArchive:
        type: integer
        format: int32
        description: Number of retries to validate an archived patch file
      probabilityInPercentToClearNonCacheableKeys:
        type: integer
        format: int32
        description: Probabilty to clear keys that have excceded TTL in non cachable
          keys map
      subObjectsToUploadInParallel:
        type: integer
        format: int32
        description: Count of subobjects that can be uploaded in parallel
      subObjectsToDownloadInParallel:
        type: integer
        format: int32
        description: Count of subobjects that can be downloaded in parallel
      validateFingerprintsAfterDownload:
        type: boolean
        description: Flag whether to validate fingerprints after downlaod
      exitArchivalRecoveryJobCleanly:
        type: boolean
        description: Flag to indicate clean exit of the ArchivalRecovery job. Recovery
          job runs in a rollforward task and tries to recover all snappables, in case
          of even one faliure it will keep on retrying and holding on to all the throttles
          This flag is just a manual indication for the recovery job to exit
      allowLaunchingBolt:
        type: boolean
        description: Flag to indicate if we can instantiate rubrik bolt. Sometimes
          customers might not want to do that because it incurs cost to launch a new
          instance on cloud
      rubrikBoltAwsInstanceType:
        type: string
        description: Instance type for launching rubrik bolt in aws
      boltCloudImagePrefix:
        type: string
        description: Prefix for naming rubrik image on cloud
      recoverySkipPathVerification:
        type: boolean
        description: Flag for skipping the path verification. Path verification could
          be time consuming as it will operate on all the snapshots of the snappable
          and query the cloud to see if the path actually exists
      throttleWaitTimeInSeconds:
        type: integer
        format: int32
        description: Wait time in seconds to acquire throttle
      throttleSleepTimeInSeconds:
        type: integer
        format: int32
        description: Sleep time in seconds for acquiring throttle
      upgradeRequiredForArchivalStore:
        type: boolean
        description: Flag whether to upgrade an Archival Store. This is required as
          part of moving from 2.x to 3.x. The upgrade job will also look at the version
          of archival store, so it is safe to set this as true as there are other
          conditons that need to be met before actual upgrade takes place. The upgrade
          job on successful exit will set this flag to false
      upgradeArchivalStoreFrequencyInMinutes:
        type: integer
        format: int32
        description: Time interval between each upgrade job run
      cloudInstantiationJobFrequencyInMinutes:
        type: integer
        format: int32
        description: Time interval between each instantiation job run
      useArchivalLockManagerCache:
        type: boolean
        description: Feature toggle specifying whether to use a cache for the archival
          lock manager.
      uploadPercentDiskSpaceNeeded:
        type: number
        format: double
        description: Percentage of logical disk space required to construct patch
          files for upload. Scratch dir does not have replication so we will be using
          only x /(3/2) disk space. We can further divide it by a factor of 2.75 provided
          by zstd compression.So the factor of disk usage comes out to be (2/3)/2.75
          = 0.24
      diskSpaceReservedOnArchiveForMetadataInMB:
        type: integer
        format: int32
        description: We need some disk space reserved in the archive for doing metadata
          operations when running expiration or gc on a blobstore group.
      isPrivateObjectStoreOutOfSpace:
        type: boolean
        description: This flag can be set to True if we discover that private object
          store is out of space to do metadata operations.
      acceptableArchivalThresholdViolationInHours:
        type: integer
        format: int32
        description: Grace period we give a snapshot to be archived, in hours
      awsS3ApnUserAgentString:
        type: string
        description: Aws User agent string used to track data uploaded by Rubrik on
          AWS' side
      archivalLocationConnectivityCheckFrequencyInMinutes:
        type: integer
        format: int32
        description: Time interval between each connectivity check run
      sleepTimeForConnectivityCheckInMinutes:
        type: integer
        format: int32
        description: Time interval between each connectivity check run
      importImageWaitTimeInMinutes:
        type: integer
        format: int32
        description: The time to wait for an import image job
      importImageSleepTimeInSeconds:
        type: integer
        format: int32
        description: Time between each time we check the import image job progress
      cloudTransientImageGcTimeInSeconds:
        type: integer
        format: int32
        description: Time to garbage clean a transient cloud image after it is created
      genericComputeWaitTimeInSeconds:
        type: integer
        format: int32
        description: Time to wait for compute tasks without specific configs
      genericComputeSleepTimeInSeconds:
        type: integer
        format: int32
        description: Time to sleep for compute tasks without specific configs
      maxInstantiateJobInstancesPerNode:
        type: integer
        format: int32
        description: The maximum number of cloud instantiation job instances per node
      uploadJobNoWorkDelayInMillis:
        type: integer
        format: int32
        description: Number of milliseconds to delay the job if there is no work to
          do
      cloudInstantiateDelayInMillisIfNoArchivedSnapshot:
        type: integer
        format: int32
        description: Number of milliseconds to delay cloud instantiation job if no
          snapshot exists at archival location
      cloudInstantiateDefaultImageConversionFrequencyInSeconds:
        type: integer
        format: int32
        description: Interval at which the instantiation job runs to convert the latest
          snapshot to a cloud image.
      cloudInstantiateDefaultImageRetentionInSeconds:
        type: integer
        format: int32
        description: Specifies the number of seconds to retain a cloud image that
          is generated for a snappable.
      instantiateSnapshotJobRetries:
        type: integer
        format: int32
        description: Number of retries for instantiating snapshots on cloud
      retryForUploadingInInstantiateJob:
        type: integer
        format: int32
        description: Number of retries for all uploads required in the cloud instantiate
          job
      retryForConvertingToStreamOptimizedVmdk:
        type: integer
        format: int32
        description: Number of retries for converting monolithic flat VMDK to stream-optimized
          VMDK in instantiate job
      subObjectsToConvertForInstantiationInParallel:
        type: integer
        format: int32
        description: Number of sub objects that can be operated on for instantiation
          conversion / upload tasks in parallel
      sshSocketPort:
        type: integer
        format: int32
        description: Socket port to allow inbound ssh traffic
      skipRubrikBoltShutDownInCloudInstantation:
        type: boolean
        description: For debugging purposes we might want access to live instance
          for debugging, so preventing auto shutdown during failures
      boltSecurityGroupId:
        type: string
        description: Security Group to be used for bolt instance on customer public
          cloud. Note that this security group must allow the brik to connect to bolt
          instance using Private IP allowing traffic from ports 2002 and 7780.
      boltSubnetIdForInstantiation:
        type: string
        description: Subnet to be used for bolt instance on customer public cloud.
      usePublicIpForBolt:
        type: boolean
        description: Use public IP for connecting to bolt. Note that we use private
          IP by default which expects the customer to have VPN set up. Ensure that
          Security Group used for bolt instance allows traffic on public IP.
      cloudStorageServiceSocketTimeoutInMs:
        type: integer
        format: int32
        description: Timeout in Ms for client timeout for Cloud storage service
      defaultChunkSizeToEncryptForArchivalInKiB:
        type: integer
        format: int32
        description: While uploading to an encrypted archival location, we break down
          the data into chunks and encrypt them individually. This is the default
          size of these chunks in KiB
      boltInstancesCertificatesDirectory:
        type: string
        description: Directory under which all bolts instances certificates will be
          stored
      retryCountForRubrikBoltInstance:
        type: integer
        format: int32
        description: Number of times to retry when establishing contact with bolt
          instance
      maxCloudInstantiateJobsPerBolt:
        type: integer
        format: int32
        description: Maximum number of cloud instantiation jobs running on a bolt
      deleteCloudInstanceJobRetries:
        type: integer
        format: int32
        description: Number of retries for deleting cloud instances
      deleteCloudImageJobRetries:
        type: integer
        format: int32
        description: Number of retries for deleting cloud images
      useBoltForInstantiation:
        type: boolean
        description: This is a toggle for allowing bolt for instantiation
      boltMachineImageIdForInstantiation:
        type: string
        description: This is a hardcoded image id used in case we want to use a hotfix
          AMI for instantiation. If it's dummy, we use one based on codeVersion.
      boltCloudInitScriptFilePath:
        type: string
        description: This is a cloud init script. May change in case we want to use
          a hotfix for instantiation.
      timeToWaitForThriftJobInstanceInHours:
        type: integer
        format: int32
        description: Time to wait for a thrift-initiated job instance to complete
      sleepTimeForCheckingThriftJobInstanceInMillis:
        type: integer
        format: int32
        description: Time between consecutive checks of thrift-initiated job instance
      qstarDownloadFingerprintSamplingRatio:
        type: number
        format: double
        description: Sampling ratio for fingerprint verification when downloading
          snapshot from Qstar
      genericRetryCount:
        type: integer
        format: int32
        description: Generic retry count to be used in thor code
      sleepTimeForCheckingThriftJobInstanceInMs:
        type: integer
        format: int32
        description: Time between consecutive checks of thrift-initiated job instance
      retryCountForFetchingLogsFromBoltInstance:
        type: integer
        format: int32
        description: Number of times to retry when fetching logs from the bolt instance
      boltLogDir:
        type: string
        description: Top level dir where bolt logs are copied locally. Will be created
          if it doesn't exist.
      boltLogMinFreeSpaceFraction:
        type: number
        format: double
        description: Bolt logs won't be copied locally if the free space on the local
          partition will fall below this fraction.
      boltLogMaxSizeInMB:
        type: integer
        format: int32
        description: Bolt logs won't be copied locally if the log bundle size is more
          than this value.
      boltLogDirMaxSizeFraction:
        type: number
        format: double
        description: Bolt logs won't be copied locally if boltLogDir size will become
          more than this fraction of total space on local partition.
      thriftSocketConnectionTimeoutInSeconds:
        type: integer
        format: int32
        description: Thrift connection timeout when accessing the Archive (S3) random
          access services.
      thriftSocketSendTimeoutInSeconds:
        type: integer
        format: int32
        description: Thrift socket send timeout when accessing the Archive (S3) random
          access services.
      thriftSocketReceiveTimeoutInSeconds:
        type: integer
        format: int32
        description: Thrift socket receive timeout when accessing the Archive (S3)
          random access services.
      hdsEnableMultiPartUpload:
        type: boolean
        description: Enable multipart upload for HDS archival locations.
      nfsSupportedOptions:
        type: string
        description: Nfs supported options. List of options is separated by a semicolon
          and the list of valid option values is comma separated.
      nfsDefaultOptions:
        type: string
        description: Nfs default options. CSV list of options.
  HostFlag:
    type: object
    required:
    - flag
    - value
    properties:
      flag:
        type: string
      value:
        type: string
  HostRegister:
    type: object
    required:
    - hostname
    properties:
      hostname:
        type: string
      hasAgent:
        type: boolean
  HostShareCreate:
    type: object
    required:
    - hostId
    - shareType
    - exportPoint
    properties:
      hostId:
        type: string
      shareType:
        type: string
        enum:
        - NFS
        - SMB
      exportPoint:
        type: string
      username:
        type: string
      password:
        type: string
      domain:
        type: string
  HostShareCredentialDefinition:
    type: object
    required:
    - hostId
    - username
    properties:
      hostId:
        type: string
      username:
        type: string
      password:
        type: string
      domain:
        type: string
  HostShareCredentialDetail:
    type: object
    required:
    - hostId
    - username
    properties:
      hostId:
        type: string
      username:
        type: string
      domain:
        type: string
  HostShareDetail:
    type: object
    required:
    - id
    - hostId
    - hostname
    - shareType
    - exportPoint
    - primaryClusterId
    - status
    properties:
      id:
        type: string
      hostId:
        type: string
      hostname:
        type: string
      shareType:
        type: string
        enum:
        - NFS
        - SMB
      exportPoint:
        type: string
      status:
        type: string
      primaryClusterId:
        type: string
      username:
        type: string
      domain:
        type: string
  HostSharePatch:
    type: object
    properties:
      exportPoint:
        type: string
      username:
        type: string
      password:
        type: string
      domain:
        type: string
  HostSummary:
    type: object
    required:
    - id
    - hostname
    properties:
      id:
        type: string
      hostname:
        type: string
      primaryClusterId:
        type: string
      operatingSystem:
        type: string
      operatingSystemType:
        type: string
      status:
        type: string
  HypervClusterUpdate:
    type: object
    properties:
      configuredSlaDomainId:
        type: string
        description: Assign this VM to the given SLA domain.
  HypervDownloadFileJobConfig:
    type: object
    required:
    - path
    properties:
      path:
        type: string
        description: Absolute file path
  HypervExportSnapshotJobConfig:
    type: object
    required:
    - path
    properties:
      vmName:
        type: string
        description: name of the new VM for export
      hostId:
        type: string
        description: ID of the host to export to
      path:
        type: string
        description: Destination path for the new VM virtual disks
      disableNetwork:
        type: boolean
        description: 'Whether the network should be disabled on mount.This should
          be set true to avoid ip conflict in case of static IPs '
      powerOn:
        type: boolean
        description: Whether the VM should be powered on after export. Default value
          is true
  HypervHierarchyObjectDescendentCount:
    type: object
    properties:
      cluster:
        type: integer
        format: int32
      host:
        type: integer
        format: int32
      vm:
        type: integer
        format: int32
  HypervHostUpdate:
    type: object
    properties:
      configuredSlaDomainId:
        type: string
        description: Assign this VM to the given SLA domain.
  HypervInstantRecoveryJobConfig:
    type: object
    properties:
      vmName:
        type: string
        description: name of the new VM to instantly recover
      hostId:
        type: string
        description: ID of the host to instantly recover to
  HypervMountSnapshotJobConfig:
    type: object
    properties:
      hostId:
        type: string
        description: ID of host for the mount to use
      vmName:
        type: string
        description: Name of the mounted VM
      disableNetwork:
        type: boolean
        description: Whether the network should be disabled on mount.This should be
          set true to avoid ip conflict in case of static IPs.
      powerOn:
        type: boolean
        description: Whether the VM should be powered on after mount. Default value
          is true.
  HypervRestoreFileConfig:
    type: object
    required:
    - path
    - restorePath
    properties:
      path:
        type: string
        description: Absolute file path
      restorePath:
        type: string
        description: Directory of folder to copy files into
  HypervUpdateMountConfig:
    type: object
    required:
    - powerStatus
    properties:
      powerStatus:
        type: boolean
        description: True to power on, false to power off
  HypervVirtualMachineMountSummary:
    type: object
    required:
    - id
    - snapshotDate
    - vmId
    - vmName
    - isReady
    - powerStatus
    properties:
      id:
        type: string
      snapshotDate:
        type: string
        format: date-time
      vmId:
        type: string
      vmName:
        type: string
      mountedVmId:
        type: string
      mountedVmName:
        type: string
      hostId:
        type: string
      hostName:
        type: string
      isReady:
        type: boolean
      powerStatus:
        enum:
        - PoweringOn
        - PoweredOn
        - PoweringOff
        - PoweredOff
        type: string
        description: The power status of the mounted VM(ON,OFF,SLEEP etc.)
      mountRequestId:
        type: string
      unmountRequestId:
        type: string
  HypervVirtualMachineUpdate:
    type: object
    properties:
      configuredSlaDomainId:
        type: string
        description: Assign this VM to the given SLA domain.
  InstancesConfig:
    type: object
    required:
    - jobId
    properties:
      jobId:
        type: string
        description: job id of the job
      status:
        type: string
        description: Status of the job
  InternalExpireSnapshotConfig:
    type: object
    required:
    - snapshotId
    properties:
      snapshotId:
        type: string
        description: ID of the snapshot to expire
      locationId:
        type: string
        description: ID of the location to expire in, or empty if all
  InternalGarbageCollectStatusResult:
    type: object
    required:
    - status
    properties:
      status:
        type: boolean
        description: Whether the snapshots have been GCed or not.
  InternalJobInstanceDetail:
    type: object
    required:
    - id
    - status
    - jobType
    - nodeId
    - isDisabled
    - archived
    properties:
      id:
        type: string
        description: ID of the instance
      status:
        type: string
        description: Status of the job instance
      result:
        type: string
        description: Result of the job instance. Its meaning depends on the job type
          but is usually an ID.
      errorInfo:
        type: string
        description: Error information of the job instance
      startTime:
        type: string
        description: Start time of the job instance
      endTime:
        type: string
        description: End time of the job instance
      jobType:
        type: string
        description: Type of the job
      nodeId:
        type: string
        description: ID of the node where the job runs
      jobProgress:
        type: number
        format: double
        description: The current progress in terms of percentage of the async request.
      isDisabled:
        type: boolean
        description: Whether this job is disabled or not
      archived:
        type: boolean
        description: Whether this job instance has been archived
  InternalSnapshotArchiveGarbageCollectStatusConfig:
    type: object
    required:
    - snapshotDateTuples
    - snappableId
    - locationId
    properties:
      snapshotDateTuples:
        type: array
        items:
          type: string
        description: Snapshots to check for garbage collection, specified as <snapshotID>:::<snapshotDate>
      snappableId:
        type: string
      locationId:
        type: string
  InternalSnapshotGarbageCollectStatusConfig:
    type: object
    required:
    - snappableId
    - snapshotIds
    properties:
      snappableId:
        type: string
      snapshotIds:
        type: array
        items:
          type: string
        description: Snapshots IDs to check for garbage collection
  IpConfig:
    type: object
    required:
    - address
    - netmask
    - gateway
    properties:
      address:
        type: string
      netmask:
        type: string
      gateway:
        type: string
      vlan:
        type: integer
        format: int32
  IpmiAccess:
    type: object
    required:
    - https
    - iKvm
    - virtualMedia
    - ssh
    properties:
      https:
        type: boolean
      iKvm:
        type: boolean
      virtualMedia:
        type: boolean
      ssh:
        type: boolean
  IpmiAccessUpdate:
    type: object
    properties:
      https:
        type: boolean
      iKvm:
        type: boolean
      virtualMedia:
        type: boolean
      ssh:
        type: boolean
  IscsiPortalInfo:
    type: object
    required:
    - host
    - port
    properties:
      host:
        description: Resolvable hostname or IP address of the iSCSI portal
        type: string
      port:
        description: Inbound port on the iSCSI portal, default is 3260
        type: string
      username:
        description: Username for CHAP authentication on the iSCSI device. No value
          for an unauthenticated connection
        type: string
      password:
        description: Password for CHAP authentication on the iSCSI device. No value
          for an unauthenticated connection
        type: string
      usernameIn:
        description: Username for CHAP authentication on the Rubrik cluster. No value
          for an unauthenticate or unidirectional authenticated connection
        type: string
      passwordIn:
        description: Password Username for CHAP authentication on the Rubrik cluster.
          No value for an unauthenticate or unidirectional authenticated connection
        type: string
  JobDetail:
    type: object
    required:
    - id
    properties:
      id:
        type: string
        description: ID of the job
      jobType:
        type: string
        description: Type of the job
      affinity:
        type: string
        description: Affinity of the job
      cronExpression:
        type: string
        description: Cron expression if it is a one time job
      interval:
        type: string
        description: Interval that define the frequency of a scheduled job
      retries:
        type: integer
        format: int32
      enabled:
        type: boolean
        description: Flag to enable/disable a job
  JobInstanceDetail:
    type: object
    required:
    - id
    - status
    - jobType
    - nodeId
    - isDisabled
    properties:
      id:
        type: string
        description: ID of the instance
      status:
        type: string
        description: Status of the job instance
      errorInfo:
        type: string
        description: Error information of the job instance
      startTime:
        type: string
        description: Start time of the job instance
      endTime:
        type: string
        description: End time of the job instance
      jobType:
        type: string
        description: Type of the job
      nodeId:
        type: string
        description: ID of the node where the job runs
      jobProgress:
        type: number
        format: double
        description: The current progress in terms of percentage of the async request.
      isDisabled:
        type: boolean
        description: Whether this job is disabled or not
  JobScheduledResponse:
    type: object
    required:
    - jobInstanceId
    properties:
      jobInstanceId:
        type: string
  JobUpdate:
    type: object
    properties:
      affinity:
        type: string
        description: Affinity of the job
      cronExpression:
        type: string
        description: Cron expression if it is a one time job
      interval:
        type: string
        description: Interval that define the frequency of a scheduled job
      retries:
        type: integer
        format: int32
      enabled:
        type: boolean
        description: Flag to enable/disable a job
  KeyRotationDetail:
    type: object
    required:
    - rotationId
    - nodeId
    - status
    - keyProtection
    - keyRecovery
    properties:
      rotationId:
        type: string
        description: ID of the key rotation.
      nodeId:
        type: string
        description: ID of the node rotating keys.
      status:
        type: string
        enum:
        - queued
        - inProgress
        - success
        - aborted
        description: Status of the key rotation.
      keyProtection:
        type: string
        enum:
        - tpm
        - kmip
        description: Target key protection method.
      keyRecovery:
        type: boolean
        description: Whether to enable Rubrik to recover the encryption keys in the
          event of a hardware failure.
      startTime:
        type: string
        format: date-time
      endTime:
        type: string
        format: date-time
  KeyRotationOptions:
    type: object
    required:
    - keyProtection
    - keyRecovery
    properties:
      keyProtection:
        type: string
        enum:
        - tpm
        - kmip
        description: Target key protection method.
      keyRecovery:
        type: boolean
        description: Whether to enable Rubrik to recover the encryption keys in the
          event of a hardware failure.
  KmipConfiguration:
    type: object
    required:
    - username
    - serverAddress
    - serverCertificate
    properties:
      username:
        type: string
      password:
        type: string
      serverAddress:
        type: string
      serverCertificate:
        type: string
      serverPort:
        type: integer
        format: int32
      clientCertificate:
        type: string
  KmipConfigurationDetail:
    type: object
    properties:
      username:
        type: string
      serverAddress:
        type: string
      serverCertificate:
        type: string
      serverPort:
        type: integer
        format: int32
      clientCertificate:
        type: string
  KmipCsrRequest:
    type: object
    required:
    - username
    properties:
      username:
        type: string
  Link:
    type: object
    required:
    - href
    - rel
    properties:
      href:
        type: string
        description: The link's destination.
      rel:
        type: string
        description: The relation of this link's destination to the current resource.
  LocalBlobstoreConfig:
    type: object
    properties:
      consolidateJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent consolidate jobs per node
      crossJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent cross jobs per node
      reverseJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent reverse jobs per node
  LocalCerebroConfig:
    type: object
    properties:
      createVmwareSnapshotJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent create snapshot jobs per node
      maxConcurrentIngestsPerVm:
        type: integer
        format: int32
        description: Maximum number of ingest streams per virtual machine
      expireJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent expire jobs per node
      mountJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent mount jobs per node
      unmountJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent unmount jobs per node
      pullMssqlLogReplicateJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent pull mssql log replicate jobs per
          node
      pullReplicateJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent pull replicate jobs per node
      pullReplicateRequestsPerNode:
        type: integer
        format: int32
        description: Maximum number of concurrent pull replicate requests from target
          cluster supported per node
      refreshRemoteSnapshotsInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent refresh remote snapshots jobs per
          node
      uploadJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent upload jobs per node
      uploadIndexJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent upload index jobs per node
      snappableIndexJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent index jobs per node
      filesetSnapshotJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent fileset snapshot jobs per node
      mssqlSnapshotJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent mssql snapshot jobs per node
      nutanixSnapshotJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent create Nutanix snapshot jobs per
          node
      sqliteCacheSizePerNodeInKiB:
        type: integer
        format: int32
        description: Size of memory cache per SQLite process in kibibytes. These SQLite
          dbs are used for producing reports.
      hypervSnapshotJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent hyperv snapshot jobs per node
      hypervServerRefreshJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent hyperv server refresh jobs per node
      deleteHostJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent delete host jobs per node
      remoteClusterServiceMinWorkerThreads:
        type: integer
        format: int32
        description: Minimum number of worker threads in remote cluster server thread
          pool
      jflServerMinWorkerThreads:
        type: integer
        format: int32
        description: Minimum number of worker threads in jfl server thread pool
      jflServerMaxWorkerThreads:
        type: integer
        format: int32
        description: Maimum number of worker threads in jfl server thread pool
      filesetMaxParallelCopyStreamsPerSnapshot:
        type: integer
        format: int32
        description: Maximum number of MJF to Patch file streams per job.
      filesetMaxParallelFetchConnectionsPerSnapshot:
        type: integer
        format: int32
        description: Maximum number of parallel fetch connections per snapshot.
      filesetNasMaxParallelFetchConnectionsPerSnapshot:
        type: integer
        format: int32
        description: Maximum number of parallel fetch connections per snapshot on
          top of a NAS share.
  LocalInfinityConfig:
    type: object
    properties:
      maxConcurrentIngestsPerNutanixVm:
        type: integer
        format: int32
        description: Maximum number of Nutanix disks Rubrik should ingest in parallel
  LocalMssqlConfig:
    type: object
    properties:
      logBackupJobInMemorySemShares:
        type: integer
        format: int32
        description: Maximum number of concurrent MSSQL log backup jobs per node
  LocalShieldConfig:
    type: object
    properties:
      authDomainUtilNumThreads:
        type: integer
        format: int32
        description: Number of threads for AuthDomainUtil cache refreshes
      loginNameToUserIdCacheNumThreads:
        type: integer
        format: int32
        description: Number of threads for LoginNameToUserIdCache refreshes
      managedHierarchyCacheNumThreads:
        type: integer
        format: int32
        description: Number of threads for ManagedHierarchyCache refreshes
      principalCacheNumThreads:
        type: integer
        format: int32
        description: Number of threads for principal cache refreshes
  LocalThorConfig:
    type: object
    properties:
      s3MaxThreadCountForUpload:
        type: integer
        format: int32
        description: Max number of threads used to upload a file to S3
      azureMaxThreadCountForUpload:
        type: integer
        format: int32
        description: Max number of threads used to upload a file to Azure
      nfsMaxThreadCountForUpload:
        type: integer
        format: int32
        description: Max number of threads used to upload a file to NFS
      archivalServiceCacheSize:
        type: integer
        format: int32
        description: Number of entries in the archival service Cache
      maxNumConvertToStreamOptimizedVmdkFormatJobs:
        type: integer
        format: int32
        description: Max number of ConvertToStreamOptimizedVmdkFormat jobs allowed
          per node
      maxNumUploadFileJobs:
        type: integer
        format: int32
        description: Max number of UploadFile jobs allowed per node
  LocationPathPoint:
    type: object
    required:
    - managedId
    - name
    properties:
      managedId:
        type: string
      name:
        type: string
  LogMessage:
    type: object
    required:
    - logLevel
    - component
    - message
    properties:
      logLevel:
        type: string
        description: One of FATAL, ERROR, WARNING, INFO, TRACE
      component:
        type: string
        description: Component generating the log
      message:
        type: string
        description: Message to be logged
  ManagedEntitySummary:
    type: object
    required:
    - id
    - name
    - entityType
    properties:
      id:
        type: string
      name:
        type: string
      entityType:
        type: string
  ManagedHierarchyObjectAncestor:
    type: object
    required:
    - id
    - name
    properties:
      name:
        type: string
      id:
        type: string
  ManagedIdList:
    type: object
    required:
    - managedIds
    properties:
      managedIds:
        type: array
        items:
          type: string
  ManagedObject:
    type: object
    required:
    - managedId
    - id
    - objectType
    - ancestors
    properties:
      managedId:
        type: string
      id:
        type: string
      objectType:
        type: string
      ancestors:
        type: array
        items:
          type: string
  ManagedObjectAncestor:
    type: object
    required:
    - managedId
    - name
    properties:
      managedId:
        type: string
      name:
        type: string
  ManagedObjectDescendantCounts:
    type: object
    properties:
      virtualMachine:
        type: integer
        format: int32
      fileset:
        type: integer
        format: int32
        description: Number of physical Linux/Windows filesets
      mssqlDatabase:
        type: integer
        format: int32
      shareFileset:
        type: integer
        format: int32
        description: Number of share filesets
  ManagedObjectProperties:
    type: object
    properties:
      hostname:
        type: string
      operatingSystem:
        type: string
      operatingSystemType:
        type: string
  ManagedVolumeChannelConfig:
    type: object
    required:
    - ipAddress
    - mountPoint
    properties:
      ipAddress:
        type: string
        description: IP address of channel export.
      mountPoint:
        type: string
        description: The path of the exported NFS mount.
  ManagedVolumeDownloadFileJobConfig:
    type: object
    required:
    - path
    properties:
      path:
        type: string
        description: Absolute file path
  ManagedVolumeExportConfig:
    type: object
    required:
    - hostPatterns
    properties:
      hostPatterns:
        type: array
        description: List of host patterns. A host pattern describes a set of hosts
          who can mount the host. It can either be a host name, a network in CIDR
          notation or hostnames matching wildcards * or ?
        items:
          type: string
  Map_Boolean:
    type: object
    additionalProperties:
      type: boolean
  Map_String:
    type: object
    additionalProperties:
      type: string
  MissedSnapshot:
    type: object
    required:
    - archivalLocationType
    - missedSnapshotTime
    properties:
      archivalLocationType:
        type: array
        items:
          type: string
      missedSnapshotTime:
        type: string
        format: date-time
  MountExportSnapshotJobCommonOptions:
    type: object
    properties:
      vmName:
        type: string
        description: Name of the new VM created by mount or export
      disableNetwork:
        type: boolean
        description: Sets the state of the network interfaces when the virtual machine
          is mounted or exported. Use 'false' to enable the network interfaces. Use
          'true' to disable the network interfaces. Disabling the interfaces can prevent
          IP conflicts.
      removeNetworkDevices:
        type: boolean
        description: Determines whether to remove the network interfaces from the
          mounted or exported virtual machine. Set to 'true' to remove all network
          interfaces. The default value is 'false'.
      powerOn:
        type: boolean
        description: Determines whether the virtual machine should be powered on after
          mount or export. Set to 'true' to power on the virtual machine. Set to 'false'
          to mount or export the virtual machine but not power it on. The default
          is 'true'.
      keepMacAddresses:
        type: boolean
        description: Determines whether the MAC addresses of the network interfaces
          on the source virtual machine are assigned to the new virtual machine. Set
          to 'true' to assign the original MAC addresses to the new virtual machine.
          Set to 'false' to assign new MAC addresses. The default is 'false'. When
          removeNetworkDevices is set to true, this property is ignored.
  MssqlDbDefaults:
    type: object
    required:
    - logBackupFrequencyInSeconds
    properties:
      logBackupFrequencyInSeconds:
        type: integer
        format: int64
  MssqlDbSlaAssignment:
    type: object
    required:
    - databaseIds
    properties:
      force:
        description: Execute assignments even if databases in the same availability
          group need to be unprotected. If this is set to false, the assignment may
          fail if other databases in the same availability group are already protected.
          However, even if this is set to true, the assignment can still fail if multiple
          databases in the same availability group are being protected.
        type: boolean
        default: false
      databaseIds:
        type: array
        description: A list of the IDs of the databases being assigned to the SLA
          Domain.
        items:
          type: string
  MssqlDbSlaConflictCheck:
    type: object
    required:
    - databaseIds
    properties:
      databaseIds:
        type: array
        description: A list of the IDs of the databases being assigned to the SLA
          Domain.
        items:
          type: string
  MssqlNonSlaProperties:
    type: object
    properties:
      logBackupFrequencyInSeconds:
        type: integer
        format: int32
        description: Seconds between two log backups. A value of 0 disables log backup.
      logRetentionHours:
        type: integer
        format: int32
        description: Number of hours to retain a log backup. When the value is set
          to -1 the Rubrik cluster retains the log backup until the database snapshots
          that precede the log backup have expired.
      copyOnly:
        type: boolean
        description: Set to true for copy-only backups of the database. Set to false
          for full or differential backups of the database.
  MssqlRestoreEstimateResult:
    required:
    - bytesFromCloud
    properties:
      bytesFromCloud:
        type: integer
        format: int64
        description: Estimate of number of bytes that need to be downloaded from the
          cloud.
  MssqlRestoreFile:
    required:
    - logicalName
    - originalPath
    - originalName
    - length
    - isLog
    - fileId
    properties:
      logicalName:
        type: string
        description: Logical name of the database file to be restored.
      originalPath:
        type: string
        description: Original path of the database file to be restored.
      originalName:
        type: string
        description: Original filename of the database file to be restored.
      length:
        type: integer
        format: int64
        description: Length of the file in bytes.
      isLog:
        type: boolean
        description: Whether this file is the transaction log file.
      fileId:
        type: integer
        format: int64
        description: Original file ID of the database file to be restored.
  MssqlRootProperties:
    type: object
    required:
    - rootType
    - rootId
    - rootName
    properties:
      rootType:
        type: string
        description: Type of the root of this object. The root object is the top-level
          object on which this object lives. If this object is clustered, this will
          be **_WindowsCluster_**. Otherwise, this will be **_Host_**.
        enum:
        - Host
        - WindowsCluster
      rootId:
        type: string
        description: ID of the root of this object.
      rootName:
        type: string
        description: Name of the root of this object.
  MssqlSnappableId:
    required:
    - snappableId
    properties:
      snappableId:
        type: string
        description: ID of snappable
  NfsLocationDefinition:
    type: object
    required:
    - host
    - exportDir
    - fileLockPeriodInSeconds
    - bucket
    - name
    properties:
      host:
        type: string
      exportDir:
        type: string
      nfsVersion:
        type: integer
        format: int32
      authType:
        type: string
      otherNfsOptions:
        type: string
      fileLockPeriodInSeconds:
        type: integer
        format: int64
      bucket:
        type: string
        description: Bucket name cannot contain whitespace or _\\/*?%.:|<>
      name:
        type: string
  NfsLocationUpdate:
    type: object
    properties:
      host:
        type: string
      exportDir:
        type: string
      nfsVersion:
        type: integer
        format: int32
      authType:
        type: string
      fileLockPeriodInSeconds:
        type: integer
        format: int64
      name:
        type: string
  NodeIp:
    type: object
    required:
    - node
    - ip
    properties:
      node:
        type: string
        description: Node this interface is configured on
      ip:
        type: string
        description: IP of the node
  NodeNetworkInterface:
    type: object
    required:
    - vlan
    - ip
    - netmask
    properties:
      netmask:
        type: string
        description: Node this interface is configured on
      ip:
        type: string
        description: IP of the node
      vlan:
        type: integer
        format: int32
        description: VLAN tag of the interface
  NodeOperation:
    type: object
    required:
    - status
    - id
    properties:
      status:
        type: string
      id:
        type: integer
        format: int64
  NodeStatus:
    type: object
    required:
    - id
    - brikId
    - status
    properties:
      id:
        type: string
      brikId:
        type: string
      status:
        type: string
      ipAddress:
        type: string
      needsInspection:
        type: boolean
  NutanixClusterConfig:
    type: object
    required:
    - hostname
    - nutanixClusterUuid
    - username
    - password
    - caCerts
    properties:
      hostname:
        type: string
        description: Address for the Prism host. Any Prism Element or Prism central
          host will do. We will use the highly available IP, if set, and this address,
          if not, to communicate with the cluster.
      nutanixClusterUuid:
        type: string
        description: The UUID of the Nutanix cluster being added. This is required
          because Prism Central may manage multiple clusters, and we need to differentiate
          between them.
      username:
        type: string
      password:
        type: string
      caCerts:
        type: string
        description: Concatenated X.509 certificates in Base64 encoded DER format.
          Each certificate must start with -----BEGIN CERTIFICATE----- and end with
          -----END CERTIFICATE-----.
  NutanixClusterPatch:
    type: object
    properties:
      hostname:
        type: string
        description: Address for the Prism host. Any Prism Element or Prism central
          host will do. We will use the highly available IP, if set, and this address,
          if not, to communicate with the cluster.
      username:
        type: string
      password:
        type: string
      caCerts:
        type: string
        description: Concatenated X.509 certificates in Base64 encoded DER format.
          Each certificate must start with -----BEGIN CERTIFICATE----- and end with
          -----END CERTIFICATE-----.
      configuredSlaDomainId:
        type: string
        description: ID of the SLA Domain that is configured for this Nutanix Cluster.
  NutanixContainer:
    type: object
    required:
    - naturalId
    - name
    - caCerts
    properties:
      naturalId:
        type: string
        description: Natural ID of the Nutanix container.
      name:
        type: string
        description: Name of the Nutanix container.
      caCerts:
        type: string
        description: Concatenated X.509 certificates in Base64 encoded DER format.
          Each certificate must start with -----BEGIN CERTIFICATE----- and end with
          -----END CERTIFICATE-----.
  NutanixDownloadFileJobConfig:
    type: object
    required:
    - path
    properties:
      path:
        type: string
        description: Absolute file path
  NutanixHierarchyObjectDescendantCount:
    type: object
    properties:
      cluster:
        type: integer
        format: int32
      vm:
        type: integer
        format: int32
  NutanixVmExportSnapshotJobConfig:
    type: object
    required:
    - containerNaturalId
    properties:
      containerNaturalId:
        type: string
        description: The natural ID of the container that will store the export VM's
          disks.
      nutanixClusterId:
        type: string
        description: The ID of the Nutanix cluster to export to. If not specified,
          we will default to the VM's cluster.
      vmName:
        type: string
        description: name of the new VM for export
      powerOn:
        type: boolean
        description: Whether the VM should be powered on after export. Default value
          is true
  NutanixVmPatch:
    type: object
    properties:
      configuredSlaDomainId:
        type: string
        description: Assign this VM to the given SLA domain.
      isPaused:
        type: boolean
        description: Whether backup/archival/replication is paused for this VM
  ObjectStoreLocationSummary:
    type: object
    required:
    - name
    - accessKey
    - bucket
    - objectStoreType
    properties:
      objectStoreType:
        type: string
      name:
        type: string
      accessKey:
        type: string
      bucket:
        type: string
        description: 'Bucket name cannot contain whitespace or _\\/*?%.:|<> For AWS,
          bucket name also cannot contain capital letters or underscore

          '
      pemFileContent:
        type: string
      kmsMasterKeyId:
        type: string
      defaultRegion:
        type: string
      endpoint:
        type: string
      numBuckets:
        type: integer
        format: int64
      isComputeEnabled:
        type: boolean
      computeSecurityGroupId:
        type: string
      storageClass:
        type: string
  ObjectStoreReconnectDefinition:
    type: object
    required:
    - name
    - accessKey
    - secretKey
    - bucket
    - objectStoreType
    properties:
      objectStoreType:
        type: string
      name:
        type: string
      accessKey:
        type: string
      secretKey:
        type: string
      bucket:
        type: string
        description: 'Bucket name cannot contain whitespace or _\\/*?%.:|<> For AWS,
          bucket name also cannot contain capital letters or underscore

          '
      pemFileContent:
        type: string
      kmsMasterKeyId:
        type: string
      defaultRegion:
        type: string
      bucketRegion:
        type: string
      endpoint:
        type: string
      isComputeEnabled:
        type: boolean
      computeSecurityGroupId:
        type: string
  ObjectStoreUpdateDefinition:
    type: object
    properties:
      name:
        type: string
      accessKey:
        type: string
      secretKey:
        type: string
      endpoint:
        type: string
      numBuckets:
        type: integer
        format: int64
      isComputeEnabled:
        type: boolean
      computeSecurityGroupId:
        type: string
      storageClass:
        type: string
  OfflineStatSummary:
    type: object
    required:
    - name
    - value
    - frequencyInMin
    - lastUpdateTime
    properties:
      name:
        type: string
      key:
        type: string
      value:
        type: string
      frequencyInMin:
        type: integer
        format: int32
      lastUpdateTime:
        type: string
        format: date-time
  OrganizationCreate:
    type: object
    required:
    - name
    properties:
      name:
        type: string
        description: The name of the Organization
  OrganizationPrincipalDef:
    type: object
    required:
    - id
    - accessLevel
    properties:
      id:
        type: string
        description: The id of the Principal
      accessLevel:
        type: array
        description: The level of access this principal has on the Organization. NOTE
          1) An empty array specifies no access 2) The ManageSla and ManageUser access
          levels require OrgAdmin access
        items:
          type: string
          enum:
          - OrgAdmin
          - ManageSla
          - ManageUser
  Pkcs10CertificateSigningRequest:
    type: object
    required:
    - csr
    properties:
      csr:
        type: string
        description: Base64 encoded PKCS#10 certificate signing request. The request
          should start with -----BEGIN CERTIFICATE REQUEST-----
  PrincipalQuery:
    type: object
    properties:
      principalType:
        type: string
        description: Type of principal (user|group)
      authDomainId:
        type: string
        description: ID of auth domain containing principal
      hasAuthorizations:
        type: boolean
        description: Whether the principal has any explicit authorizations
      isDeleted:
        type: boolean
        description: Whether the principal is deleted
      searchAttr:
        type: array
        items:
          type: string
        description: Comma-separated list of attributes by which to search (name|firstName|lastName|emailAddress|description)
      searchValue:
        type: array
        items:
          type: string
        description: Comma-separated list of values on which to search in the corresponding
          search attribute
      searchType:
        type: array
        items:
          type: string
        description: 'Comma-separated list of search types for each attribute: prefix|infix|exact
          (default is "infix")'
      joinOperator:
        type: string
        description: 'Whether results must match any or all of the search attributes:
          all|any (default is "all")'
  ProxyConfig:
    type: object
    required:
    - host
    - protocol
    properties:
      host:
        type: string
      port:
        type: integer
      protocol:
        type: string
      username:
        type: string
      password:
        type: string
  ProxyConfigGet:
    type: object
    required:
    - host
    - protocol
    properties:
      host:
        type: string
      port:
        type: integer
      protocol:
        type: string
      username:
        type: string
  QstarLocationDefinition:
    type: object
    required:
    - host
    - integralVolume
    - bucket
    - name
    - mountProtocol
    properties:
      host:
        type: string
        description: Hostname of the QStar server
      integralVolume:
        type: string
        description: QStar integral volume to mount
      bucket:
        type: string
        description: Bucket under the integral volume. The name cannot contain whitespace
          or _\\/*?%.:|<>
      name:
        type: string
        description: Name of this archival location
      mountProtocol:
        type: string
        enum:
        - NFS
        - CIFS
        description: Protocol to connect with the QStar server
      nfsVersion:
        type: integer
        format: int32
        description: NFS protocol version to communicate with QStar server when using
          NFS mount protocol
      otherNfsOptions:
        type: string
        description: Additional NFS options when using NFS protocol
      otherCifsOptions:
        type: string
        description: Additional CIFS options when using CIFS protocol
  QstarLocationUpdate:
    type: object
    properties:
      host:
        type: string
        description: Hostname of the QStar server
      name:
        type: string
        description: Name of this archival location
      username:
        type: string
        description: User name credentials to access the QStar server
      password:
        type: string
        description: Password credentials to access the QStar server
      nfsVersion:
        type: integer
        format: int32
        description: NFS protocol version to communicate with QStar server when using
          NFS mount protocol
      otherNfsOptions:
        type: string
        description: Additional NFS options when using NFS protocol
      otherCifsOptions:
        type: string
        description: Additional CIFS options when using CIFS protocol
  RecommendedInstanceType:
    type: object
    properties:
      recommendedInstanceType:
        type: string
  RecommissionNodeStatus:
    type: object
    required:
    - status
    - startServices
    - cassandraSetup
    properties:
      status:
        type: string
      startServices:
        type: string
      cassandraSetup:
        type: string
  RecoverArchivedMetadataRequest:
    type: object
    required:
    - dataLocationId
    properties:
      dataLocationId:
        type: string
  RecoverArchivedMetadataResponse:
    type: object
    required:
    - status
    - message
    properties:
      status:
        type: integer
        format: int32
      message:
        type: string
  RefreshVmRequest:
    type: object
    required:
    - vmMoid
    properties:
      vmMoid:
        type: string
  RegistrationDetails:
    type: object
    required:
    - registrationId
    properties:
      registrationId:
        type: string
  RemoteClusterStorageStats:
    type: object
    required:
    - remoteClusterUuid
    - totalStorage
    properties:
      remoteClusterUuid:
        type: string
      totalStorage:
        type: integer
        format: int64
  RemoveNodeStatus:
    type: object
    required:
    - status
    - removeCassandra
    properties:
      status:
        type: string
      removeCassandra:
        type: string
  ReplaceNodeConfig:
    type: object
    required:
    - newNodeId
    - oldNodeId
    - preserveHdds
    properties:
      newNodeId:
        type: string
      oldNodeId:
        type: string
      preserveHdds:
        type: boolean
  ReplaceNodeRec:
    type: object
    required:
    - status
    - id
    properties:
      status:
        type: string
      id:
        type: integer
        format: int64
  ReplaceNodeStatus:
    type: object
    required:
    - status
    - message
    - ipConfig
    - cassandraSetup
    - startServices
    - ipmiConfig
    - setupDisks
    - setupEncryptionAtRest
    properties:
      status:
        type: string
      message:
        type: string
      ipConfig:
        type: string
      cassandraSetup:
        type: string
      startServices:
        type: string
      ipmiConfig:
        type: string
      setupDisks:
        type: string
      setupEncryptionAtRest:
        type: string
  ReplicationSourceSummary:
    type: object
    required:
    - sourceClusterUuid
    - sourceClusterName
    - sourceClusterAddress
    properties:
      sourceClusterUuid:
        type: string
      sourceClusterName:
        type: string
      sourceClusterAddress:
        type: string
  ReplicationSpec:
    type: object
    required:
    - locationId
    - retentionLimit
    properties:
      locationId:
        type: string
      retentionLimit:
        type: integer
        format: int64
  ReplicationTargetSummary:
    type: object
    required:
    - status
    properties:
      status:
        type: string
      targetClusterUuid:
        type: string
      targetClusterName:
        type: string
      targetClusterAddress:
        type: string
  ReportCreate:
    type: object
    required:
    - name
    - reportTemplate
    properties:
      name:
        type: string
        description: The name of the report.
      reportTemplate:
        type: string
        description: The template this report is based on.
        enum:
        - ProtectionTasksDetails
        - ProtectionTasksSummary
        - SystemCapacity
        - SlaComplianceSummary
  RequestErrorInfo:
    type: object
    required:
    - message
    properties:
      message:
        type: string
        description: The error message for failed ids.
  RequestFailedException:
    type: object
    required:
    - errorType
    - message
    properties:
      errorType:
        type: string
      message:
        type: string
      code:
        type: string
      param:
        type: string
  RestorePathPair:
    type: object
    required:
    - path
    properties:
      path:
        type: string
        description: Original file path to be restored
      restorePath:
        type: string
        description: Directory of the folder to copy files into. If this is empty,
          file will be restored back into original directory.
  RouteConfig:
    type: object
    required:
    - network
    - netmask
    - gateway
    - device
    properties:
      network:
        type: string
      netmask:
        type: string
      gateway:
        type: string
      device:
        type: string
  RouteDeletionConfig:
    type: object
    required:
    - network
    - netmask
    properties:
      network:
        type: string
      netmask:
        type: string
  Runway:
    type: object
    required:
    - days
    properties:
      days:
        type: integer
        format: int64
  ScheduleTimeAttributes:
    type: object
    properties:
      dailyScheduleHour:
        type: integer
        format: int32
        description: Hour of the day. 0 = 12AM, 23 = 11PM
      weeklyScheduleHour:
        type: integer
        format: int32
        description: Hour of the day. 0 = 12AM, 23 = 11PM
      daysOfWeek:
        type: array
        description: Number representation of the day of the week. 0 = Sunday, 1 =
          Monday, etc
        items:
          type: integer
          format: int32
      monthlyScheduleHour:
        type: integer
        format: int32
        description: Hour of the day. 0 = 12AM, 23 = 11PM
      dayOfMonth:
        type: integer
        format: int32
        description: Day of the month.
  SecurityGroup:
    type: object
    required:
    - id
    - name
    properties:
      id:
        type: string
        description: ID of the security group
      name:
        type: string
        description: Name assigned to a security group.
  SendEmailParams:
    type: object
    required:
    - ids
    properties:
      ids:
        type: array
        items:
          type: string
  SlaAssignable:
    type: object
    required:
    - id
    - name
    - configuredSlaDomainId
    - configuredSlaDomainName
    - primaryClusterId
    properties:
      id:
        type: string
      name:
        type: string
      configuredSlaDomainId:
        type: string
        description: ID of the configured SLA domain
      configuredSlaDomainName:
        type: string
        description: name of the configured SLA domain
      primaryClusterId:
        type: string
  SlaDomainAssignmentInfo:
    type: object
    required:
    - managedIds
    properties:
      managedIds:
        type: array
        items:
          type: string
  SlaFrequency:
    type: object
    required:
    - timeUnit
    - frequency
    - retention
    properties:
      timeUnit:
        type: string
        description: Units for frequency and retention. Accepted values are Hourly,
          Daily, Weekly, Monthly, and Yearly.
      frequency:
        type: integer
        format: int32
      retention:
        type: integer
        format: int32
  SlaStartTimeAttributes:
    type: object
    required:
    - minutes
    - hour
    properties:
      minutes:
        type: integer
        format: int32
      hour:
        type: integer
        format: int32
      dayOfWeek:
        type: integer
        format: int32
  SmtpInstanceDefinition:
    type: object
    required:
    - smtpHostname
    - smtpPort
    - smtpSecurity
    - fromEmailId
    properties:
      smtpHostname:
        type: string
      smtpPort:
        type: integer
        format: int64
      smtpSecurity:
        type: string
      smtpUsername:
        type: string
      smtpPassword:
        type: string
      fromEmailId:
        type: string
  SmtpInstanceDetail:
    type: object
    required:
    - id
    - smtpHostname
    - smtpPort
    - smtpSecurity
    - fromEmailId
    properties:
      id:
        type: string
      smtpHostname:
        type: string
      smtpPort:
        type: integer
        format: int64
      smtpSecurity:
        type: string
      smtpUsername:
        type: string
      fromEmailId:
        type: string
  SnapshotIntegrityJobConfig:
    type: object
    required:
    - snappableId
    properties:
      snappableId:
        type: string
        description: ID of the VM whose snapshot integrities to verify
      snapshotIds:
        type: array
        items:
          type: string
  SnapshotStorageStats:
    type: object
    required:
    - logicalBytes
    - ingestedBytes
    - physicalBytes
    properties:
      logicalBytes:
        type: integer
        format: int64
        description: Amount of logical bytes the snapshot represents.
      ingestedBytes:
        type: integer
        format: int64
        description: Amount of bytes ingested to our system for the snapshot.
      physicalBytes:
        type: integer
        format: int64
        description: Amount of bytes physically stored in our system for the snapshot.
  StartTimeAttributes:
    type: object
    required:
    - minutes
    - hour
    properties:
      minutes:
        type: integer
        format: int32
      hour:
        type: integer
        format: int32
      dayOfWeek:
        type: integer
        format: int32
      dayOfMonth:
        type: integer
        format: int32
      weekOfMonth:
        type: integer
        format: int32
      month:
        type: integer
        format: int32
      year:
        type: integer
        format: int32
  Status:
    type: object
    required:
    - status
    properties:
      status:
        type: string
      description:
        type: string
  StorageArrayDefinition:
    type: object
    required:
    - arrayType
    - hostname
    - username
    - password
    properties:
      arrayType:
        enum:
        - PureStorage
        type: string
        description: Storage array type/brand.
      hostname:
        type: string
        description: Hostname is used to connect to the storage array. This can be
          a valid dns name or IP address.
      username:
        type: string
      password:
        type: string
  StorageArrayDetail:
    type: object
    required:
    - id
    - arrayType
    - hostname
    - username
    properties:
      id:
        type: string
      arrayType:
        enum:
        - PureStorage
        type: string
        description: Storage array type/brand.
      hostname:
        type: string
        description: Hostname is used to connect to the storage array. This can be
          a valid dns name or IP address.
      username:
        type: string
  StorageGrowth:
    type: object
    required:
    - bytes
    properties:
      bytes:
        type: integer
        format: int64
  StreamCount:
    type: object
    required:
    - count
    properties:
      count:
        type: integer
        format: int64
  Subnet:
    type: object
    required:
    - subnetId
    - vpcId
    - subnetCidrBlock
    - isDefault
    properties:
      subnetId:
        type: string
        description: ID of the subnet
      subnetNameOpt:
        type: string
        description: Name of the subnet
      vpcId:
        type: string
        description: ID of the corresponding VPC
      vpcNameOpt:
        type: string
        description: Name of the VPC
      subnetCidrBlock:
        type: string
        description: Address prefix of the subnet
      availabilityZoneOpt:
        type: string
        description: Availability zone of the corresponding virtual network
      regionOpt:
        type: string
        description: Region of the corresponding virtual network
      isDefault:
        type: boolean
        description: Specifies whether the subnet is default
  SyslogServerSettingsUpdate:
    type: object
    properties:
      hostname:
        type: string
      port:
        type: integer
        format: int32
      protocol:
        type: string
        description: 'Network protocol. Possible values are: ''TCP'' and ''UDP'''
  SyslogServerTestResult:
    type: object
    required:
    - message
    properties:
      message:
        type: string
        description: The test message that was sent.
  SystemStorageStats:
    type: object
    required:
    - total
    - used
    - available
    - lastUpdateTime
    properties:
      total:
        type: integer
        format: int64
      used:
        type: integer
        format: int64
      available:
        type: integer
        format: int64
      lastUpdateTime:
        type: string
        format: date-time
  TableSummary:
    type: object
    required:
    - columns
    properties:
      columns:
        type: array
        description: Columns for the table.
        items:
          type: string
          enum:
          - ObjectName
          - ObjectType
          - Location
          - ClusterLocation
          - SlaDomain
          - TaskType
          - TaskStatus
          - Hour
          - Day
          - Month
          - Quarter
          - Year
          - QueuedTime
          - StartTime
          - EndTime
          - Duration
          - DataTransferred
          - LogicalDataProtected
          - DataStored
          - DedupRatio
          - LogicalDedupRatio
          - DataReductionPercent
          - LogicalDataReductionPercent
          - TaskCount
          - SuccessfulTasks
          - CanceledTasks
          - FailedTasks
          - RunningTasks
          - AverageDuration
          - ObjectCount
          - TotalLocalStorage
          - TotalReplicaStorage
          - TotalArchiveStorage
          - LocalStorageGrowth
          - ArchiveStorageGrowth
          - ReplicaStorageGrowth
          - ProtectedOn
          - InComplianceCount
          - NonComplianceCount
          - TotalSnapshots
          - MissedSnapshots
          - LocalSnapshots
          - ReplicaSnapshots
          - ArchiveSnapshots
          - LastSnapshot
  ThrottlingSettings:
    type: object
    required:
    - enableThrottling
    properties:
      enableThrottling:
        type: boolean
        description: Whether or not to enable throttling
      vmIoLatencyThreshold:
        type: integer
        format: int32
        description: Latency threshold in ms observed by a VM beyond which to throttle
          VM backups
      datastoreIoLatencyThreshold:
        type: integer
        format: int32
        description: Latency threshold in ms observed across all of a VM's datastores
          beyond which to throttle VM backups
      cpuUtilizationThreshold:
        type: integer
        format: int32
        description: CPU utilization percentage beyond which to throttle VM backups
      mssqlHostIoLatencyThreshold:
        type: integer
        format: int32
        description: Latency threshold in ms observed by a Mssql host beyond which
          to throttle database backups
      mssqlCpuUtilizationThreshold:
        type: integer
        format: int32
        description: CPU utilization percentage of Mssql host beyond which to throttle
          Mssql database backups
      filesetHostIoLatencyThreshold:
        type: integer
        format: int32
        description: Latency threshold in ms observed by a Fileset host beyond which
          to throttle backups
      filesetCpuUtilizationThreshold:
        type: integer
        format: int32
        description: CPU utilization percentage of a Fileset host beyond which to
          throttle backups
  TimeStat:
    type: object
    required:
    - time
    - stat
    properties:
      time:
        type: string
        format: date-time
      stat:
        type: integer
        format: int64
  TimeseriesRequest:
    type: object
    required:
    - id
    properties:
      id:
        type: string
      range:
        type: string
  TunnelStatus:
    type: object
    required:
    - status
    properties:
      status:
        type: boolean
      port:
        type: integer
        format: int64
      message:
        type: string
  UnmanagedObjectDefinition:
    type: object
    required:
    - objectId
    properties:
      objectId:
        type: string
        description: The id of the unmanaged object
  UnmanagedSnapshotSummary:
    type: object
    required:
    - id
    - date
    - unmanagedSnapshotType
    - localStorage
    - archiveStorage
    properties:
      id:
        type: string
      date:
        type: string
        format: date-time
      unmanagedSnapshotType:
        enum:
        - OnDemand
        - Retrieved
        - Relic
        - Unprotected
        type: string
        description: Type of this Unmanaged Snapshot. On Demand means that it is an
          on demand snapshot. Retrieved means the snapshot was retrieved from an archival
          location. Relic means the object this snapshot was taken of is a Relic.
          Unprotected means the object has since been unprotected after previous SLA
          driven snapshots were taken.
      localStorage:
        type: integer
        format: int64
        description: Storage being taken up on the local cluster by this snapshot.
      archiveStorage:
        type: integer
        format: int64
        description: Storage being taken up in the archival location by this snapshot.
  UpdateDetail:
    type: object
    properties:
      state:
        type: string
  UpdateMountConfig:
    type: object
    required:
    - powerStatus
    properties:
      powerStatus:
        type: boolean
        description: True to power on, false to power off
  UpdateSmtpInstanceDefinition:
    type: object
    properties:
      smtpHostname:
        type: string
      smtpPort:
        type: integer
        format: int64
      smtpSecurity:
        type: string
      smtpUsername:
        type: string
      smtpPassword:
        type: string
      fromEmailId:
        type: string
  UpgradeRequest:
    type: object
    properties:
      force:
        type: boolean
  UpgradeStatus:
    type: object
    required:
    - status
    - message
    properties:
      status:
        type: string
      message:
        type: string
  UserDefinition:
    type: object
    required:
    - id
    - password
    properties:
      id:
        type: string
      password:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      emailAddress:
        type: string
      contactNumber:
        type: string
  UserDetail:
    type: object
    required:
    - id
    - authDomainId
    - username
    - createdById
    - createTime
    properties:
      id:
        type: string
      authDomainId:
        type: string
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      emailAddress:
        type: string
      contactNumber:
        type: string
      createdById:
        type: string
      createTime:
        type: string
  UserNotificationDetail:
    type: object
    required:
    - notificationId
    - name
    - notificationType
    - notificationStatus
    - objectType
    - objectId
    - notificationTimestamp
    - notificationInfo
    - state
    properties:
      notificationId:
        type: string
      name:
        type: string
      notificationType:
        type: string
      notificationStatus:
        type: string
      objectType:
        type: string
      objectId:
        type: string
      objectName:
        type: string
      notificationTimestamp:
        type: integer
        format: int64
      notificationInfo:
        type: string
      state:
        type: string
  UserPreferencesInfo:
    type: object
    properties:
      defaultOrg:
        type: string
  UserSummary:
    type: object
    required:
    - id
    - authDomainId
    - username
    properties:
      id:
        type: string
      authDomainId:
        type: string
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      emailAddress:
        type: string
      contactNumber:
        type: string
  UserUpdateInfo:
    type: object
    properties:
      password:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      emailAddress:
        type: string
      contactNumber:
        type: string
  VirtualDiskDetail:
    type: object
    properties:
      id:
        type: string
      fileName:
        type: string
      deviceKey:
        type: integer
        format: int64
        description: Unique and reusable key that vSphere uses to identify VMDK files
          and other devices in the hardware of a virtual machine.
      size:
        type: integer
        format: int64
      excludeFromSnapshots:
        type: boolean
  VirtualDiskSummary:
    type: object
    properties:
      id:
        type: string
      fileName:
        type: string
      vmName:
        type: string
  VirtualDiskUpdate:
    type: object
    properties:
      excludeFromSnapshots:
        type: boolean
  VirtualMachineBrief:
    type: object
    required:
    - id
    properties:
      id:
        type: string
      name:
        type: string
      slaDomainName:
        type: string
        description: 'DEPRECATED: The name of the SLA domain this VM belongs to'
      effectiveSlaDomainName:
        type: string
        description: The name of the effective SLA domain for this VM
  VirtualMachineScriptDetail:
    type: object
    required:
    - scriptPath
    - timeoutMs
    - failureHandling
    properties:
      scriptPath:
        type: string
        description: The command to be run in VM guest OS
      timeoutMs:
        type: integer
        format: int64
        description: Time (in ms) after which the script will be terminated if it
          has not completed
      failureHandling:
        enum:
        - abort
        - continue
        type: string
        description: Action to take if the script returns an error or times out.
  VmEndPointStatus:
    type: object
    required:
    - status
    properties:
      status:
        type: string
      description:
        type: string
  VmGuestScriptRunConfig:
    type: object
    required:
    - phase
    properties:
      phase:
        enum:
        - PreBackup
        - PostSnap
        - PostBackup
        type: string
        description: Run the script configured (if any) for this phase
  VmPathPoint:
    type: object
    required:
    - id
    - managedId
    - name
    properties:
      id:
        type: string
        description: ID of the object
      managedId:
        type: string
        description: (Deprecated) - See **id**
      name:
        type: string
        description: Name of the object
  VmStorageStats:
    type: object
    required:
    - id
    - logicalBytes
    - ingestedBytes
    - exclusivePhysicalBytes
    - sharedPhysicalBytes
    - indexStorageBytes
    properties:
      id:
        type: string
      logicalBytes:
        type: integer
        format: int64
      ingestedBytes:
        type: integer
        format: int64
      exclusivePhysicalBytes:
        type: integer
        format: int64
      sharedPhysicalBytes:
        type: integer
        format: int64
      indexStorageBytes:
        type: integer
        format: int64
  WebCsrRequest:
    type: object
    required:
    - hostnames
    properties:
      hostnames:
        type: array
        description: Host names associated with the certificate. It can be one or
          more host names (separated by commas), or it can be a wildcard host name
          (e.g., *.rubrik.example.com)
        items:
          type: string
      organization:
        type: string
        description: Name of organization associated with the certificate (e.g., Rubrik,
          Inc.)
      organizationUnit:
        type: string
        description: Name of the organization unit associated with the certificate
          (e.g., Engineering)
      country:
        type: string
        description: Two-letter ISO code for the country where the provided organization
          is located (e.g., US, GB, or FR)
      state:
        type: string
        description: State (if applicable) where the provided organization is located
          (e.g., California)
      city:
        type: string
        description: City where the provided organization is located (e.g., New York
          or London)
  X509Certificate:
    type: object
    required:
    - cert
    properties:
      cert:
        type: string
        description: X.509 certificate in Base64 encoded DER format. The certificate
          should start with -----BEGIN CERTIFICATE-----
  Snappable:
    allOf:
    - $ref: '#/definitions/SlaAssignable'
    - type: object
      required:
      - effectiveSlaDomainId
      - effectiveSlaDomainName
      - slaAssignment
      properties:
        slaAssignment:
          enum:
          - Derived
          - Direct
          - Unassigned
          type: string
          description: SLA assignment type
        effectiveSlaDomainId:
          type: string
          description: ID of the effective SLA domain
        effectiveSlaDomainName:
          type: string
          description: name of the effective SLA domain
        effectiveSlaSourceObjectId:
          type: string
          description: ID of the object from which the effective SLA domain is inherited
        effectiveSlaSourceObjectName:
          type: string
          description: Name of the object from which the effective SLA domain is inherited
  AdminAuthorization:
    type: object
    required:
    - principal
    - privileges
    properties:
      principal:
        type: string
      privileges:
        $ref: '#/definitions/AdminPrivileges'
  AdminAuthorizationListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/AdminAuthorization'
      total:
        type: integer
        description: Total list responses
  AdminPrivileges:
    type: object
    properties:
      fullAdmin:
        type: array
        items:
          type: string
  AgentDeploymentSettings:
    type: object
    required:
    - isAutomatic
    properties:
      isAutomatic:
        type: boolean
        description: Determines whether the Rubrik cluster automatically deploys the
          Rubrik Backup Service to the guest OS at the first backup. Set to true to
          permit automatic deployment. Set to false to prevent automatic deployment.
  ArchivalLocationConnectJob:
    type: object
    required:
    - dataLocationId
    - name
    - jobId
    - locationType
    properties:
      dataLocationId:
        type: string
      name:
        type: string
      jobId:
        type: string
      locationType:
        type: string
      host:
        type: string
      bucket:
        type: string
        description: 'Bucket name cannot contain whitespace or _\\/*?%.:|<> For AWS,
          bucket name also cannot contain capital letters or underscore

          '
  ArchivalLocationConnectJobListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/ArchivalLocationConnectJob'
      total:
        type: integer
        description: Total list responses
  ArchivalLocationSummary:
    type: object
    required:
    - id
    - name
    - locationType
    - isActive
    properties:
      id:
        type: string
      name:
        type: string
      locationType:
        type: string
      isActive:
        type: boolean
      ipAddress:
        type: string
      bucket:
        type: string
        description: 'Bucket name cannot contain whitespace or _\\/*?%.:|<> For AWS,
          bucket name also cannot contain capital letters or underscore.

          '
  ArchivalLocationSummaryListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/ArchivalLocationSummary'
      total:
        type: integer
        description: Total list responses
  AsyncRequestStatus:
    type: object
    required:
    - id
    - status
    - links
    properties:
      id:
        type: string
        description: The ID of the request object. Use it to poll the status.
      status:
        type: string
        description: Status of the id.
      progress:
        type: number
        format: double
        description: The current progress in terms of percentage of the async request.
      startTime:
        type: string
        format: date-time
        description: The start time of the request
      endTime:
        type: string
        format: date-time
        description: The end time of the request
      error:
        $ref: '#/definitions/RequestErrorInfo'
        description: Any errors encountered
      links:
        type: array
        description: References to any related objects
        items:
          $ref: '#/definitions/Link'
  AuthorizationRoles:
    type: object
    required:
    - principal
    - admin
    - endUser
    properties:
      principal:
        type: string
      admin:
        $ref: '#/definitions/AdminRole'
      endUser:
        $ref: '#/definitions/EndUserRole'
  AuthorizationSummary:
    type: object
    required:
    - principal
    - admin
    - endUser
    properties:
      principal:
        type: string
      admin:
        $ref: '#/definitions/AdminPrivileges'
      endUser:
        $ref: '#/definitions/EndUserPrivileges'
  AuthorizationSummaryListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/AuthorizationSummary'
      total:
        type: integer
        description: Total list responses
  BackupJobConfig:
    type: object
    required:
    - vmId
    properties:
      vmId:
        type: string
        description: ID of the VM to back up
      preferredReplicas:
        type: array
        items:
          type: string
      isOnDemandSnapshot:
        type: boolean
        description: Indicates if snapshot is on-demand
      config:
        $ref: '#/definitions/BaseOnDemandSnapshotConfig'
  BackupWindow:
    type: object
    required:
    - startTimeAttributes
    - durationInHours
    properties:
      startTimeAttributes:
        $ref: '#/definitions/SlaStartTimeAttributes'
      durationInHours:
        type: integer
        format: int32
  BaseSnapshotDetail:
    allOf:
    - $ref: '#/definitions/BaseSnapshotSummary'
    - type: object
      properties:
        config:
          type: string
        isCorrupt:
          type: boolean
  BlackoutWindows:
    type: object
    required:
    - globalBlackoutWindows
    properties:
      globalBlackoutWindows:
        type: array
        items:
          $ref: '#/definitions/BlackoutWindow'
      snappableBlackoutWindows:
        type: array
        items:
          $ref: '#/definitions/BlackoutWindow'
  BrowseResponseListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/BrowseResponse'
      total:
        type: integer
        description: Total list responses
  BulkAdminAuthorization:
    type: object
    required:
    - principals
    - privileges
    properties:
      principals:
        type: array
        items:
          type: string
      privileges:
        $ref: '#/definitions/AdminPrivileges'
  BulkDeleteUnmanagedObjectSnapshots:
    type: object
    required:
    - objectDefinitions
    properties:
      objectDefinitions:
        type: array
        items:
          $ref: '#/definitions/UnmanagedObjectDefinition'
  BulkDeleteUnmanagedSnapshotsConfig:
    type: object
    required:
    - snapshotIds
    properties:
      snapshotIds:
        type: array
        items:
          type: string
  BulkEndUserAuthorization:
    type: object
    required:
    - principals
    - privileges
    properties:
      principals:
        type: array
        items:
          type: string
      privileges:
        $ref: '#/definitions/EndUserPrivileges'
  BulkStatus:
    type: object
    required:
    - statuses
    properties:
      statuses:
        type: array
        items:
          $ref: '#/definitions/IdStatus'
  ChartData:
    allOf:
    - $ref: '#/definitions/ChartSummary'
    - type: object
      required:
      - dataColumns
      properties:
        dataColumns:
          type: array
          description: Data columns for the chart.
          items:
            $ref: '#/definitions/ChartDataColumn'
        remainderDataColumn:
          $ref: '#/definitions/ChartDataColumn'
          description: Aggregated values for any remaining data.
  ChartDataColumn:
    type: object
    required:
    - label
    - dataPoints
    properties:
      label:
        type: string
        description: Value label for the data.
      dataPoints:
        type: array
        description: The number values.
        items:
          $ref: '#/definitions/ChartDataPoint'
  CloudImageSummary:
    type: object
    required:
    - id
    - snapshotId
    - snapshotCreationDate
    - locationId
    - locationName
    - imageId
    - creationDate
    - links
    properties:
      id:
        type: string
        description: The ID of the image
      snapshotId:
        type: string
        description: The ID of the snapshot the image was generated from
      snappableId:
        type: string
        description: 'The ID of the snappable the snapshot was taken of. This can
          be used to get context about the image if the snapshot has since been expired.
          Will be empty if the snappable is not available.

          '
      snappableName:
        type: string
        description: 'The name of the source snappable. Will be empty if the snappable
          is not available.

          '
      snapshotCreationDate:
        type: string
        format: date-time
        description: 'The creation date of the snapshot this image is based on. This
          can be used to get context about the image if the snapshot has since been
          expired.

          '
      locationId:
        type: string
        description: The ID of the location the image is on
      locationName:
        type: string
        description: The name of the location the image is on
      imageId:
        type: string
        description: The image the cloud instance was generated from
      creationDate:
        type: string
        format: date-time
        description: The date the image was created
      expirationDate:
        type: string
        format: date-time
        description: The date the iamge is scheduled for expiration
      links:
        $ref: '#/definitions/CloudImageSummaryLinks'
  CloudImageSummaryLinks:
    type: object
    properties:
      snappable:
        $ref: '#/definitions/Link'
      snapshot:
        $ref: '#/definitions/Link'
      location:
        $ref: '#/definitions/Link'
  CloudImageDetailLinks:
    allOf:
    - $ref: '#/definitions/CloudImageSummaryLinks'
    - type: object
      required:
      - instanceIds
      properties:
        instanceIds:
          type: array
          items:
            $ref: '#/definitions/Link'
  CloudInstanceLinks:
    type: object
    properties:
      image:
        $ref: '#/definitions/Link'
      location:
        $ref: '#/definitions/Link'
  CloudInstanceSummary:
    type: object
    required:
    - id
    - locationId
    - locationName
    - imageId
    - creationDate
    - instanceClass
    - ownerId
    - ownerName
    - links
    properties:
      id:
        type: string
        description: The ID of the cloud instance
      snappableId:
        type: string
        description: 'The ID of the source snappable. Will be empty if the snappable
          is not available.

          '
      snappableName:
        type: string
        description: 'The name of the source snappable. Will be empty if the snappable
          is not available.

          '
      locationId:
        type: string
        description: The data location the cloud instance is on
      locationName:
        type: string
        description: The name of the location the cloud instance is on
      imageId:
        type: string
        description: The image the cloud instance was generated from
      creationDate:
        type: string
        format: date-time
        description: The date the instance was created
      terminationDate:
        type: string
        format: date-time
        description: The date the instance is scheduled to terminate
      instanceClass:
        type: string
        enum:
        - UserDeployedRubrikOnCloudInstance
        - TransientRubrikOnCloudInstance
        - UserInstantiatedInstance
        description: The type of instance for relative to Rubrik
      publicIpAddress:
        type: string
        description: The public IP address of the instance
      privateIpAddress:
        type: string
        description: The private IP address of the instance
      powerStatus:
        type: string
        enum:
        - PENDING
        - RUNNING
        - SHUTTING_DOWN
        - TERMINATED
        - STOPPING
        - STOPPED
        description: The power status
      ownerId:
        type: string
        description: ID of the user who requested the instance.
      ownerName:
        type: string
        description: Displayable name of the user who requested the instance.
      links:
        $ref: '#/definitions/CloudInstanceLinks'
  CloudInstanceDetail:
    allOf:
    - $ref: '#/definitions/CloudInstanceSummary'
  CloudInstantiationSpec:
    type: object
    required:
    - imageRetentionInSeconds
    properties:
      imageRetentionInSeconds:
        type: integer
        format: int64
        description: 'Specifies the number of seconds to retain an image file that
          is generated for a snappable. Setting this to -1 disables cloud instantiation
          for the snappable.

          '
  AwsImageSummary:
    allOf:
    - $ref: '#/definitions/CloudImageSummary'
  AwsImageDetail:
    allOf:
    - $ref: '#/definitions/AwsImageSummary'
    - $ref: '#/definitions/AwsSecuritySettings'
    - type: object
      required:
      - instanceIds
      - links
      properties:
        instanceIds:
          type: array
          items:
            type: string
          description: All instances that have been instantiated from this image
        links:
          $ref: '#/definitions/CloudImageDetailLinks'
  AwsImageSummaryListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/AwsImageSummary'
      total:
        type: integer
        description: Total list responses
  AwsInstanceDetail:
    allOf:
    - $ref: '#/definitions/AwsInstanceSummary'
    - $ref: '#/definitions/CloudInstanceDetail'
    - $ref: '#/definitions/AwsSecuritySettings'
    - type: object
      properties:
        identityFile:
          type: string
          description: File for AWS identity management
  AwsInstanceSummary:
    allOf:
    - $ref: '#/definitions/CloudInstanceSummary'
    - type: object
      properties:
        awsInstanceType:
          type: string
          description: The AWS instance type
  AwsInstanceSummaryListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/AwsInstanceSummary'
      total:
        type: integer
        description: Total list responses
  ClusterConfig:
    type: object
    required:
    - name
    - ntpServers
    - dnsNameservers
    - nodeConfigs
    - adminUserInfo
    properties:
      name:
        type: string
      ntpServers:
        type: array
        items:
          type: string
      dnsNameservers:
        type: array
        items:
          type: string
      dnsSearchDomains:
        type: array
        items:
          type: string
      nodeConfigs:
        $ref: '#/definitions/Map_NodeConfig'
      adminUserInfo:
        $ref: '#/definitions/AdminUserConfig'
      enableSoftwareEncryptionAtRest:
        type: boolean
  ComputeClusterDetail:
    allOf:
    - $ref: '#/definitions/ComputeClusterSummary'
    - type: object
      required:
      - moid
      - hosts
      - virtualMachines
      properties:
        moid:
          type: string
        hosts:
          type: array
          items:
            $ref: '#/definitions/VmwareHostSummary'
        virtualMachines:
          type: array
          items:
            $ref: '#/definitions/VirtualMachineSummary'
  ComputeClusterSummary:
    allOf:
    - $ref: '#/definitions/SlaAssignable'
    - type: object
      required:
      - datacenterId
      properties:
        datacenterId:
          type: string
  ComputeClusterSummaryListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/ComputeClusterSummary'
      total:
        type: integer
        description: Total list responses
  DataCenterDetail:
    allOf:
    - $ref: '#/definitions/DataCenterSummary'
    - type: object
      required:
      - objectType
      - moid
      properties:
        objectType:
          type: string
        moid:
          type: string
        hosts:
          type: array
          items:
            $ref: '#/definitions/VmwareHostSummary'
        dataStores:
          type: array
          items:
            $ref: '#/definitions/DataStoreSummary'
  DataCenterSummary:
    allOf:
    - $ref: '#/definitions/SlaAssignable'
    - type: object
      required:
      - vcenterId
      properties:
        vcenterId:
          type: string
  DataLocationUsageListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/DataLocationUsage'
      total:
        type: integer
        description: Total list responses
  DataStoreDetail:
    type: object
    required:
    - id
    properties:
      id:
        type: string
      moid:
        type: string
      name:
        type: string
      dataStoreType:
        type: string
      capacity:
        type: integer
        format: int64
      path:
        type: string
      dataCenter:
        $ref: '#/definitions/DataCenterSummary'
      virtualDisks:
        type: array
        items:
          $ref: '#/definitions/VirtualDiskSummary'
      isLocal:
        type: boolean
  DataStoreSummaryListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/DataStoreSummary'
      total:
        type: integer
        description: Total list responses
  DeleteReplicationSourceJobListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/DeleteReplicationSourceJob'
      total:
        type: integer
        description: Total list responses
  DiskCapacity:
    allOf:
    - $ref: '#/definitions/Capacity'
    - type: object
      required:
      - isEncrypted
      properties:
        isEncrypted:
          type: boolean
  DiskInfo:
    allOf:
    - $ref: '#/definitions/DiskStatus'
    - type: object
      required:
      - capacityBytes
      - path
      properties:
        capacityBytes:
          type: integer
          format: int64
        path:
          type: string
        unallocatedBytes:
          type: integer
          format: int64
        usableBytes:
          type: integer
          format: int64
  EmailSubscriptionCreate:
    type: object
    required:
    - timeAttributes
    - emailAddresses
    properties:
      timeAttributes:
        $ref: '#/definitions/ScheduleTimeAttributes'
      emailAddresses:
        type: array
        description: Email addresses to send reports to.
        items:
          type: string
  EmailSubscriptionSummary:
    allOf:
    - $ref: '#/definitions/EmailSubscriptionCreate'
    - type: object
      required:
      - id
      properties:
        id:
          type: string
  EndUserAuthorization:
    type: object
    required:
    - principal
    - privileges
    properties:
      principal:
        type: string
      privileges:
        $ref: '#/definitions/EndUserPrivileges'
  EndUserAuthorizationListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/EndUserAuthorization'
      total:
        type: integer
        description: Total list responses
  EventStatusSummaryListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/EventStatusSummary'
      total:
        type: integer
        description: Total list responses
  ExportSnapshotToStandaloneHostRequest:
    allOf:
    - $ref: '#/definitions/MountExportSnapshotJobCommonOptions'
    - type: object
      required:
      - datastoreName
      - hostIpAddress
      - hostUsername
      - hostPassword
      properties:
        hostIpAddress:
          type: string
          description: The IP address of the standalone ESXi host
        datastoreName:
          type: string
          description: Name of the datastore to assign to the exported virtual machine.
        hostUsername:
          type: string
          description: The admin username of standalone ESXi host
        hostPassword:
          type: string
          description: The admin password of standalone ESXi host
  FilesetDetail:
    allOf:
    - $ref: '#/definitions/FilesetUpdate'
    - $ref: '#/definitions/FilesetSummary'
    - type: object
      required:
      - snapshotCount
      properties:
        protectionDate:
          type: string
          format: date-time
        snapshotCount:
          type: integer
          format: int32
        archivedSnapshotCount:
          type: integer
          format: int32
        snapshots:
          type: array
          items:
            $ref: '#/definitions/FilesetSnapshotSummary'
        localStorage:
          type: integer
          format: int64
        archiveStorage:
          type: integer
          format: int64
        preBackupScript:
          type: string
          description: Script to run before backup of this Fileset starts
        postBackupScript:
          type: string
          description: Script to run after backup of this Fileset ends
        backupScriptTimeout:
          type: integer
          format: int64
          description: Number of seconds after which the script is killed if it has
            not completed execution
        backupScriptErrorHandling:
          type: string
          description: Action taken if script fails. Options are "abort", "continue"
  FilesetDetailListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/FilesetDetail'
      total:
        type: integer
        description: Total list responses
  FilesetRestoreFilesJobConfig:
    type: object
    required:
    - restoreConfig
    properties:
      restoreConfig:
        type: array
        description: Absolute file path and restore path if not restored back to itself
        items:
          $ref: '#/definitions/FilesetRestorePathPair'
      ignoreErrors:
        type: boolean
        description: Optional field to determine if we should ignore single error
          during restore. Default value is false
  FilesetRestorePathPair:
    allOf:
    - $ref: '#/definitions/RestorePathPair'
  FilesetSnapshotSummary:
    allOf:
    - $ref: '#/definitions/BaseSnapshotSummary'
    - type: object
      required:
      - filesetName
      properties:
        filesetName:
          type: string
        fileCount:
          type: integer
          format: int64
  FilesetSummary:
    allOf:
    - $ref: '#/definitions/FilesetOptions'
    - $ref: '#/definitions/SlaAssignable'
    - type: object
      required:
      - hostId
      - hostName
      - includes
      - isRelic
      - templateId
      - templateName
      properties:
        hostId:
          type: string
        shareId:
          type: string
        hostName:
          type: string
        templateId:
          type: string
        templateName:
          type: string
        operatingSystemType:
          type: string
        effectiveSlaDomainId:
          type: string
          description: The ID of the effective SLA domain for this Fileset
        effectiveSlaDomainName:
          type: string
          description: The name of the effective SLA domain for this Fileset
        includes:
          type: array
          items:
            type: string
        excludes:
          type: array
          items:
            type: string
        exceptions:
          type: array
          items:
            type: string
        isRelic:
          type: boolean
  FilesetTemplateCreate:
    allOf:
    - $ref: '#/definitions/FilesetOptions'
    - type: object
      required:
      - name
      - includes
      properties:
        name:
          type: string
        includes:
          type: array
          items:
            type: string
        excludes:
          type: array
          items:
            type: string
        exceptions:
          type: array
          items:
            type: string
        operatingSystemType:
          type: string
          description: Operating system type of filesets created by template
          enum:
          - Linux
          - Windows
        shareType:
          type: string
          enum:
          - NFS
          - SMB
        preBackupScript:
          type: string
          description: Script to run before backup of this Fileset starts
        postBackupScript:
          type: string
          description: Script to run after backup of this Fileset ends
        backupScriptTimeout:
          type: integer
          format: int64
          description: Number of seconds after which the script is killed if it has
            not completed execution
        backupScriptErrorHandling:
          type: string
          description: Action taken if script fails. Options are "abort", "continue"
  FilesetTemplateDetail:
    allOf:
    - $ref: '#/definitions/FilesetTemplateCreate'
    - type: object
      required:
      - id
      - primaryClusterId
      properties:
        id:
          type: string
        primaryClusterId:
          type: string
        isArchived:
          type: boolean
        hostCount:
          type: integer
          format: int32
          description: Number of hosts where this template has been applied
        shareCount:
          type: integer
          format: int32
          description: Number of shares where this template has been applied
  FilesetTemplateDetailListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/FilesetTemplateDetail'
      total:
        type: integer
        description: Total list responses
  FilesetTemplatePatch:
    allOf:
    - $ref: '#/definitions/FilesetOptions'
    - type: object
      required:
      - id
      properties:
        id:
          type: string
        name:
          type: string
        includes:
          type: array
          items:
            type: string
        excludes:
          type: array
          items:
            type: string
        exceptions:
          type: array
          items:
            type: string
        operatingSystemType:
          type: string
          description: Operating system type of filesets created by template
          enum:
          - Linux
          - Windows
        shareType:
          type: string
          enum:
          - NFS
          - SMB
        preBackupScript:
          type: string
          description: Script to run before backup of this Fileset starts
        postBackupScript:
          type: string
          description: Script to run after backup of this Fileset ends
        backupScriptTimeout:
          type: integer
          format: int64
          description: Number of seconds after which the script is killed if it has
            not completed execution
        backupScriptErrorHandling:
          type: string
          description: Action taken if script fails. Options are "abort", "continue"
  FilterSummary:
    type: object
    properties:
      dateConfig:
        $ref: '#/definitions/DateFilter'
        description: Date range for the data.
      taskStatus:
        type: array
        description: Status of the task.
        items:
          type: string
          enum:
          - Succeeded
          - Failed
          - Running
          - Canceled
      slaDomain:
        type: array
        description: SLA domain IDs.
        items:
          type: string
      objects:
        type: array
        description: Object IDs.
        items:
          type: string
      objectType:
        type: array
        description: Object types.
        items:
          type: string
          enum:
          - HypervVirtualMachine
          - LinuxFileset
          - ManagedVolume
          - Mssql
          - NutanixVirtualMachine
          - ShareFileset
          - VmwareVirtualMachine
          - WindowsFileset
      objectLocation:
        type: array
        description: Object locations.
        items:
          type: string
      clusterLocation:
        type: array
        description: Cluster locations.
        items:
          type: string
          enum:
          - Local
          - Remote
      taskType:
        type: array
        description: Task type.
        items:
          type: string
          enum:
          - Backup
          - Replication
          - Archival
      complianceStatus:
        type: array
        description: Compliance status.
        items:
          type: string
          enum:
          - InCompliance
          - NonCompliance
  FloatingIpListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/FloatingIp'
      total:
        type: integer
        description: Total list responses
  FolderDetail:
    allOf:
    - $ref: '#/definitions/SlaAssignable'
    - type: object
      required:
      - folderType
      - entities
      - descendants
      properties:
        folderType:
          type: string
        entities:
          type: array
          items:
            $ref: '#/definitions/ManagedEntitySummary'
        descendants:
          type: array
          items:
            $ref: '#/definitions/ManagedEntitySummary'
  FolderHierarchy:
    type: object
    required:
    - id
    - name
    - folderType
    - configuredSlaDomainId
    - subFolderHierarchies
    - otherContent
    properties:
      id:
        type: string
      name:
        type: string
      folderType:
        type: string
      configuredSlaDomainId:
        type: string
      subFolderHierarchies:
        type: array
        items:
          $ref: '#/definitions/FolderHierarchy'
      otherContent:
        type: array
        items:
          $ref: '#/definitions/ManagedEntitySummary'
      primaryClusterId:
        type: string
  GuestCredentialDefinition:
    allOf:
    - $ref: '#/definitions/BaseGuestCredential'
    - type: object
      properties:
        domain:
          type: string
  GuestCredentialDetail:
    allOf:
    - $ref: '#/definitions/BaseGuestCredentialDetail'
    - type: object
      required:
      - id
      properties:
        id:
          type: string
        domain:
          type: string
  GuestCredentialDetailListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/GuestCredentialDetail'
      total:
        type: integer
        description: Total list responses
  HostDetail:
    allOf:
    - $ref: '#/definitions/HostSummary'
    - type: object
      properties:
        agentId:
          type: string
        compressionEnabled:
          type: boolean
  HostDetailListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/HostDetail'
      total:
        type: integer
        description: Total list responses
  HostFilesetDetail:
    type: object
    required:
    - id
    - hostname
    properties:
      id:
        type: string
      hostname:
        type: string
      primaryClusterId:
        type: string
      agentId:
        type: string
      operatingSystem:
        type: string
      operatingSystemType:
        type: string
      status:
        type: string
      filesets:
        type: array
        items:
          $ref: '#/definitions/FilesetDetail'
  HostFilesetShareDetail:
    type: object
    required:
    - id
    - hostId
    - hostname
    - shareType
    - exportPoint
    - primaryClusterId
    - status
    - filesets
    properties:
      id:
        type: string
      hostId:
        type: string
      hostname:
        type: string
      shareType:
        type: string
        enum:
        - NFS
        - SMB
      exportPoint:
        type: string
      status:
        type: string
      primaryClusterId:
        type: string
      filesets:
        type: array
        items:
          $ref: '#/definitions/FilesetDetail'
      username:
        type: string
      domain:
        type: string
  HostFilesetShareSummary:
    type: object
    required:
    - id
    - hostId
    - hostname
    - shareType
    - exportPoint
    - primaryClusterId
    - status
    - filesets
    properties:
      id:
        type: string
      hostId:
        type: string
      hostname:
        type: string
      shareType:
        type: string
        enum:
        - NFS
        - SMB
      exportPoint:
        type: string
      status:
        type: string
      primaryClusterId:
        type: string
      filesets:
        type: array
        items:
          $ref: '#/definitions/FilesetSummary'
      username:
        type: string
      domain:
        type: string
  HostFilesetShareSummaryListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/HostFilesetShareSummary'
      total:
        type: integer
        description: Total list responses
  HostFilesetSummary:
    type: object
    required:
    - id
    - hostname
    properties:
      id:
        type: string
      hostname:
        type: string
      primaryClusterId:
        type: string
      operatingSystem:
        type: string
      operatingSystemType:
        type: string
      status:
        type: string
      filesets:
        type: array
        items:
          $ref: '#/definitions/FilesetSummary'
  HostFilesetSummaryListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/HostFilesetSummary'
      total:
        type: integer
        description: Total list responses
  HostShareCredentialDetailListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/HostShareCredentialDetail'
      total:
        type: integer
        description: Total list responses
  HostShareDetailListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/HostShareDetail'
      total:
        type: integer
        description: Total list responses
  HypervClusterDetail:
    allOf:
    - $ref: '#/definitions/HypervClusterUpdate'
    - $ref: '#/definitions/HypervClusterSummary'
  HypervClusterSummary:
    allOf:
    - $ref: '#/definitions/SlaAssignable'
    - type: object
      required:
      - id
      - name
      - primaryClusterId
      properties:
        id:
          type: string
          description: The ID of the Hyper-V cluster
        name:
          type: string
          description: The display name of the Hyper-V cluster
        primaryClusterId:
          type: string
  HypervClusterSummaryListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/HypervClusterSummary'
      total:
        type: integer
        description: Total list responses
  HypervHierarchyObjectSummary:
    allOf:
    - $ref: '#/definitions/ManagedHierarchyObjectSummary'
    - type: object
      required:
      - objectType
      - descendentCount
      properties:
        objectType:
          enum:
          - cluster
          - host
          - vm
          type: string
          description: Type of object
        connectionStatus:
          enum:
          - Connected
          - Connecting
          - Disconnected
          type: string
          description: Connection status of hyperv host. This is defined only for
            hyperv host.
        descendentCount:
          $ref: '#/definitions/HypervHierarchyObjectDescendentCount'
  HypervHierarchyObjectSummaryListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/HypervHierarchyObjectSummary'
      total:
        type: integer
        description: Total list responses
  HypervHostDetail:
    allOf:
    - $ref: '#/definitions/HypervHostUpdate'
    - $ref: '#/definitions/HypervHostSummary'
  HypervHostSummary:
    allOf:
    - $ref: '#/definitions/SlaAssignable'
    - type: object
      required:
      - id
      - hostname
      - primaryClusterId
      properties:
        id:
          type: string
          description: The ID of the Hyper-V host
        hostname:
          type: string
          description: IP Address or the hostname using which the host was added
        primaryClusterId:
          type: string
  HypervHostSummaryListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/HypervHostSummary'
      total:
        type: integer
        description: Total list responses
  HypervVirtualMachineMountDetail:
    allOf:
    - $ref: '#/definitions/HypervVirtualMachineMountSummary'
  HypervVirtualMachineMountSummaryListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/HypervVirtualMachineMountSummary'
      total:
        type: integer
        description: Total list responses
  HypervVirtualMachineSnapshotSummary:
    allOf:
    - $ref: '#/definitions/BaseSnapshotSummary'
    - type: object
      required:
      - vmName
      properties:
        vmName:
          type: string
  HypervVirtualMachineSnapshotDetail:
    allOf:
    - $ref: '#/definitions/HypervVirtualMachineSnapshotSummary'
  HypervVirtualMachineSnapshotSummaryListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/HypervVirtualMachineSnapshotSummary'
      total:
        type: integer
        description: Total list responses
  HypervVirtualMachineSummary:
    allOf:
    - $ref: '#/definitions/Snappable'
    - type: object
      required:
      - id
      - name
      - rootId
      - rootName
      - primaryClusterId
      - isRelic
      - infraPath
      properties:
        id:
          type: string
        name:
          type: string
        rootId:
          type: string
          description: The name of the Hyper-V host or cluster
        rootName:
          type: string
          description: Name of the root of this object.
        primaryClusterId:
          type: string
        isRelic:
          type: boolean
        infraPath:
          type: array
          description: Brief info of all the objects in the infrastructure path to
            this VM
          items:
            $ref: '#/definitions/ManagedHierarchyObjectAncestor'
  HypervVirtualMachineDetail:
    allOf:
    - $ref: '#/definitions/HypervVirtualMachineUpdate'
    - $ref: '#/definitions/HypervVirtualMachineSummary'
    - type: object
      properties:
        operatingSystemType:
          type: string
          enum:
          - Linux
          - Windows
        isAgentRegistered:
          type: boolean
          description: Returns whether the Rubrik connector is installed and service
            is registered.
  HypervVirtualMachineSummaryListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/HypervVirtualMachineSummary'
      total:
        type: integer
        description: Total list responses
  IdStatus:
    type: object
    required:
    - id
    - status
    properties:
      id:
        type: string
      status:
        $ref: '#/definitions/Status'
  IoStat:
    type: object
    required:
    - iops
    - ioThroughput
    properties:
      iops:
        $ref: '#/definitions/Iops'
      ioThroughput:
        $ref: '#/definitions/IoThroughput'
  IoThroughput:
    type: object
    required:
    - readBytePerSecond
    - writeBytePerSecond
    properties:
      readBytePerSecond:
        type: array
        items:
          $ref: '#/definitions/TimeStat'
      writeBytePerSecond:
        type: array
        items:
          $ref: '#/definitions/TimeStat'
  Iops:
    type: object
    required:
    - readsPerSecond
    - writesPerSecond
    properties:
      readsPerSecond:
        type: array
        items:
          $ref: '#/definitions/TimeStat'
      writesPerSecond:
        type: array
        items:
          $ref: '#/definitions/TimeStat'
  IpmiDetails:
    type: object
    required:
    - isAvailable
    - access
    properties:
      isAvailable:
        type: boolean
      access:
        $ref: '#/definitions/IpmiAccess'
  IpmiUpdate:
    type: object
    properties:
      password:
        type: string
        description: IPMI password, password should be 5-20 characters.
      access:
        $ref: '#/definitions/IpmiAccessUpdate'
  IscsiAddParams:
    type: object
    required:
    - portalDetails
    properties:
      portalDetails:
        $ref: '#/definitions/IscsiPortalInfo'
      auth:
        description: is authentication required for discovery too, false if not specified.
          Ignored if target is provided
        type: boolean
      target:
        description: name of the iSCSI target
        type: string
  KeyRotationDetailListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/KeyRotationDetail'
      total:
        type: integer
        description: Total list responses
  ManagedHierarchyObjectSummary:
    allOf:
    - $ref: '#/definitions/Snappable'
    - type: object
      required:
      - isRelic
      properties:
        infraPath:
          type: array
          items:
            $ref: '#/definitions/ManagedHierarchyObjectAncestor'
        slaPath:
          type: array
          items:
            $ref: '#/definitions/ManagedHierarchyObjectAncestor'
        isRelic:
          type: boolean
          description: Whether this managed object is a relic (an archived snappable
            with unexpired snapshots).
  ManagedHierarchyObjectSummaryListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/ManagedHierarchyObjectSummary'
      total:
        type: integer
        description: Total list responses
  ManagedObjectLocations:
    type: object
    properties:
      folder:
        type: array
        items:
          $ref: '#/definitions/ManagedObjectAncestor'
        description: VMware folder hierarchy
      infrastructure:
        type: array
        items:
          $ref: '#/definitions/ManagedObjectAncestor'
        description: Infrastructure hierarchy (cluster/host/server/VM)
      physical:
        type: array
        items:
          $ref: '#/definitions/ManagedObjectAncestor'
        description: Physical host hierarchy
  ManagedObjectSummary:
    type: object
    required:
    - managedId
    - objectType
    - name
    - primaryClusterId
    - isArchived
    - descendantCounts
    - locations
    - properties
    properties:
      managedId:
        type: string
      objectType:
        type: string
        description: Type of the object (e.g., VirtualMachine)
      name:
        type: string
        description: Name of the object (e.g., VM name or physical host hostname
      primaryClusterId:
        type: string
        description: ID of the primary cluster
      isArchived:
        type: boolean
        description: Whether or not this managed object is archived
      descendantCounts:
        $ref: '#/definitions/ManagedObjectDescendantCounts'
        description: Count of all the descendants of each type (recursively)
      locations:
        $ref: '#/definitions/ManagedObjectLocations'
        description: Paths from the hierarchy root to the object (multiple may exist),
          expressed as arrays of managed IDs
      properties:
        $ref: '#/definitions/ManagedObjectProperties'
        description: Properties of the object
  ManagedObjectSummaryListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/ManagedObjectSummary'
      total:
        type: integer
        description: Total list responses
  ManagedVolumeConfig:
    type: object
    required:
    - name
    - numChannels
    - volumeSize
    - exportConfig
    properties:
      name:
        type: string
        description: Name of the managed volume.
      numChannels:
        type: integer
        format: int32
        minimum: 0
        description: Number of channels to divide the volume into. Each channel provides
          a unique share to write to.
      volumeSize:
        type: integer
        format: int64
        minimum: 0
        description: Maximum capacity for the volume across all the channels.
      exportConfig:
        $ref: '#/definitions/ManagedVolumeExportConfig'
  ManagedVolumeExport:
    type: object
    required:
    - isActive
    - config
    - channels
    properties:
      isActive:
        type: boolean
        description: Is export active.
      channels:
        type: array
        description: Channels of this export.
        items:
          $ref: '#/definitions/ManagedVolumeChannelConfig'
      config:
        $ref: '#/definitions/ManagedVolumeExportConfig'
  ManagedVolumeSnapshotConfig:
    type: object
    properties:
      retentionConfig:
        $ref: '#/definitions/BaseOnDemandSnapshotConfig'
  ManagedVolumeSnapshotExportSummary:
    allOf:
    - $ref: '#/definitions/ManagedVolumeExport'
    - type: object
      required:
      - id
      - snapshotId
      - snapshotDate
      - sourceManagedVolumeId
      - sourceManagedVolumeName
      - exportedDate
      properties:
        id:
          type: string
          description: ID of managed volume snapshot export
        snapshotId:
          type: string
          description: Snapshot this export is based off.
        snapshotDate:
          type: string
          format: date-time
          description: Date of the snapshot this export is based off.
        sourceManagedVolumeId:
          type: string
          description: ID of the managed volume this export belongs to.
        sourceManagedVolumeName:
          type: string
          description: Name of the managed volume this export belongs to.
        exportedDate:
          type: string
          format: date-time
          description: Exported date of the managed volume snapshot.
  ManagedVolumeSnapshotExportDetail:
    allOf:
    - $ref: '#/definitions/ManagedVolumeSnapshotExportSummary'
  ManagedVolumeSnapshotExportSummaryListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/ManagedVolumeSnapshotExportSummary'
      total:
        type: integer
        description: Total list responses
  ManagedVolumeSnapshotLinks:
    type: object
    properties:
      export:
        $ref: '#/definitions/Link'
      self_:
        $ref: '#/definitions/Link'
  ManagedVolumeSnapshotSummary:
    allOf:
    - $ref: '#/definitions/BaseSnapshotSummary'
    - type: object
      required:
      - links
      properties:
        links:
          $ref: '#/definitions/ManagedVolumeSnapshotLinks'
          description: Links to actions available on the snapshot
  ManagedVolumeSnapshotDetail:
    allOf:
    - $ref: '#/definitions/ManagedVolumeSnapshotSummary'
  ManagedVolumeSnapshotSummaryListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/ManagedVolumeSnapshotSummary'
      total:
        type: integer
        description: Total list responses
  ManagedVolumeSummary:
    allOf:
    - $ref: '#/definitions/Snappable'
    - type: object
      required:
      - snapshotCount
      - isRelic
      - numChannels
      - volumeSize
      - usedSize
      - hostPatterns
      properties:
        snapshotCount:
          type: integer
          format: int32
          description: Number of snapshots.
        isRelic:
          type: boolean
          description: Is managed volume a relic.
        numChannels:
          type: integer
          format: int32
          description: Number of channels to divide the volume into. Each channel
            provides a unique share to write to.
        volumeSize:
          type: integer
          format: int64
          description: Maximum capacity for the volume across all the channels in
            bytes.
        usedSize:
          type: integer
          format: int64
          description: Used capacity for the volume across all the channels in bytes.
        hostPatterns:
          type: array
          description: List of host patterns. A host pattern describes a set of hosts
            who can mount the host. It can either be a host name, a network in CIDR
            notation or hostnames matching wildcards * or ?
          items:
            type: string
        mainExport:
          $ref: '#/definitions/ManagedVolumeExport'
  ManagedVolumeDetail:
    allOf:
    - $ref: '#/definitions/ManagedVolumeSummary'
  ManagedVolumeSummaryListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/ManagedVolumeSummary'
      total:
        type: integer
        description: Total list responses
  ManagedVolumeUpdate:
    type: object
    properties:
      name:
        type: string
        description: Change the name of this managed volume
      configuredSlaDomainId:
        type: string
        description: Assign this managed volume to the given SLA domain.
      volumeSize:
        type: integer
        format: int64
        minimum: 0
        description: Increase capacity for the volume across all the channels.
      config:
        $ref: '#/definitions/ManagedVolumeExportConfig'
  Map_NodeConfig:
    type: object
    additionalProperties:
      $ref: '#/definitions/NodeConfig'
  Map_VmEndPointStatus:
    type: object
    additionalProperties:
      $ref: '#/definitions/VmEndPointStatus'
  MissedSnapshotListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/MissedSnapshot'
      total:
        type: integer
        description: Total list responses
  MountDetail:
    type: object
    required:
    - id
    - snapshotDate
    - vmId
    - vmName
    - isReady
    properties:
      id:
        type: string
      snapshotDate:
        type: string
        format: date-time
      vmId:
        type: string
      vmName:
        type: string
      virtualMachine:
        $ref: '#/definitions/VirtualMachineSummary'
      powerStatus:
        type: string
        description: The power status of the mounted VM(ON,OFF,SLEEP etc.)
      host:
        $ref: '#/definitions/VmwareHostSummary'
      isReady:
        type: boolean
      mountRequestId:
        type: string
      unmountRequestId:
        type: string
  MountSnapshotJobConfig:
    allOf:
    - $ref: '#/definitions/MountExportSnapshotJobCommonOptions'
    - type: object
      properties:
        hostId:
          type: string
          description: ID of the ESXi host to mount the new virtual machine on.
        dataStoreName:
          type: string
          description: Name of the host NAS datastore to use with the new virtual
            machine. The Rubrik cluster creates a new datastore on the host using
            the provided name.
        nodeAffinity:
          type: array
          items:
            type: string
  MssqlAvailabilityGroupSummary:
    allOf:
    - $ref: '#/definitions/Snappable'
    - $ref: '#/definitions/MssqlNonSlaProperties'
  MssqlAvailabilityGroupDetail:
    allOf:
    - $ref: '#/definitions/MssqlAvailabilityGroupSummary'
  MssqlAvailabilityGroupSummaryListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/MssqlAvailabilityGroupSummary'
      total:
        type: integer
        description: Total list responses
  MssqlAvailabilityGroupUpdate:
    allOf:
    - $ref: '#/definitions/MssqlNonSlaProperties'
    - type: object
      properties:
        configuredSlaDomainId:
          type: string
          description: ID of the SLA Domain assigned to the availability group
  MssqlDbDetail:
    allOf:
    - $ref: '#/definitions/MssqlDbSummary'
    - type: object
      required:
      - snapshotCount
      properties:
        snapshotCount:
          type: integer
          format: int32
        isLocal:
          type: boolean
        isStandby:
          type: boolean
        latestRecoveryPoint:
          type: string
          format: date
        oldestRecoveryPoint:
          type: string
          format: date
        protectionDate:
          type: string
          format: date
        recoveryForkGuid:
          type: string
        maxDataStreams:
          type: integer
          format: int32
        localStorage:
          type: integer
          format: int64
        archiveStorage:
          type: integer
          format: int64
  MssqlDbSlaAssignStatus:
    allOf:
    - $ref: '#/definitions/BulkStatus'
    - type: object
      required:
      - unprotectedDatabases
      properties:
        unprotectedDatabases:
          type: array
          description: IDs of databases unprotected in order to protect the corresponding
            database. Since only one database in an availability group may be protected
            at a time, protecting databases may involve unprotecting other databases.
            Note that databases will only be unprotected if the force parameter in
            the SLA assignment request was set to true.
          items:
            type: string
  MssqlDbSlaConflictGroup:
    type: object
    required:
    - availabilityGroupId
    - protectedDatabases
    properties:
      availabilityGroupId:
        type: string
      protectedDatabases:
        type: array
        description: Databases which would end up protected. More than one indicates
          a conflict.
        items:
          $ref: '#/definitions/MssqlDbSummary'
      databaseToUnprotect:
        $ref: '#/definitions/MssqlDbSummary'
  MssqlDbSlaConflictInfo:
    type: object
    required:
    - groups
    properties:
      groups:
        type: array
        items:
          $ref: '#/definitions/MssqlDbSlaConflictGroup'
  MssqlDbSummary:
    allOf:
    - $ref: '#/definitions/Snappable'
    - type: object
      required:
      - rootProperties
      - id
      - instanceId
      - instanceName
      - isRelic
      - copyOnly
      - logBackupFrequencyInSeconds
      - logBackupRetentionHours
      - name
      - primaryClusterId
      - recoveryModel
      - hasPermissions
      - state
      - isLiveMount
      - isInAvailabilityGroup
      properties:
        rootProperties:
          $ref: '#/definitions/MssqlRootProperties'
        id:
          type: string
        instanceId:
          type: string
        instanceName:
          type: string
        isRelic:
          type: boolean
        primaryClusterId:
          type: string
        copyOnly:
          type: boolean
        logBackupFrequencyInSeconds:
          type: integer
          format: int32
        logBackupRetentionHours:
          type: integer
          format: int32
          description: Hours to keep a log backup. A value of -1 indicates that a
            log will only expire when the preceding snapshots have expired.
        name:
          type: string
        isLiveMount:
          type: boolean
          description: If true, the database is a Live Mount.
        recoveryModel:
          type: string
          enum:
          - SIMPLE
          - FULL
          - BULK_LOGGED
        state:
          type: string
        hasPermissions:
          type: boolean
        isInAvailabilityGroup:
          type: boolean
  MssqlDbUpdate:
    allOf:
    - $ref: '#/definitions/MssqlNonSlaProperties'
    - type: object
      properties:
        maxDataStreams:
          type: integer
          format: int32
          description: Maximum number of parallel data streams that can be used to
            backup the database.
        configuredSlaDomainId:
          type: string
          description: Assign DB to SLA Domain
  MssqlDbUpdateId:
    type: object
    required:
    - databaseId
    - updateProperties
    properties:
      databaseId:
        type: string
        description: ID of the Microsoft SQL database.
      updateProperties:
        $ref: '#/definitions/MssqlDbUpdate'
  MssqlInstanceSummary:
    allOf:
    - $ref: '#/definitions/MssqlNonSlaProperties'
    - type: object
      required:
      - id
      - primaryClusterId
      - rootProperties
      properties:
        id:
          type: string
        internalTimestamp:
          type: integer
          format: int64
        name:
          type: string
        primaryClusterId:
          type: string
        rootProperties:
          $ref: '#/definitions/MssqlRootProperties'
        clusterInstanceAddress:
          type: string
          description: The address of the instance in a Windows server failover cluster,
            populated only if it belongs to one.
        protectionDate:
          type: string
          format: date
        version:
          type: string
        configuredSlaDomainId:
          type: string
          description: SLA Domain ID assigned to instance
        configuredSlaDomainName:
          type: string
          description: SLA Domain name assigned to instance
  MssqlInstanceSummaryListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/MssqlInstanceSummary'
      total:
        type: integer
        description: Total list responses
  NetworkInterface:
    allOf:
    - $ref: '#/definitions/NodeIp'
    - type: object
      required:
      - netmask
      - vlan
      properties:
        netmask:
          type: string
          description: Netmask of the IP.
        vlan:
          type: integer
          format: int32
          description: VLAN this interface is on
  NetworkStat:
    type: object
    required:
    - bytesReceived
    - bytesTransmitted
    properties:
      bytesReceived:
        type: array
        items:
          $ref: '#/definitions/TimeStat'
      bytesTransmitted:
        type: array
        items:
          $ref: '#/definitions/TimeStat'
  NfsLocationCreationDefinition:
    allOf:
    - $ref: '#/definitions/NfsLocationDefinition'
    - type: object
      required:
      - encryptionPassword
      properties:
        encryptionPassword:
          type: string
          description: The password used for encrypting this archival location.
          x-secret: true
  NfsLocationDetail:
    type: object
    required:
    - id
    - definition
    properties:
      id:
        type: string
      definition:
        $ref: '#/definitions/NfsLocationDefinition'
  NfsLocationDetailListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/NfsLocationDetail'
      total:
        type: integer
        description: Total list responses
  NfsLocationReconnectSpec:
    allOf:
    - $ref: '#/definitions/NfsLocationDefinition'
    - type: object
      properties:
        encryptionPassword:
          type: string
          description: The password used for encrypting this archival location.
          x-secret: true
  NodeConfig:
    type: object
    required:
    - managementIpConfig
    properties:
      managementIpConfig:
        $ref: '#/definitions/IpConfig'
      ipmiIpConfig:
        $ref: '#/definitions/IpConfig'
      dataIpConfig:
        $ref: '#/definitions/IpConfig'
  NodeInfo:
    allOf:
    - $ref: '#/definitions/NodeStatus'
    - type: object
      required:
      - cpuCores
      - ram
      - networkSpeed
      - hdd
      - ssd
      properties:
        cpuCores:
          type: integer
          format: int64
        ram:
          type: integer
          format: int64
        networkSpeed:
          type: string
        hdd:
          type: array
          items:
            $ref: '#/definitions/DiskInfo'
        ssd:
          type: array
          items:
            $ref: '#/definitions/DiskInfo'
  NodeStats:
    allOf:
    - $ref: '#/definitions/NodeStatus'
    - $ref: '#/definitions/IoStat'
    - required:
      - networkStat
      - cpuStat
      properties:
        networkStat:
          $ref: '#/definitions/NetworkStat'
        cpuStat:
          type: array
          items:
            $ref: '#/definitions/TimeStat'
  NutanixClusterDetail:
    allOf:
    - $ref: '#/definitions/NutanixClusterSummary'
    - type: object
      required:
      - caCerts
      - status
      properties:
        caCerts:
          type: string
          description: Concatenated X.509 certificates in Base64 encoded DER format.
            Each certificate must start with -----BEGIN CERTIFICATE----- and end with
            -----END CERTIFICATE-----.
        status:
          type: string
          description: Status of a Nutanix cluster. Possible values are "Disconnected"
            (no communication possible with Nutanix Cluster), "Refreshing" (communication
            with Cluster but has not refreshed yet), "Connected" (refreshed the metadata
            for the Nutanix Cluster object), and "Deleting" (removing the Nutanix
            Cluster object).
          enum:
          - Disconnected
          - Refreshing
          - Connected
          - Deleting
  NutanixClusterSummary:
    allOf:
    - $ref: '#/definitions/SlaAssignable'
    - type: object
      required:
      - naturalId
      - hostname
      - username
      properties:
        naturalId:
          type: string
        hostname:
          type: string
        username:
          type: string
        status:
          type: string
          description: Status of a Nutanix cluster. Possible values are "Disconnected"
            (no communication possible with Nutanix Cluster), "Refreshing" (communication
            with Cluster but has not refreshed yet), "Connected" (refreshed the metadata
            for the Nutanix Cluster object), and "Deleting" (removing the Nutanix
            Cluster object).
          enum:
          - Disconnected
          - Refreshing
          - Connected
          - Deleting
  NutanixClusterSummaryListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/NutanixClusterSummary'
      total:
        type: integer
        description: Total list responses
  NutanixContainerListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/NutanixContainer'
      total:
        type: integer
        description: Total list responses
  NutanixHierarchyObjectSummary:
    allOf:
    - $ref: '#/definitions/ManagedHierarchyObjectSummary'
    - type: object
      required:
      - objectType
      - descendantCount
      properties:
        objectType:
          enum:
          - cluster
          - vm
          type: string
          description: Type of object
        descendantCount:
          $ref: '#/definitions/NutanixHierarchyObjectDescendantCount'
  NutanixHierarchyObjectSummaryListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/NutanixHierarchyObjectSummary'
      total:
        type: integer
        description: Total list responses
  NutanixVmDetail:
    allOf:
    - $ref: '#/definitions/NutanixVmPatch'
    - $ref: '#/definitions/NutanixVmSummary'
    - type: object
      required:
      - isPaused
      - blackoutWindowStatus
      - blackoutWindows
      properties:
        isPaused:
          type: boolean
          description: Whether backup/archival/replication is paused for this VM
        blackoutWindowStatus:
          $ref: '#/definitions/BlackoutWindowStatus'
        blackoutWindows:
          $ref: '#/definitions/BlackoutWindows'
  NutanixVmSnapshotSummary:
    allOf:
    - $ref: '#/definitions/BaseSnapshotSummary'
    - type: object
      required:
      - vmName
      properties:
        vmName:
          type: string
  NutanixVmSnapshotDetail:
    allOf:
    - $ref: '#/definitions/NutanixVmSnapshotSummary'
  NutanixVmSnapshotSummaryListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/NutanixVmSnapshotSummary'
      total:
        type: integer
        description: Total list responses
  NutanixVmSummary:
    allOf:
    - $ref: '#/definitions/Snappable'
    - type: object
      required:
      - id
      - name
      - nutanixClusterId
      - nutanixClusterName
      - isRelic
      properties:
        id:
          type: string
        name:
          type: string
        nutanixClusterId:
          type: string
          description: The ID of the Nutanix cluster to which this VM belongs
        nutanixClusterName:
          type: string
          description: The name of the Nutanix cluster to which this VM belongs
        isRelic:
          type: boolean
          description: Whether this Nutanix VM is currently present on the Nutanix
            cluster
  NutanixVmSummaryListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/NutanixVmSummary'
      total:
        type: integer
        description: Total list responses
  ObjectStoreLocationDefinition:
    allOf:
    - $ref: '#/definitions/ObjectStoreLocationSummary'
    - type: object
      required:
      - secretKey
      properties:
        secretKey:
          type: string
          description: The secret key to access the archival location
          x-secret: true
  ObjectStoreLocationDetailListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/ObjectStoreLocationDetail'
      total:
        type: integer
        description: Total list responses
  ObjectStoreLocationDetail:
    type: object
    required:
    - id
    - definition
    properties:
      id:
        type: string
      definition:
        $ref: '#/definitions/ObjectStoreLocationSummary'
  OrganizationDetail:
    type: object
    required:
    - id
    - name
    - principal
    - vmware
    - hyperv
    - windows
    - linux
    - managed_volume
    - nas_share
    - sla_domain
    - replication_target
    - archival_location
    properties:
      id:
        type: string
        description: The unique id of the Orgnization
      name:
        type: string
        description: The name of the Organization
      principal:
        type: array
        description: The summary of all the principals in the Organization
        items:
          $ref: '#/definitions/OrganizationPrincipalSummary'
      vmware:
        type: array
        description: The ids of the VMware Hierarchy items in the Organization
        items:
          type: string
      hyperv:
        type: array
        description: The ids of the Hyper-V Hierarchy items in the Organization
        items:
          type: string
      windows:
        type: array
        description: The ids of the Windows Fileset Hierarchy items in the Organization
        items:
          type: string
      linux:
        type: array
        description: The ids of the Linux Fileset Hierarchy items in the Organization
        items:
          type: string
      managed_volume:
        type: array
        description: The ids of the Managed Volume Hierarchy items in the Organization
        items:
          type: string
      nas_share:
        type: array
        description: The ids of the NAS Share Hierarchy items in the Organization
        items:
          type: string
      sql_server:
        type: array
        description: The ids of the SQL Server Hierarchy items in the Organization
        items:
          type: string
      sla_domain:
        type: array
        description: The ids of the SLA Domains in the Organization
        items:
          type: string
      replication_target:
        type: array
        description: The ids of the Replication Targets in the Organization
        items:
          type: string
      archival_location:
        type: array
        description: The ids of the Archival Locations in the Organization
        items:
          type: string
  OrganizationPrincipalSummary:
    allOf:
    - $ref: '#/definitions/OrganizationPrincipalDef'
    - type: object
      required:
      - name
      properties:
        name:
          type: string
          description: The name of this principal
  OrganizationSummary:
    type: object
    required:
    - id
    - name
    - resourceCount
    - userCount
    - organizationAdmins
    properties:
      id:
        type: string
        description: The unique id of the Organization
      name:
        type: string
        description: The name of the Organization
      resourceCount:
        type: integer
        format: int32
      userCount:
        type: integer
        format: int32
      organizationAdmins:
        type: array
        description: All of the Org Admins for this Organization
        items:
          $ref: '#/definitions/OrganizationPrincipalSummary'
  OrganizationSummaryListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/OrganizationSummary'
      total:
        type: integer
        description: Total list responses
  OrganizationUpdate:
    allOf:
    - $ref: '#/definitions/OrganizationCreate'
    - type: object
      required:
      - id
      properties:
        id:
          type: string
          description: The id of the Organization to update
  PrincipalSearchRequest:
    type: object
    required:
    - queries
    properties:
      limit:
        type: integer
        format: int32
        minimum: 0
        description: Maximum number of results to return
      offset:
        type: integer
        format: int32
        minimum: 0
        description: Starting offset of the results to return
      queries:
        type: array
        items:
          $ref: '#/definitions/PrincipalQuery'
        description: List of search queries to perform
      sort:
        type: array
        items:
          $ref: '#/definitions/PrincipalSort'
        description: List of fields by which to sort the result set
  PrincipalSort:
    type: object
    required:
    - attr
    properties:
      attr:
        type: string
        description: 'Attribute by which to sort: name|principalType|firstName|lastName|emailAddress|description
          (default is "name")'
      order:
        type: string
        description: 'Sort order: asc|desc (default is "asc")'
  PrincipalSummary:
    type: object
    required:
    - id
    - principalType
    - managedId
    - isDeleted
    - authDomainId
    - name
    - authorizations
    properties:
      id:
        type: string
        description: ID of user or group
      principalType:
        type: string
        description: 'Type of principal: (user|group)'
      managedId:
        type: string
        description: Managed ID of principal
      isDeleted:
        type: boolean
        description: Whether the principal is deleted
      authDomainId:
        type: string
        description: ID of the auth domain to which the principal belongs
      name:
        type: string
        description: User or group name
      firstName:
        type: string
        description: First name (users only)
      lastName:
        type: string
        description: Last name (users only)
      emailAddress:
        type: string
        description: E-mail address
      description:
        type: string
        description: Description (groups only)
      authorizations:
        $ref: '#/definitions/AuthorizationSummary'
        description: Explicit authorizations for this principal
  PrincipalSummaryListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/PrincipalSummary'
      total:
        type: integer
        description: Total list responses
  ProtectedObjectsCount:
    type: object
    required:
    - numTotal
    - numProtected
    properties:
      numTotal:
        type: integer
        format: int64
      numProtected:
        type: integer
        format: int64
  ProtectionDetail:
    type: object
    required:
    - managedId
    - id
    - objectType
    - name
    - configuredSlaDomainId
    properties:
      managedId:
        type: string
      id:
        type: string
      objectType:
        type: string
      name:
        type: string
      configuredSlaDomainId:
        type: string
      effectiveSlaDomainId:
        type: string
      effectiveSlaDomainName:
        type: string
      effectiveSlaSource:
        $ref: '#/definitions/ManagedObject'
  ProtectionDetailListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/ProtectionDetail'
      total:
        type: integer
        description: Total list responses
  QstarLocationDefinitionWithCredential:
    allOf:
    - $ref: '#/definitions/QstarLocationDefinition'
    - type: object
      required:
      - username
      - password
      - encryptionPassword
      properties:
        username:
          type: string
          description: User name credentials to access the QStar server
        password:
          type: string
          description: Password credentials to access the QStar server
          x-secret: true
        encryptionPassword:
          type: string
          description: Password for encrypting the QStar archival location.
          x-secret: true
  QstarLocationDetail:
    type: object
    required:
    - id
    - definition
    properties:
      id:
        type: string
        description: QStar archival location identifier
      definition:
        $ref: '#/definitions/QstarLocationDefinition'
        description: Details of the QStar archival location
  QstarLocationSummary:
    type: object
    required:
    - id
    - definition
    properties:
      id:
        type: string
        description: QStar archival location identifier
      definition:
        $ref: '#/definitions/QstarLocationDefinition'
        description: Details of the QStar archival location
  QstarLocationSummaryListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/QstarLocationSummary'
      total:
        type: integer
        description: Total list responses
  RemoveNfsBucketRequest:
    type: object
    required:
    - bucketPrefix
    - olderThanHours
    - locationDefinition
    properties:
      bucketPrefix:
        type: string
      olderThanHours:
        type: integer
        format: int32
      locationDefinition:
        $ref: '#/definitions/NfsLocationDefinition'
  RemoveObjectStoreBucketRequest:
    type: object
    required:
    - bucketPrefix
    - olderThanHours
    - locationDefinition
    properties:
      bucketPrefix:
        type: string
      olderThanHours:
        type: integer
        format: int32
      locationDefinition:
        $ref: '#/definitions/ObjectStoreLocationDefinition'
  RemoveQstarBucketRequest:
    type: object
    required:
    - bucketPrefix
    - olderThanHours
    - locationDefinition
    properties:
      bucketPrefix:
        type: string
      olderThanHours:
        type: integer
        format: int32
      locationDefinition:
        $ref: '#/definitions/QstarLocationDefinitionWithCredential'
  ReplicationSourceSummaryListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/ReplicationSourceSummary'
      total:
        type: integer
        description: Total list responses
  ReplicationStorage:
    type: object
    required:
    - remoteVmStorageOnPremise
    - localVmStorageAcrossAllTargets
    properties:
      remoteVmStorageOnPremise:
        type: array
        items:
          $ref: '#/definitions/RemoteClusterStorageStats'
      localVmStorageAcrossAllTargets:
        type: array
        items:
          $ref: '#/definitions/RemoteClusterStorageStats'
  ReplicationTargetDefinition:
    type: object
    required:
    - username
    - password
    - replicationSetup
    properties:
      targetClusterAddress:
        type: string
      targetGateway:
        $ref: '#/definitions/GatewayInfo'
      sourceGateway:
        $ref: '#/definitions/GatewayInfo'
      replicationSetup:
        type: string
      username:
        type: string
      password:
        type: string
  ReplicationTargetSummaryListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/ReplicationTargetSummary'
      total:
        type: integer
        description: Total list responses
  ReportDetail:
    allOf:
    - $ref: '#/definitions/ReportUpdate'
    - $ref: '#/definitions/ReportSummary'
  ReportSummary:
    allOf:
    - $ref: '#/definitions/ReportCreate'
    - type: object
      required:
      - id
      - reportType
      - updateStatus
      properties:
        id:
          type: string
          description: ID of the report.
        reportType:
          type: string
          description: Type of the report.
          enum:
          - Canned
          - Custom
        updateStatus:
          type: string
          description: 'The most recent update status of this report. NOTE: This field
            is likely to change'
  ReportSummaryListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/ReportSummary'
      total:
        type: integer
        description: Total list responses
  ReportUpdate:
    type: object
    required:
    - name
    - filters
    - chart0
    - chart1
    - table
    properties:
      name:
        type: string
        description: The name of the report.
      filters:
        $ref: '#/definitions/FilterSummary'
        description: Filter properties to update.
      chart0:
        $ref: '#/definitions/ChartSummary'
        description: Chart0 properties to update.
      chart1:
        $ref: '#/definitions/ChartSummary'
        description: Chart1 properties to update.
      table:
        $ref: '#/definitions/TableSummary'
        description: Table properties to update.
  RestoreFilesJobConfig:
    type: object
    required:
    - restoreConfig
    properties:
      restoreConfig:
        type: array
        description: Absolute file path and restore path if not restored back to itself
        items:
          $ref: '#/definitions/VmRestorePathPair'
      domainName:
        type: string
        description: Domain name (Use . for local admin)
      username:
        type: string
        description: Username
      password:
        type: string
        description: Password
        x-secret: true
      shouldSaveCredentials:
        type: boolean
        description: Whether we should save the user-entered credentials
  SearchResponse:
    type: object
    properties:
      path:
        type: string
      filename:
        type: string
        description: Just the filename without the whole path
      fileVersions:
        type: array
        items:
          $ref: '#/definitions/FileVersion'
  SearchResponseListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/SearchResponse'
      total:
        type: integer
        description: Total list responses
  SlaDomainDefinition:
    type: object
    required:
    - name
    - frequencies
    - firstFullAllowedBackupWindows
    properties:
      name:
        type: string
      frequencies:
        type: array
        items:
          $ref: '#/definitions/SlaFrequency'
      allowedBackupWindows:
        type: array
        items:
          $ref: '#/definitions/BackupWindow'
      firstFullAllowedBackupWindows:
        type: array
        items:
          $ref: '#/definitions/BackupWindow'
      localRetentionLimit:
        type: integer
        format: int64
      archivalSpecs:
        type: array
        items:
          $ref: '#/definitions/ArchivalSpec'
      replicationSpecs:
        type: array
        items:
          $ref: '#/definitions/ReplicationSpec'
  SlaDomainSummary:
    type: object
    required:
    - id
    - primaryClusterId
    - name
    - frequencies
    - allowedBackupWindows
    - firstFullAllowedBackupWindows
    - isDefault
    properties:
      id:
        type: string
      primaryClusterId:
        type: string
      name:
        type: string
      frequencies:
        type: array
        items:
          $ref: '#/definitions/SlaFrequency'
      allowedBackupWindows:
        type: array
        items:
          $ref: '#/definitions/BackupWindow'
      firstFullAllowedBackupWindows:
        type: array
        items:
          $ref: '#/definitions/BackupWindow'
      localRetentionLimit:
        type: integer
        format: int64
        description: Retention limit for snapshots on the local Rubrik system. If
          none, they will remain as long as SLA requires.
      archivalSpecs:
        type: array
        items:
          $ref: '#/definitions/ArchivalSpec'
        description: Specification for archival locations on this SLA
      replicationSpecs:
        type: array
        items:
          $ref: '#/definitions/ReplicationSpec'
        description: Specification for replication locations on this SLA
      numDbs:
        type: integer
        format: int32
        description: The number of actively protected databases under this SLA domain.
      numFilesets:
        type: integer
        format: int32
        description: The number of filesets protected under this SLA domain.
      numHypervVms:
        type: integer
        format: int32
        description: The number of hyperv VMs protected under this SLA domain.
      numNutanixVms:
        type: integer
        format: int32
        description: The number of Nutanix VMs protected under this SLA domain.
      numManagedVolumes:
        type: integer
        format: int32
        description: The number of Managed volumes protected under this SLA domain.
      numLinuxHosts:
        type: integer
        format: int32
        description: The number of linux servers, with a fileset, protected under
          this SLA domain.
      numShares:
        type: integer
        format: int32
        description: The number of shares protected under this SLA domain.
      numWindowsHosts:
        type: integer
        format: int32
        description: The number of windows servers, with a fileset, protected under
          this SLA domain.
      numVms:
        type: integer
        format: int32
      isDefault:
        type: boolean
      uiColor:
        type: string
  SmtpInstanceDetailListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/SmtpInstanceDetail'
      total:
        type: integer
        description: Total list responses
  SnapshotDiagnosticInfo:
    type: object
    required:
    - confCompressionType
    - patchCompressionTypes
    - locationIdtoIsFullMap
    properties:
      confCompressionType:
        type: integer
        format: int32
        description: Compression type read from config file
      patchCompressionTypes:
        type: array
        items:
          type: integer
          format: int32
        description: Return a list of pathfile compression type
      locationIdtoIsFullMap:
        $ref: '#/definitions/Map_Boolean'
        description: A map from locationId to boolean. For each location, says whether
          ALL of the snapshot's content on that location are full snapshots.
  StorageArrayDetailListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/StorageArrayDetail'
      total:
        type: integer
        description: Total list responses
  SyslogServerSettings:
    allOf:
    - $ref: '#/definitions/SyslogServerSettingsUpdate'
    - type: object
      required:
      - id
      properties:
        id:
          type: string
  SyslogServerSettingsListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/SyslogServerSettings'
      total:
        type: integer
        description: Total list responses
  TableData:
    allOf:
    - $ref: '#/definitions/TableSummary'
    - type: object
      required:
      - dataGrid
      - hasMore
      properties:
        dataGrid:
          type: array
          description: Table rows.
          items:
            type: array
            description: A row of the table.
            items:
              type: string
              description: A single data point for the table.
        hasMore:
          type: boolean
          description: True if the list has more elements.
        lastId:
          type: string
          description: ID of the last table row sent in the response. Used for setting
            the afterId when getting the next page of the table.
  UnmanagedObjectSummary:
    type: object
    required:
    - id
    - name
    - objectType
    - physicalLocation
    - unmanagedStatus
    - unmanagedSnapshotCount
    - localStorage
    - archiveStorage
    properties:
      id:
        type: string
      name:
        type: string
      objectType:
        type: string
        enum:
        - VirtualMachine
        - MssqlDatabase
        - LinuxFileset
        - WindowsFileset
        - ShareFileset
        - NutanixVirtualMachine
        description: The type of the unmanaged object. This may be VirtualMachine,
          MssqlDatabase, LinuxFileset, ShareFileset, WindowsFileset, or NutanixVirtualMachine
      physicalLocation:
        type: array
        description: Brief info of all the objects in the physical path to this Object
        items:
          $ref: '#/definitions/LocationPathPoint'
      unmanagedStatus:
        enum:
        - Protected
        - Relic
        - Unprotected
        type: string
        description: Unmanaged Status of this object. Protected means that this object
          is still protected by an SLA Policy. Unprotected means that this object
          has become unprotected. Relic means that Rubrik has lost contact with this
          object.
      unmanagedSnapshotCount:
        type: integer
        format: int64
        description: Number of unmanaged snapshots of this object.
      localStorage:
        type: integer
        format: int64
        description: Storage being taken up on the local cluster by unmanaged snapshots.
      archiveStorage:
        type: integer
        format: int64
        description: Storage being taken up in the archival location by unmanaged
          snapshots.
  UnmanagedObjectSummaryListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/UnmanagedObjectSummary'
      total:
        type: integer
        description: Total list responses
  UnmanagedSnapshotSummaryListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/UnmanagedSnapshotSummary'
      total:
        type: integer
        description: Total list responses
  VirtualDiskSummaryListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/VirtualDiskSummary'
      total:
        type: integer
        description: Total list responses
  VirtualMachineBriefListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/VirtualMachineBrief'
      total:
        type: integer
        description: Total list responses
  VirtualMachineBulkUpdate:
    type: object
    required:
    - vmIds
    - updateProperty
    properties:
      vmIds:
        type: array
        items:
          type: string
      updateProperty:
        $ref: '#/definitions/VirtualMachineUpdateWithSecret'
  VirtualMachineSummary:
    allOf:
    - $ref: '#/definitions/Snappable'
    - type: object
      required:
      - vcenterId
      - hostId
      - isReplicationEnabled
      - folderPath
      - infraPath
      - vmwareToolsInstalled
      - isRelic
      - snapshotConsistencyMandate
      - guestCredentialAuthorizationStatus
      - moid
      - ipAddress
      properties:
        moid:
          type: string
        vcenterId:
          type: string
        hostName:
          type: string
        hostId:
          type: string
        clusterName:
          type: string
        snapshotConsistencyMandate:
          type: string
          description: Consistency level mandated for this VM or empty string for
            none.
          enum:
          - UNKNOWN
          - INCONSISTENT
          - CRASH_CONSISTENT
          - FILE_SYSTEM_CONSISTENT
          - VSS_CONSISTENT
          - APP_CONSISTENT
        powerStatus:
          type: string
          description: The power status of VM(ON,OFF,SLEEP etc.)
        protectionDate:
          type: string
          format: date-time
        ipAddress:
          type: string
        toolsInstalled:
          type: boolean
        isReplicationEnabled:
          type: boolean
        folderPath:
          type: array
          description: Brief info of all the objects in the folder path to this VM
          items:
            $ref: '#/definitions/VmPathPoint'
        infraPath:
          type: array
          description: Brief info of all the objects in the infrastructure path to
            this VM
          items:
            $ref: '#/definitions/VmPathPoint'
        vmwareToolsInstalled:
          type: boolean
        isRelic:
          type: boolean
        guestCredentialAuthorizationStatus:
          description: 'Status of authentication with a specific virtual machine using
            guest credentials. Possible values are: SUCCESSFUL, PENDING, or FAILED.'
          type: string
        cloudInstantiationSpec:
          $ref: '#/definitions/CloudInstantiationSpec'
          description: Cloud instantiation specification for the selected virtual
            machine.
  VirtualMachineUpdate:
    type: object
    properties:
      maxNestedVsphereSnapshots:
        type: integer
        format: int32
      snapshotConsistencyMandate:
        type: string
        description: Consistency level mandated for this VM or empty string for none.
        enum:
        - UNKNOWN
        - INCONSISTENT
        - CRASH_CONSISTENT
        - FILE_SYSTEM_CONSISTENT
        - VSS_CONSISTENT
        - APP_CONSISTENT
      isVmPaused:
        type: boolean
        description: Whether to pause or resume backups/archival for this VM
      configuredSlaDomainId:
        type: string
        description: Assign this VM to the given SLA domain.
      preBackupScript:
        $ref: '#/definitions/VirtualMachineScriptDetail'
      postSnapScript:
        $ref: '#/definitions/VirtualMachineScriptDetail'
      postBackupScript:
        $ref: '#/definitions/VirtualMachineScriptDetail'
      isArrayIntegrationEnabled:
        type: boolean
        description: User setting to dictate whether to use storage array snaphots
          for ingest. This setting only makes sense for VMs where array based ingest
          is possible.
      cloudInstantiationSpec:
        $ref: '#/definitions/CloudInstantiationSpec'
        description: Cloud instantiation specification for the selected virtual machine.
  VirtualMachineUpdateWithSecret:
    allOf:
    - $ref: '#/definitions/VirtualMachineUpdate'
    - type: object
      properties:
        guestCredential:
          $ref: '#/definitions/BaseGuestCredential'
  VlanConfig:
    type: object
    required:
    - vlan
    - netmask
    - interfaces
    properties:
      vlan:
        type: integer
        format: int32
      netmask:
        type: string
        description: Netmask for addresses on this VLAN
      interfaces:
        type: array
        items:
          $ref: '#/definitions/NodeIp'
        description: Network interfaces for each node
  VmRestorePathPair:
    allOf:
    - $ref: '#/definitions/RestorePathPair'
  VmSnapshotSummary:
    allOf:
    - $ref: '#/definitions/BaseSnapshotSummary'
    - type: object
      required:
      - vmName
      properties:
        vmName:
          type: string
  VmStorageStatsListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/VmStorageStats'
      total:
        type: integer
        description: Total list responses
  VmwareHostSummary:
    allOf:
    - $ref: '#/definitions/SlaAssignable'
    - type: object
      required:
      - datacenterId
      properties:
        datacenterId:
          type: string
        computeClusterId:
          type: string
        datastores:
          type: array
          items:
            $ref: '#/definitions/DataStoreSummary'
  VmwareVmMountSummary:
    type: object
    required:
    - id
    - snapshotDate
    - vmId
    - vmName
    - isReady
    properties:
      id:
        type: string
      snapshotDate:
        type: string
        format: date-time
      vmId:
        type: string
      vmName:
        type: string
      virtualMachine:
        $ref: '#/definitions/VirtualMachineSummary'
      hostId:
        type: string
      isReady:
        type: boolean
      mountRequestId:
        type: string
      unmountRequestId:
        type: string
  VmwareVmMountSummaryListResponse:
    type: object
    properties:
      hasMore:
        type: boolean
        description: If there is more
      data:
        type: array
        description: List of matching objects
        items:
          $ref: '#/definitions/VmwareVmMountSummary'
      total:
        type: integer
        description: Total list responses

paths:
  /internal/archive/location:
    get:
      summary: Get summary information for all archival locations.
      description: Retrieve information for all archival locations, including ID,
        type, status, address, and bucket count.
      operationId: queryArchivalLocations
      tags:
      - /internal/archive
      x-group: data_location
      parameters:
      - in: query
        description: 'Filters archival locations by status. Accepted values: ''active'''
        name: status
        required: false
        type: string
      responses:
        '200':
          description: Returns a list of archival locations
          schema:
            $ref: '#/definitions/ArchivalLocationSummaryListResponse'
  /internal/archive/location/connect_job:
    get:
      summary: Get running connection jobs.
      description: Retrieve a list of all running connection and reconnection jobs
        for archival locations. Returns summary information about the archival location
        and the job.
      operationId: getArchivalLocationConnectJobs
      tags:
      - /internal/archive
      x-group: data_location
      parameters: []
      responses:
        '200':
          description: Returns running connection jobs for archival locations..
          schema:
            $ref: '#/definitions/ArchivalLocationConnectJobListResponse'
  /internal/archive/location/disconnect/{id}:
    post:
      summary: Disconnect a connected archival location.
      description: Disconnect an already connected archival location. Initiates a
        asynchronous job to disconnect the archival location and disable that location
        in all associated SLAs.
      operationId: disconnectArchivalLocation
      tags:
      - /internal/archive
      x-group: data_location
      parameters:
      - in: path
        description: ID of an archival location to disconnect.
        name: id
        required: true
        type: string
      responses:
        '202':
          description: Returns the job ID for the disconnect job.
          schema:
            $ref: '#/definitions/JobScheduledResponse'
  /internal/archive/location/job/connect/{id}:
    get:
      summary: Get details about a archival location connect job
      description: 'Retrieve the following information about job: ID of job, job status,
        error details, start time of job, end time of job, job type, ID of the node,
        job progress and location id.'
      operationId: getAddArchivalLocationJobInstance
      tags:
      - /internal/archive
      x-group: data_location
      parameters:
      - in: path
        description: ID of Job
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Return job details.
          schema:
            $ref: '#/definitions/JobInstanceDetail'
  /internal/archive/location/job/reconnect/{id}:
    get:
      summary: Get details about a archival location reconnect job
      description: 'Retrieve the following information about job: ID of job, job status,
        error details, start time of job, end time of job, job type, ID of the node,
        job progress and location id'
      operationId: getReconnectArchivalLocationJobInstance
      tags:
      - /internal/archive
      x-group: data_location
      parameters:
      - in: path
        description: ID of Job
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Return job details.
          schema:
            $ref: '#/definitions/JobInstanceDetail'
  /internal/archive/location/{id}:
    delete:
      summary: Delete a disconnected archival location
      description: Delete an archival location that has already been disconnected.
        Expires all snapshots on the location.
      operationId: deleteArchivalLocation
      tags:
      - /internal/archive
      x-group: data_location
      parameters:
      - in: path
        description: ID of the archival location
        name: id
        required: true
        type: string
      responses:
        '202':
          description: Returns the job ID for the disconnect job.
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
  /internal/archive/nfs:
    get:
      summary: Get summary information about all archival locations that use the NFS
        protocol.
      description: Returns an array containing archival locations that uses the NFS
        protocol.
      operationId: queryNfsLocations
      tags:
      - /internal/archive
      x-group: data_location
      parameters: []
      responses:
        '200':
          description: Returns list of archival locations that use the NFS protocol.
          schema:
            $ref: '#/definitions/NfsLocationDetailListResponse'
    post:
      summary: Add an archival location that uses the NFS protocol.
      description: Add a new archival location that uses the NFS protocol. Initiates
        an asynchronous job to establish a connection with the archival location.
      operationId: createNfsLocation
      tags:
      - /internal/archive
      x-group: data_location
      parameters:
      - in: body
        description: Object containing information about the archival location.
        name: definition
        required: true
        schema:
          $ref: '#/definitions/NfsLocationCreationDefinition'
      responses:
        '202':
          description: Returns the job ID for connecting to a new archival location
            that uses the NFS protocol.
          schema:
            $ref: '#/definitions/JobScheduledResponse'
  /internal/archive/nfs/reconnect:
    post:
      summary: Reconnect to a specific archival location that uses the NFS protocol
      description: Reconnect to a specific archival location that uses the NFS protocol.
        Initiates an asynchronous job to establish a connection with the archival
        location.
      operationId: reconnectNfs
      tags:
      - /internal/archive
      x-group: data_location
      parameters:
      - in: body
        description: Archival location credentials.
        name: request
        required: true
        schema:
          $ref: '#/definitions/NfsLocationReconnectSpec'
      responses:
        '202':
          description: Returns the job instance id of the reconnect job.
          schema:
            $ref: '#/definitions/JobScheduledResponse'
  /internal/archive/nfs/{id}:
    patch:
      summary: Update an archival location that uses the NFS protocol.
      description: 'Update the properties of an archival location that uses the NFS
        protocol. '
      operationId: updateNfsLocation
      tags:
      - /internal/archive
      x-group: data_location
      parameters:
      - in: path
        description: ID of the archival location.
        name: id
        required: true
        type: string
      - in: body
        description: Object containing information about the archival location.
        name: updated_definition
        required: true
        schema:
          $ref: '#/definitions/NfsLocationUpdate'
      responses:
        '200':
          description: Returns the updated NFS location object.
          schema:
            $ref: '#/definitions/NfsLocationDetail'
  /internal/archive/object_store:
    get:
      summary: Get summary information about all archival locations that use the S3
        protocol.
      description: Returns an array containing archival locations that uses the S3
        protocol; such as AWS, Cleversafe, and Scality. Does not retrieve archival
        locations that use the NFS protocol.
      operationId: queryObjectStoreLocations
      tags:
      - /internal/archive
      x-group: data_location
      parameters: []
      responses:
        '200':
          description: Returns list of archival locations that use the S3 protocol.
          schema:
            $ref: '#/definitions/ObjectStoreLocationDetailListResponse'
    post:
      summary: Add a new archival location that uses the S3 protocol.
      description: Add a new archival location that uses the S3 protocol; such as
        AWS, Cleversafe, or Scality. Initiates an asynchronous job to establish a
        connection with the archival location.
      operationId: createObjectStoreLocation
      tags:
      - /internal/archive
      x-group: data_location
      parameters:
      - in: body
        description: Object containing information about the archival location.
        name: definition
        required: true
        schema:
          $ref: '#/definitions/ObjectStoreLocationDefinition'
      responses:
        '202':
          description: Returns the job ID for connecting to a new archival location
            that uses the S3 protocol.
          schema:
            $ref: '#/definitions/JobScheduledResponse'
  /internal/archive/object_store/reconnect:
    post:
      summary: Reconnect to a specific archival location that uses the S3 protocol.
      description: Reconnect to a specific archival location that uses the S3 protocol.
        Initiates an asynchronous job to establish a connection with the archival
        location.
      operationId: reconnectObjectStore
      tags:
      - /internal/archive
      x-group: data_location
      parameters:
      - in: body
        description: Archival location credentials.
        name: request
        required: true
        schema:
          $ref: '#/definitions/ObjectStoreReconnectDefinition'
      responses:
        '202':
          description: Returns the job instance id for the reconnect job.
          schema:
            $ref: '#/definitions/JobScheduledResponse'
  /internal/archive/object_store/{id}:
    get:
      summary: Get information about a specific archival location that uses the S3
        protocol.
      description: Get the archival location object for a specific archival location
        that uses the S3 protocol.
      operationId: getObjectStoreLocation
      tags:
      - /internal/archive
      x-group: data_location
      parameters:
      - in: path
        description: ID of an archival location that uses the S3 protocol.
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Object containing information about the archival location.
          schema:
            $ref: '#/definitions/ObjectStoreLocationDetail'
    patch:
      summary: Update an archival location that uses the S3 protocol.
      description: 'Update the properties of an archival location that uses the S3
        protocol. IMPORTANT: Specify a bucket count that is equal to or greater than
        the existing bucket count.'
      operationId: updateObjectStoreLocation
      tags:
      - /internal/archive
      x-group: data_location
      parameters:
      - in: path
        description: ID of the archival location.
        name: id
        required: true
        type: string
      - in: body
        description: Object containing information about the archival location.
        name: updated_definition
        required: true
        schema:
          $ref: '#/definitions/ObjectStoreUpdateDefinition'
      responses:
        '200':
          description: Returns the successfully updated archival location object.
          schema:
            $ref: '#/definitions/ObjectStoreLocationDetail'
  /internal/archive/qstar:
    get:
      summary: Get summary information about all Qstar archival locations
      description: Returns an array containing all Qstar archival locations
      operationId: queryQstarLocations
      tags:
      - /internal/archive
      x-group: archival
      parameters: []
      responses:
        '200':
          description: Returns list of Qstar archival locations
          schema:
            $ref: '#/definitions/QstarLocationSummaryListResponse'
    delete:
      summary: REQUIRES SUPPORT TOKEN - Tries to clean up the data in the bucket in
        the Qstar archival location
      description: REQUIRES SUPPORT TOKEN - To be used by internal tests to clean
        the buckets. A support token is required for this operation.
      operationId: cleanQstarBucket
      tags:
      - /internal/archive
      x-group: archival
      parameters:
      - in: body
        description: Archival definition
        name: definition
        required: true
        schema:
          $ref: '#/definitions/QstarLocationDefinitionWithCredential'
      responses:
        '204':
          description: Returned if bucket was successfully emptied.
    post:
      summary: Add a Qstar archival location
      description: Add a new Qstar archival location protocol. Initiates an asynchronous
        job to establish a connection with the archival location.
      operationId: createQstarLocation
      tags:
      - /internal/archive
      x-group: archival
      parameters:
      - in: body
        description: Object containing information about the archival location.
        name: definition
        required: true
        schema:
          $ref: '#/definitions/QstarLocationDefinitionWithCredential'
      responses:
        '202':
          description: Returns the job instance ID for the job that is connecting
            the QStar archival location.
          schema:
            $ref: '#/definitions/JobScheduledResponse'
  /internal/archive/qstar/reconnect:
    post:
      summary: Reconnect to a specific Qstar archival location
      description: Reconnect to a specific Qstar archival location. Initiates an asynchronous
        job to establish a connection with the archival location.
      operationId: reconnectQstar
      tags:
      - /internal/archive
      x-group: archival
      parameters:
      - in: body
        description: Credentials for accessing the archival location.
        name: request
        required: true
        schema:
          $ref: '#/definitions/QstarLocationDefinitionWithCredential'
      responses:
        '202':
          description: Returns the job instance ID of the archival location connection
            job.
          schema:
            $ref: '#/definitions/JobScheduledResponse'
  /internal/archive/qstar/remove_bucket:
    post:
      summary: REQUIRES SUPPORT TOKEN - Remove all buckets matching given prefix.
      description: REQUIRES SUPPORT TOKEN - To be used by internal tests to remove
        all Qstar buckets matching given prefix. Returns a list of buckets successfully
        removed. A support token is required for this operation.
      operationId: removeQstarBucket
      tags:
      - /internal/archive
      x-group: archival
      parameters:
      - in: body
        description: Remove bucket request configurations
        name: request
        required: true
        schema:
          $ref: '#/definitions/RemoveQstarBucketRequest'
      responses:
        '200':
          description: List of buckets removed.
          schema:
            type: array
            items:
              type: string
  /internal/archive/qstar/{id}:
    get:
      summary: Get summary information about an Qstar archival location
      description: Returns summary information about a Qstar archival location
      operationId: queryQstarLocationbyId
      tags:
      - /internal/archive
      x-group: archival
      parameters:
      - in: path
        description: ID of the archival location.
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Returns details about a Qstar archival location
          schema:
            $ref: '#/definitions/QstarLocationDetail'
    patch:
      summary: Update an Qstar archival location
      description: Update the properties of a QStar archival location object.
      operationId: updateQstarLocation
      tags:
      - /internal/archive
      x-group: archival
      parameters:
      - in: path
        description: ID of the archival location.
        name: id
        required: true
        type: string
      - in: body
        description: Object containing information about the archival location.
        name: updated_definition
        required: true
        schema:
          $ref: '#/definitions/QstarLocationUpdate'
      responses:
        '200':
          description: Returns the updated Qstar location object.
          schema:
            $ref: '#/definitions/QstarLocationDetail'
  /internal/auth_domain:
    get:
      summary: Get a list of authentication domains
      description: Get a list of authentication domains.
      operationId: queryAuthDomain
      tags:
      - /internal/auth_domain
      x-group: auth_domain
      parameters: []
      responses:
        '200':
          description: Returns the list of authentication domains
          schema:
            type: array
            items:
              description: listResponse
              $ref: '#/definitions/AuthDomainSummary'
    post:
      summary: Add a new authentication domain
      description: 'Add a new authentication domain. '
      operationId: createAuthDomain
      tags:
      - /internal/auth_domain
      x-group: auth_domain
      parameters:
      - in: body
        description: Information for joining an authentication domain
        name: auth_domain_join_info
        required: true
        schema:
          $ref: '#/definitions/AuthDomainJoinInfo'
      responses:
        '201':
          description: Returns a summary of the newly created authentication domain.
          schema:
            $ref: '#/definitions/AuthDomainSummary'
  /internal/auth_domain/{id}:
    delete:
      summary: Delete a auth domain for the given id
      description: Delete a auth domain for the given id
      operationId: deleteAuthDomain
      tags:
      - /internal/auth_domain
      x-group: auth_domain
      parameters:
      - in: path
        description: ID of the Auth Domain to be deleted
        name: id
        required: true
        type: string
      responses:
        '204':
          description: Delete Successful
  /internal/authorization:
    get:
      description: Queries the current list of explicit authorizations
      operationId: queryAuthorization
      tags:
      - /internal/authorization
      parameters:
      - description: List of principals (ManagedIds) whose authorizations to query
        in: query
        items:
          type: string
        name: principals
        required: true
        type: array
      responses:
        '200':
          description: Returns the list of explicit authorizations for each specified
            principal
          schema:
            $ref: '#/definitions/AuthorizationSummaryListResponse'
      summary: Queries the current list of explicit authorizations
      x-group: authorization
  /internal/authorization/effective/for_resources:
    post:
      description: Queries the current effective authorizations on the specified resources
      operationId: effectiveAuthorizationsForResources
      tags:
      - /internal/authorization
      parameters:
      - description: Query listing all resources to get effective authorizations for
        in: body
        name: effective_authorizations_query
        required: true
        schema:
          $ref: '#/definitions/EffectiveAuthorizationsQuery'
      responses:
        '200':
          description: Returns the list of effective authorizations for the desired
            principal on the specified resources
          schema:
            $ref: '#/definitions/AuthorizationSummary'
      summary: Queries the current effective authorizations on the specified resources
      x-group: authorization
  /internal/authorization/effective/roles:
    get:
      description: Queries the current effective authorizations by role
      operationId: effectiveRoles
      tags:
      - /internal/authorization
      parameters:
      - description: Optional principal (ManagedId) whose authorizations to query;
          if not specified, the current authenticated user will be used
        in: query
        name: principal
        required: false
        type: string
      - description: 'Optional comma-separated list of resource types. If specified,
          only those roles and privileges are returned for which the principal has
          an authorization for at least one of the types in the list. Accepted values
          are: '
        in: query
        items:
          type: string
        name: resource_types
        required: false
        type: array
      responses:
        '200':
          description: Returns the list of roles and privileges for which the desired
            principal has effective authorizations
          schema:
            $ref: '#/definitions/AuthorizationRoles'
      summary: Queries the current effective authorizations by role
      x-group: authorization
  /internal/authorization/role/admin:
    delete:
      description: Revokes an admin authorization for principal(s)
      operationId: revokeAuthorizationAdmin
      tags:
      - /internal/authorization
      parameters:
      - description: Policy describing the authorization to remove
        in: body
        name: authorization_policy
        required: true
        schema:
          $ref: '#/definitions/BulkAdminAuthorization'
      responses:
        '200':
          description: Returns the updated list of explicit authorizations for each
            specified principal
          schema:
            $ref: '#/definitions/AdminAuthorizationListResponse'
      summary: Revokes an admin authorization for principal(s)
      x-group: authorization
    get:
      description: Gets the current list of explicit authorizations for the admin
        role
      operationId: getAuthorizationAdmin
      tags:
      - /internal/authorization
      parameters:
      - description: List of principals (ManagedIds) whose explicit authorizations
          to get
        in: query
        items:
          type: string
        name: principals
        required: true
        type: array
      responses:
        '200':
          description: Returns the list of explicit authorizations for each specified
            principal
          schema:
            $ref: '#/definitions/AdminAuthorizationListResponse'
      summary: Gets the current list of explicit authorizations for the admin role
      x-group: authorization
    post:
      description: Grants an admin authorization for principal(s)
      operationId: grantAuthorizationAdmin
      tags:
      - /internal/authorization
      parameters:
      - description: Policy describing the authorization to add
        in: body
        name: authorization_policy
        required: true
        schema:
          $ref: '#/definitions/BulkAdminAuthorization'
      responses:
        '200':
          description: Returns the updated list of explicit authorizations for each
            specified principal
          schema:
            $ref: '#/definitions/AdminAuthorizationListResponse'
      summary: Grants an admin authorization for principal(s)
      x-group: authorization
  /internal/authorization/role/end_user:
    delete:
      description: Revokes an end_user authorization for principal(s)
      operationId: revokeAuthorizationEndUser
      tags:
      - /internal/authorization
      parameters:
      - description: Policy describing the authorization to remove
        in: body
        name: authorization_policy
        required: true
        schema:
          $ref: '#/definitions/BulkEndUserAuthorization'
      responses:
        '200':
          description: Returns the updated list of explicit authorizations for each
            specified principal
          schema:
            $ref: '#/definitions/EndUserAuthorizationListResponse'
      summary: Revokes an end_user authorization for principal(s)
      x-group: authorization
    get:
      description: Gets the current list of explicit authorizations for the end_user
        role
      operationId: getAuthorizationEndUser
      tags:
      - /internal/authorization
      parameters:
      - description: List of principals (ManagedIds) whose explicit authorizations
          to get
        in: query
        items:
          type: string
        name: principals
        required: true
        type: array
      responses:
        '200':
          description: Returns the list of explicit authorizations for each specified
            principal
          schema:
            $ref: '#/definitions/EndUserAuthorizationListResponse'
      summary: Gets the current list of explicit authorizations for the end_user role
      x-group: authorization
    post:
      description: Grants an end_user authorization for principal(s)
      operationId: grantAuthorizationEndUser
      tags:
      - /internal/authorization
      parameters:
      - description: Policy describing the authorization to add
        in: body
        name: authorization_policy
        required: true
        schema:
          $ref: '#/definitions/BulkEndUserAuthorization'
      responses:
        '200':
          description: Returns the updated list of explicit authorizations for each
            specified principal
          schema:
            $ref: '#/definitions/EndUserAuthorizationListResponse'
      summary: Grants an end_user authorization for principal(s)
      x-group: authorization
  /internal/aws/image:
    get:
      summary: Query for a list of a cloud images.
      description: Query for a list of a cloud images.
      operationId: queryPublicCloudMachineImage
      tags:
      - /internal/aws
      x-group: cloud_instance
      parameters:
      - in: query
        description: Filters cloud images by snappable ID
        name: snappable_id
        required: false
        type: string
      - in: query
        description: Filters cloud images by location ID
        name: location_id
        required: false
        type: string
      - name: offset
        in: query
        description: Ignore these many matches in the beginning.
        required: false
        type: integer
        format: int32
        minimum: 0
      - name: limit
        in: query
        description: 'Limit the number of matches returned. Default is to return all
          available records.

          '
        required: false
        type: integer
        format: int32
        minimum: 0
      - name: snappable_name
        in: query
        description: 'Filters results to images with source snappable names containing
          the given query.

          '
        required: false
        type: string
      responses:
        '200':
          description: Returns summary information for all cloud images.
          schema:
            $ref: '#/definitions/AwsImageSummaryListResponse'
  /internal/aws/image/{id}:
    get:
      summary: Get details about a given cloud image.
      description: Get details about a given cloud image.
      operationId: getPublicCloudMachineImage
      tags:
      - /internal/aws
      x-group: cloud_instance
      parameters:
      - in: path
        description: ID of the cloud image
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Returns details about the cloud image.
          schema:
            $ref: '#/definitions/AwsImageDetail'
    delete:
      summary: Delete a given cloud image.
      description: Delete a given cloud image.
      operationId: deletePublicCloudMachineImage
      tags:
      - /internal/aws
      x-group: cloud_instance
      parameters:
      - in: path
        description: ID of the cloud instance
        name: id
        required: true
        type: string
      responses:
        '202':
          description: Status for the image deletion request.
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
  /internal/aws/instance:
    get:
      summary: Query for a list of a cloud instances.
      description: Query for a list of a cloud instances.
      operationId: queryPublicCloudMachineInstance
      tags:
      - /internal/aws
      x-group: cloud_instance
      parameters:
      - name: offset
        in: query
        description: Ignore these many matches in the beginning.
        required: false
        type: integer
        format: int32
        minimum: 0
      - name: limit
        in: query
        description: 'Limit the number of matches returned. Default is to return all
          available records.

          '
        required: false
        type: integer
        format: int32
        minimum: 0
      - name: snappable_name
        in: query
        description: 'Filters results to instances with source snappable names containing
          the given query.

          '
        required: false
        type: string
      responses:
        '200':
          description: Returns summary information for all cloud instances.
          schema:
            $ref: '#/definitions/AwsInstanceSummaryListResponse'
    post:
      summary: Instantiate using the given snapshot on the given location.
      description: 'Instantiate using the given snapshot on the given location, creating
        a new cloud image if necessary.

        '
      operationId: createPublicCloudMachineInstance
      tags:
      - /internal/aws
      x-group: cloud_instance
      parameters:
      - in: body
        description: Request to create a new public cloud instance.
        name: request
        required: true
        schema:
          $ref: '#/definitions/CreateCloudInstanceRequest'
      responses:
        '202':
          description: Status for the instantiation request.
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
    patch:
      summary: Turn on or off a given cloud instance.
      description: Turn on or off a given cloud instance.
      operationId: switchPublicCloudMachineInstancePower
      tags:
      - /internal/aws
      x-group: cloud_instance
      parameters:
      - in: body
        description: Properties to update
        name: update
        required: true
        schema:
          $ref: '#/definitions/CloudInstanceUpdate'
      responses:
        '200':
          description: Returns updated details about the cloud instance.
          schema:
            $ref: '#/definitions/AwsInstanceDetail'
  /internal/aws/instance/{id}:
    get:
      summary: Get details about a given cloud instance.
      description: Get details about a given cloud instance.
      operationId: getPublicCloudMachineInstance
      tags:
      - /internal/aws
      x-group: cloud_instance
      parameters:
      - in: path
        description: ID of the cloud instance
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Returns details about the cloud instance.
          schema:
            $ref: '#/definitions/AwsInstanceDetail'
    delete:
      summary: Delete a given cloud instance.
      description: Delete a given cloud instance.
      operationId: deletePublicCloudMachineInstance
      tags:
      - /internal/aws
      x-group: cloud_instance
      parameters:
      - in: path
        description: ID of the cloud instance
        name: id
        required: true
        type: string
      responses:
        '202':
          description: Status for the instance deletion request.
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
  /internal/aws/recommended_instance_type:
    get:
      summary: Get the recommended instance type for a given VMWare snapshot
      description: Get the recommended instance type for a given VMWare snapshot
      operationId: getRecommendedInstanceType
      tags:
      - /internal/aws
      x-group: cloud_instance
      parameters:
      - in: query
        description: snapshot ID
        name: snapshot_id
        required: true
        type: string
      responses:
        '200':
          description: Returns the recommended instance type
          schema:
            $ref: '#/definitions/RecommendedInstanceType'
  /internal/aws/request/{id}:
    get:
      summary: Get asynchronous request details for AWS-related jobs
      description: Get the details of an asynchronous request that involves AWS
      operationId: getAwsAsyncRequestStatus
      tags:
      - /internal/aws
      x-group: cloud_instance
      parameters:
      - in: path
        description: ID of an asynchronous request.
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Status of an asynchronous request.
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
  /internal/aws/security_group:
    get:
      summary: Get a list of security group IDs queried by VPC ID
      operationId: querySecurityGroup
      tags:
      - /internal/aws
      x-group: cloud_instance
      parameters:
      - in: query
        description: data location ID
        name: data_location_id
        required: true
        type: string
      - in: query
        description: VPC ID
        name: vpc_id
        required: true
        type: string
      responses:
        '200':
          description: Returns a list of security group IDs recognizable by AWS
          schema:
            type: array
            items:
              $ref: '#/definitions/SecurityGroup'
  /internal/aws/subnet:
    get:
      summary: Get a list of subnets queried by location ID
      operationId: querySubnet
      tags:
      - /internal/aws
      x-group: cloud_instance
      parameters:
      - in: query
        description: data location ID
        name: data_location_id
        required: true
        type: string
      responses:
        '200':
          description: Returns a list of subnet IDs and respective vpc IDs in AWS
          schema:
            type: array
            items:
              $ref: '#/definitions/Subnet'
  /internal/blackout_window:
    get:
      summary: Get current status of global blackout window.
      description: Determine whether global blackout window is currently active.
      operationId: getBlackoutWindowStatus
      tags:
      - /internal/blackout_window
      x-group: blackout_window
      responses:
        '200':
          description: Current status of blackout window.
          schema:
            $ref: '#/definitions/GlobalBlackoutWindowStatus'
    patch:
      summary: Starts or stops the global blackout window in local Rubrik cluster.
      description: Return whether we are in blackout window or not
      operationId: toggleBlackoutWindow
      tags:
      - /internal/blackout_window
      x-group: blackout_window
      parameters:
      - in: body
        description: Whether to start or stop the global blackout window.
        name: blackout_window_status
        required: true
        schema:
          $ref: '#/definitions/GlobalBlackoutWindowStatus'
      responses:
        '200':
          description: Returned the updated blackout window status.
          schema:
            $ref: '#/definitions/GlobalBlackoutWindowStatus'
  /internal/browse:
    get:
      summary: Lists all files and directories in a given path
      description: Lists all files and directories in a given path
      operationId: browseQuery
      tags:
      - /internal/browse
      x-group: search
      parameters:
      - in: query
        description: ID of the Snapshot that is browsed
        name: snapshot_id
        required: true
        type: string
      - in: query
        description: The absolute path of the starting point for the directory listing.
        name: path
        required: true
        type: string
      - in: query
        description: Starting position in the list of path entries contained in the
          query results, sorted by lexicographical order. The response includes the
          specified numbered entry and all higher numbered entries.
        name: offset
        required: false
        type: integer
        format: int32
      - in: query
        description: Maximum number of entries in the response.
        name: limit
        required: false
        type: integer
        format: int32
      responses:
        '200':
          description: List of files and directories at the specified path.
          schema:
            $ref: '#/definitions/BrowseResponseListResponse'
  /internal/cluster/{id}/bootstrap:
    get:
      summary: Cluster bootstrap request status
      description: Retrieves status of in progress bootstrap requests
      operationId: getClusterConfigStatus
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      - in: query
        description: Id of the bootstrap request
        name: request_id
        required: true
        type: integer
        format: int64
      responses:
        '200':
          description: Status of the bootstrap request
          schema:
            $ref: '#/definitions/ClusterConfigStatus'
      x-unauthenticated: true
    post:
      summary: Bootstrap the cluster
      description: Issues a bootstrap request to a specified Rubrik cluster
      operationId: bootstrapCluster
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      - in: body
        description: Configuration for the Rubrik cluster
        name: cluster_config
        required: true
        schema:
          $ref: '#/definitions/ClusterConfig'
      responses:
        '202':
          description: Request handle to check bootstrap status
          schema:
            $ref: '#/definitions/NodeOperation'
      x-unauthenticated: true
  /internal/cluster/{id}/brik_count:
    get:
      summary: Get cluster brik count
      description: Retrieve the number of briks in this Rubrik cluster
      operationId: getClusterBrikCount
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      responses:
        '200':
          description: Brik count
          schema:
            $ref: '#/definitions/CountResponse'
  /internal/cluster/{id}/decommission_node:
    get:
      summary: Get decommission request status
      description: Retrieves the status of the decommission node request
      operationId: decommissionNodeStatus
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      - in: query
        description: Decommission request id
        name: request_id
        required: true
        type: integer
        format: int64
      responses:
        '200':
          description: Decommission node request status
          schema:
            $ref: '#/definitions/DecommissionNodeStatus'
    post:
      summary: Decommission a node
      description: Schedule a node for decommission
      operationId: decommissionNode
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      - in: body
        description: Decommission node configuration.
        name: decommission_node_config
        required: true
        schema:
          $ref: '#/definitions/DecommissionNodeConfig'
      responses:
        '202':
          description: Request handle to check decommission status
          schema:
            $ref: '#/definitions/NodeOperation'
  /internal/cluster/{id}/discover:
    get:
      summary: Discover bootstrappable nodes
      description: Searches for nodes bootstrappable to the specified Rubrik cluster
      operationId: discover
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      responses:
        '200':
          description: List of nodes available to bootstrap into the specified cluster
          schema:
            type: array
            items:
              description: listResponse
              type: string
      x-unauthenticated: true
  /internal/cluster/{id}/disk:
    get:
      summary: Get disks
      description: Retrieves information about the disks in the Rubrik cluster
      operationId: getDisks
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      responses:
        '200':
          description: List of disks in this Rubrik cluster
          schema:
            type: array
            items:
              description: listResponse
              $ref: '#/definitions/DiskInfo'
  /internal/cluster/{id}/disk/{disk_id}:
    patch:
      summary: Set up an unformatted disk
      description: Formats, initializes and mounts an unformatted disk
      operationId: setupDisk
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      - in: path
        description: ID of an unformatted disk to set up
        name: disk_id
        required: true
        type: string
      responses:
        '200':
          description: Information about the formatted disk
          schema:
            $ref: '#/definitions/DiskInfo'
    delete:
      summary: Instruct the cluster that a disk has been removed
      description: Marks the disk removed and updates cluster metadata
      operationId: removeDisk
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      - in: path
        description: ID of a missing disk to mark removed
        name: disk_id
        required: true
        type: string
      responses:
        '204':
          description: Successfully removed the disk from the cluster
  /internal/cluster/{id}/disk_capacity:
    get:
      summary: Get installed disk capacity
      description: Retrieves total installed disk space on the Rubrik cluster
      operationId: getDiskCapacity
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      responses:
        '200':
          description: Disk capacity of the Rubrik cluster
          schema:
            $ref: '#/definitions/DiskCapacity'
  /internal/cluster/{id}/dns_nameserver:
    get:
      summary: Get DNS servers
      description: Retrieve a list the DNS servers assigned to the Rubrik cluster
      operationId: getClusterDnsNameservers
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      responses:
        '200':
          description: List of the DNS servers assigned to the specified Rubrik cluster
          schema:
            type: array
            items:
              description: listResponse
              type: string
    post:
      summary: Assign DNS servers
      description: Assign DNS servers to the Rubrik cluster
      operationId: setClusterDnsNameservers
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      - name: servers
        in: body
        description: List of the IPv4 addresses of NTP servers
        required: true
        schema:
          type: array
          items:
            type: string
      responses:
        '204':
          description: Successfully assigned the specified DNS servers to the Rubrik
            cluster
  /internal/cluster/{id}/dns_search_domain:
    get:
      summary: Get DNS search domains
      description: Retrieve a list the DNS search domains assigned to the Rubrik cluster
      operationId: getClusterDnsSearchDomains
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      responses:
        '200':
          description: List of the DNS search domains assigned to the specified Rubrik
            cluster
          schema:
            type: array
            items:
              description: listResponse
              type: string
    post:
      summary: Assign DNS search domains
      description: Assign DNS search domains to the Rubrik cluster
      operationId: setClusterDnsSearchDomains
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      - name: domains
        in: body
        description: List of the DNS search domains
        required: true
        schema:
          type: array
          items:
            type: string
      responses:
        '204':
          description: Successfully assigned the specified DNS search domains to the
            Rubrik cluster
  /internal/cluster/{id}/flash_capacity:
    get:
      summary: Get installed flash capacity
      description: 'Retrieves total installed flash on the Rubrik cluste '
      operationId: getFlashCapacity
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      responses:
        '200':
          description: Flash capacity for the Rubrik cluster
          schema:
            $ref: '#/definitions/DiskCapacity'
  /internal/cluster/{id}/floating_ip:
    get:
      summary: Get a list of a cluster's floating IP to node mapping
      description: Get a list of a cluster's floating IP to node mapping
      operationId: queryFloatingIp
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      - name: floating_ip
        in: query
        description: 'Filter the result based on the floating_ip configured on the
          rubrik cluster.

          The query returns the node that owns this cluster IP address'
        required: false
        type: string
      responses:
        '200':
          description: cluster IP to nodeId dictionary
          schema:
            $ref: '#/definitions/FloatingIpListResponse'
  /internal/cluster/{id}/has_tpm:
    get:
      summary: Get if it has TPM
      description: Check whether this Rubrik cluster has TPM
      operationId: hasTpm
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      responses:
        '200':
          description: True when the Rubrik cluster has TPM
          schema:
            $ref: '#/definitions/BooleanResponse'
      x-unauthenticated: true
  /internal/cluster/{id}/io_stats:
    get:
      summary: Get IO throughput information
      description: Retrieves IO statistics of the Rubrik cluster
      operationId: getClusterIo
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      - in: query
        description: 'Optional time range parameter for the timeseries, eg: -1h, -1min,
          etc. Default value is -6h'
        name: range
        required: false
        type: string
      responses:
        '200':
          description: IO statistics for the cluster
          schema:
            $ref: '#/definitions/IoStat'
  /internal/cluster/{id}/ipmi:
    get:
      summary: Get IPMI details
      description: get IPMI details of availability and enabled access in the cluster
      operationId: getIpmi
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      responses:
        '200':
          description: details of IPMI settings
          schema:
            $ref: '#/definitions/IpmiDetails'
    patch:
      summary: Modify IPMI settings
      description: modify IPMI settings
      operationId: modifyIpmi
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      - in: body
        description: password to set
        name: update_properties
        required: true
        schema:
          $ref: '#/definitions/IpmiUpdate'
      responses:
        '200':
          description: Successfully set the IPMI password for the cluster
          schema:
            $ref: '#/definitions/IpmiDetails'
  /internal/cluster/{id}/is_encrypted:
    get:
      summary: Get if it is encrypted
      description: Check whether this Rubrik cluster is encrypted (the encryption
        could be either be software-based encryption or hardware-based encryption).
      operationId: isEncrypted
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      responses:
        '200':
          description: True when the Rubrik cluster is encrypted
          schema:
            $ref: '#/definitions/BooleanResponse'
      x-unauthenticated: true
  /internal/cluster/{id}/is_hardware_encrypted:
    get:
      summary: Get if it is hardware encrypted
      description: Check whether this Rubrik cluster is hardware encrypted
      operationId: isHardwareEncrypted
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      responses:
        '200':
          description: True when the Rubrik cluster is hardware encrypted
          schema:
            $ref: '#/definitions/BooleanResponse'
      x-unauthenticated: true
  /internal/cluster/{id}/is_on_cloud:
    get:
      summary: Get is on-cloud
      description: Check whether this Rubrik cluster is running on cloud
      operationId: isOnCloud
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      responses:
        '200':
          description: True when the Rubrik cluster is running on cloud
          schema:
            $ref: '#/definitions/BooleanResponse'
      x-unauthenticated: true
  /internal/cluster/{id}/is_registered:
    get:
      summary: Get registration status for a Rubrik cluster.
      description: Check whether the specified Rubrik cluster is registered in the
        Rubrik customer database.
      operationId: isRegisteredWithRubrik
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of a Rubrik cluster, or use *me* for the Rubrik cluster that
          is hosting the current session.
        name: id
        required: true
        default: me
        type: string
      responses:
        '200':
          description: Returns 'True' when the specified Rubrik cluster is registered.
          schema:
            $ref: '#/definitions/BooleanResponse'
      x-unauthenticated: true
  /internal/cluster/{id}/is_single_node:
    get:
      summary: Get is single node
      description: Check whether this Rubrik cluster is configured to be single node
      operationId: isSingleNode
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      responses:
        '200':
          description: True when the Rubrik cluster has a single node
          schema:
            $ref: '#/definitions/BooleanResponse'
      x-unauthenticated: true
  /internal/cluster/{id}/iscsi:
    post:
      summary: Add iscsi targets
      description: Add iscsi targets from the specificied portal to the Rubrik cluster
      operationId: addIscsi
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      - in: body
        description: Iscsi target portal information
        name: iscsi_portal_info
        required: true
        schema:
          $ref: '#/definitions/IscsiAddParams'
      responses:
        '204':
          description: Successfully added to the specified cluster
  /internal/cluster/{id}/memory_capacity:
    get:
      summary: Get installed memory capacity
      description: Retrieve total installed memory on the Rubrik cluster
      operationId: getMemoryCapacity
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      responses:
        '200':
          description: Memory capacity of the Rubrik cluster
          schema:
            $ref: '#/definitions/Capacity'
  /internal/cluster/{id}/name:
    get:
      summary: Get cluster name
      description: Retrieves the name of the Rubrik cluster identified by the id
      operationId: getClusterName
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      responses:
        '200':
          description: Name of the cluster
          schema:
            type: string
  /internal/cluster/{id}/node:
    get:
      summary: Get nodes
      description: Retrieve the list of nodes in this Rubrik cluster
      operationId: getClusterNodes
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      responses:
        '200':
          description: List of node statuses
          schema:
            type: array
            items:
              description: listResponse
              $ref: '#/definitions/NodeStatus'
    post:
      summary: Add nodes
      description: Add nodes to the specified Rubrik cluster
      operationId: addNewNodes
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      - in: body
        description: Mapping of Node name to IP configurations for the node
        name: nodes
        required: true
        schema:
          $ref: '#/definitions/Map_NodeConfig'
      responses:
        '202':
          description: Request Id handle to check pending add node requests
          schema:
            $ref: '#/definitions/NodeOperation'
  /internal/cluster/{id}/ntp_server:
    get:
      summary: Get NTP Servers
      description: Retrieve a list if the NTP servers assigned to the Rubrik cluster
      operationId: getClusterNtpServers
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      responses:
        '200':
          description: List of the NTP servers assigned to the specified Rubrik cluste
          schema:
            type: array
            items:
              description: listResponse
              type: string
    post:
      summary: Assign NTP servers to Rubrik cluster
      description: Assign NTP servers to Rubrik cluster
      operationId: setClusterNtpServers
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self.
        name: id
        required: true
        default: me
        type: string
      - name: servers
        in: body
        description: List of fully qualifed domain names or IPv4 addresses of NTP
          servers
        required: true
        schema:
          type: array
          items:
            type: string
      responses:
        '204':
          description: Successfully assigned the specified NTP servers to the Rubrik
            cluster
  /internal/cluster/{id}/pending_node:
    get:
      summary: Get Add node request status
      description: Retrieves status of a pending add node request on the specified
        cluster
      operationId: getAddNodeStatus
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      - in: query
        description: Request id of the add node request
        name: request_id
        required: true
        type: integer
        format: int64
      responses:
        '200':
          description: Status of the pending add node request
          schema:
            $ref: '#/definitions/AddNodesStatus'
  /internal/cluster/{id}/recommission_node:
    get:
      summary: Get commission request status
      description: Retrieves the status of the decommission node request
      operationId: commissionRequestStatus
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      - in: query
        description: Recommission request id
        name: request_id
        required: true
        type: integer
        format: int64
      responses:
        '200':
          description: Recommission node request status
          schema:
            $ref: '#/definitions/RecommissionNodeStatus'
    post:
      summary: Recommission a node
      description: Schedule a node for recommission
      operationId: commissionNode
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      - in: body
        description: Id of the node to recommission
        name: node_id
        required: true
        schema:
          type: string
      responses:
        '202':
          description: Request handle to check recommission status
          schema:
            $ref: '#/definitions/NodeOperation'
  /internal/cluster/{id}/register:
    post:
      summary: Submit community user credentials to register a cluster
      description: Submit community user credentials to register a cluster.
      operationId: registerWithRubrik
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of a Rubrik cluster, or use *me* for the Rubrik cluster that
          is hosting the current session.
        name: id
        required: true
        default: me
        type: string
      - in: body
        description: Community User Credentials
        name: community_user_credentials
        required: true
        schema:
          $ref: '#/definitions/CommunityUserCredentials'
      responses:
        '204':
          description: Successfully registered with Rubrik.
  /internal/cluster/{id}/registration_details:
    post:
      summary: Submit the registration details for a Rubrik cluster.
      description: Submit the registration details for the specified Rubrik cluster.
      operationId: processRegistrationDetails
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of a Rubrik cluster, or use *me* for the Rubrik cluster that
          is hosting the current session.
        name: id
        required: true
        default: me
        type: string
      - in: body
        description: Registration details assigned to a Rubrik cluster
        name: registration_details
        required: true
        schema:
          $ref: '#/definitions/RegistrationDetails'
      responses:
        '204':
          description: Successfully applied the given registration details
  /internal/cluster/{id}/remove_node:
    get:
      summary: Get node removal status
      description: Retrieves the status of the remove node request
      operationId: removeNodeStatus
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      - in: query
        description: Remove node request id
        name: request_id
        required: true
        type: integer
        format: int64
      responses:
        '200':
          description: Remove node request status
          schema:
            $ref: '#/definitions/RemoveNodeStatus'
    post:
      summary: Removes a node from
      description: Schedules a node for removal
      operationId: removeNode
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      - in: body
        description: Id of the node to remove
        name: node_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Request handle to check remove node status
          schema:
            $ref: '#/definitions/NodeOperation'
  /internal/cluster/{id}/reset:
    post:
      summary: Resets nodes in this Rubrik cluster
      description: Resets nodes in this Rubrik cluster to manufactured state
      operationId: resetAllNodes
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self.
        name: id
        required: true
        default: me
        type: string
      responses:
        '204':
          description: Successfully started reseting the nodes
  /internal/cluster/{id}/security/key_rotation:
    post:
      summary: Rotate keys in encrypted cluster.
      description: Trigger a key rotation for all nodes in the cluster. A reboot may
        be required depending on the rotation specification.
      operationId: rotateKeys
      tags:
      - /internal/cluster
      x-group: security
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self.
        name: id
        required: true
        default: me
        type: string
      - in: body
        description: Key rotation options
        name: key_rotation_options
        required: true
        schema:
          $ref: '#/definitions/KeyRotationOptions'
      responses:
        '202':
          description: Succesfully scheduled key rotation.
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
    get:
      summary: Get details of key rotations.
      description: Return detailed information for a key rotation identified by **rotation_id**,
        or for all key rotations if **rotation_id** is not specified.
      operationId: queryKeyRotation
      tags:
      - /internal/cluster
      x-group: security
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self.
        name: id
        required: true
        default: me
        type: string
      - in: query
        description: ID of the key rotation or *latest* for the most recent key rotation.
        name: rotation_id
        type: string
      responses:
        '200':
          description: Detailed information for the specified key rotation, or for
            all key rotations if **rotation_id** is not specified. One list entry
            is returned for each node.
          schema:
            $ref: '#/definitions/KeyRotationDetailListResponse'
  /internal/cluster/{id}/security/kmip/client_csr:
    post:
      summary: Generate a new private key and return a certificate signing request.
      description: Generates a new private key and return base64 encoded PKCS#10 certificate
        signing request. If there is a pending CSR, this will invalidate it and create
        a new one.
      operationId: getKmipClientCsr
      tags:
      - /internal/cluster
      x-group: security
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self.
        name: id
        required: true
        default: me
        type: string
      - in: body
        description: Information for client certificate request
        name: csr_request
        required: true
        schema:
          $ref: '#/definitions/KmipCsrRequest'
      responses:
        '200':
          description: Certificate signing request.
          schema:
            $ref: '#/definitions/Pkcs10CertificateSigningRequest'
  /internal/cluster/{id}/security/kmip/configuration:
    put:
      summary: Configure KMIP server to use.
      description: Configure each node with the specified KMIP configuration.
      operationId: setKmipConfiguration
      tags:
      - /internal/cluster
      x-group: security
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self.
        name: id
        required: true
        default: me
        type: string
      - in: body
        description: KMIP configuration
        name: config
        required: true
        schema:
          $ref: '#/definitions/KmipConfiguration'
      responses:
        '202':
          description: Status of the request for setting configuration
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
    get:
      summary: Get KMIP configuration.
      description: Return the currently configured KMIP information. If KMIP is not
        configured, the return object would contain empty fields.
      operationId: getKmipConfiguration
      tags:
      - /internal/cluster
      x-group: security
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self.
        name: id
        required: true
        default: me
        type: string
      responses:
        '200':
          description: Current KMIP configuration detail
          schema:
            $ref: '#/definitions/KmipConfigurationDetail'
  /internal/cluster/{id}/security/request/{request_id}:
    get:
      summary: Get details about an async request.
      description: Get details about a security-related async request.
      operationId: getAsyncRequestStatus
      tags:
      - /internal/cluster
      x-group: security
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self.
        name: id
        required: true
        default: me
        type: string
      - in: path
        description: ID of the request
        name: request_id
        required: true
        type: string
      responses:
        '200':
          description: Status for the async request.
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
  /internal/cluster/{id}/security/web_csr:
    post:
      summary: Generate a new private key and return a certificate signing request.
      description: Generates a new private key and return base64 encoded PKCS#10 certificate
        signing request. If there is a pending CSR, this will invalidate it and create
        a new one.
      operationId: getWebCsr
      tags:
      - /internal/cluster
      x-group: security
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self.
        name: id
        required: true
        default: me
        type: string
      - in: body
        description: Information for client certificate request
        name: csr_request
        required: true
        schema:
          $ref: '#/definitions/WebCsrRequest'
      responses:
        '200':
          description: Certificate signing request.
          schema:
            $ref: '#/definitions/Pkcs10CertificateSigningRequest'
  /internal/cluster/{id}/security/web_signed_cert:
    put:
      summary: Set a signed certificate for Web server.
      description: Setting the given certificate for each node's web server to use.
      operationId: setWebSignedCertificate
      tags:
      - /internal/cluster
      x-group: security
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self.
        name: id
        required: true
        default: me
        type: string
      - in: body
        description: X.509 certificate
        name: certificate
        required: true
        schema:
          $ref: '#/definitions/X509Certificate'
      responses:
        '202':
          description: Status of the request for setting certificate
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
  /internal/cluster/{id}/timezone:
    get:
      summary: Get existing cluster timezone settings
      description: Get existing cluster timezone settings. An empty timezone means
        that the timezone for this cluster is not set yet and we use UTC as the deafult
        timezone in that case.
      operationId: getClusterTimezone
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      responses:
        '200':
          description: Returns existing cluster timezone settings
          schema:
            $ref: '#/definitions/ClusterTimezone'
    patch:
      summary: Update cluster timezone settings
      description: Update cluster timezone settings.
      operationId: updateClusterTimezone
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      - in: body
        description: Cluster timezone settings
        name: cluster_timezone
        required: true
        schema:
          $ref: '#/definitions/ClusterTimezone'
      responses:
        '200':
          description: Returns updated cluster timezone settings if successfully updated
          schema:
            $ref: '#/definitions/ClusterTimezone'
  /internal/cluster/{id}/vlan:
    post:
      summary: Adds a VLAN interface on the cluster or re-ips a VLAN
      description: Edits tagged interfaces on the cluster by VLAN.
      operationId: configureVlan
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      - in: body
        description: VLAN Configuration
        name: vlan_info
        required: true
        schema:
          $ref: '#/definitions/VlanConfig'
      responses:
        '204':
          description: Successfully added VLANs to the cluster
        '409':
          description: Returned if ips conflict
          schema:
            $ref: '#/definitions/RequestFailedException'
    delete:
      summary: Drops a VLAN from the cluster
      description: Drops interfaces assigend to the specified VLAN on the cluster.
      operationId: deleteVlan
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      - in: query
        description: VLAN
        name: vlan_id
        required: true
        type: integer
        format: int32
      responses:
        '204':
          description: Successfully drops VLAN interface
        '409':
          description: Returned if ips conflict
          schema:
            $ref: '#/definitions/RequestFailedException'
    get:
      summary: Get configured VLAN interfaces for a Rubrik Cluster cluster
      description: Retrieves the VLANs configured on a Rubrik Cluster and their ip
        configurations
      operationId: getVlan
      tags:
      - /internal/cluster
      x-group: cluster
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        default: me
        type: string
      - in: query
        description: Will retrieve info for a specific VLAN if passed in
        name: vlan
        required: false
        type: integer
        format: int32
      responses:
        '200':
          description: VLAN configurations for the Rubrik cluster
          schema:
            type: array
            items:
              description: listResponse
              $ref: '#/definitions/VlanConfig'
  /internal/config/atlas:
    get:
      description: REQUIRES SUPPORT TOKEN - Get the global Atlas configuration. A
        support token is required for this operation.
      operationId: getAtlasConfig
      parameters: []
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/GlobalAtlasConfig'
      summary: REQUIRES SUPPORT TOKEN -  Get the global Atlas configuration
      tags:
      - /internal/config
      x-group: internal_config
    patch:
      description: REQUIRES SUPPORT TOKEN - Update the global Atlas configuration.
        A support token is required for this operation.
      operationId: updateAtlasConfig
      parameters:
      - description: New configuration values
        in: body
        name: new_values
        required: true
        schema:
          $ref: '#/definitions/GlobalAtlasConfig'
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/GlobalAtlasConfig'
      summary: REQUIRES SUPPORT TOKEN - Update the global Atlas configuration. A support
        token is required for this operation.
      tags:
      - /internal/config
      x-group: internal_config
  /internal/config/blobstore:
    get:
      description: REQUIRES SUPPORT TOKEN - Get the global Blobstore configuration.
        A support token is required for this operation.
      operationId: getBlobstoreConfig
      parameters: []
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/GlobalBlobstoreConfig'
      summary: REQUIRES SUPPORT TOKEN -  Get the global Blobstore configuration
      tags:
      - /internal/config
      x-group: internal_config
    patch:
      description: REQUIRES SUPPORT TOKEN - Update the global Blobstore configuration.
        A support token is required for this operation.
      operationId: updateBlobstoreConfig
      parameters:
      - description: New configuration values
        in: body
        name: new_values
        required: true
        schema:
          $ref: '#/definitions/GlobalBlobstoreConfig'
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/GlobalBlobstoreConfig'
      summary: REQUIRES SUPPORT TOKEN - Update the global Blobstore configuration.
        A support token is required for this operation.
      tags:
      - /internal/config
      x-group: internal_config
  /internal/config/cerebro:
    get:
      description: REQUIRES SUPPORT TOKEN - Get the global Cerebro configuration.
        A support token is required for this operation.
      operationId: getCerebroConfig
      parameters: []
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/GlobalCerebroConfig'
      summary: REQUIRES SUPPORT TOKEN -  Get the global Cerebro configuration
      tags:
      - /internal/config
      x-group: internal_config
    patch:
      description: REQUIRES SUPPORT TOKEN - Update the global Cerebro configuration.
        A support token is required for this operation.
      operationId: updateCerebroConfig
      parameters:
      - description: New configuration values
        in: body
        name: new_values
        required: true
        schema:
          $ref: '#/definitions/GlobalCerebroConfig'
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/GlobalCerebroConfig'
      summary: REQUIRES SUPPORT TOKEN - Update the global Cerebro configuration. A
        support token is required for this operation.
      tags:
      - /internal/config
      x-group: internal_config
  /internal/config/crystal:
    get:
      description: REQUIRES SUPPORT TOKEN - Get the global Crystal configuration.
        A support token is required for this operation.
      operationId: getCrystalConfig
      parameters: []
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/GlobalCrystalConfig'
      summary: REQUIRES SUPPORT TOKEN -  Get the global Crystal configuration
      tags:
      - /internal/config
      x-group: internal_config
    patch:
      description: REQUIRES SUPPORT TOKEN - Update the global Crystal configuration.
        A support token is required for this operation.
      operationId: updateCrystalConfig
      parameters:
      - description: New configuration values
        in: body
        name: new_values
        required: true
        schema:
          $ref: '#/definitions/GlobalCrystalConfig'
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/GlobalCrystalConfig'
      summary: REQUIRES SUPPORT TOKEN - Update the global Crystal configuration. A
        support token is required for this operation.
      tags:
      - /internal/config
      x-group: internal_config
  /internal/config/fileset:
    get:
      description: REQUIRES SUPPORT TOKEN - Get the global Fileset configuration.
        A support token is required for this operation.
      operationId: getFilesetConfig
      parameters: []
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/GlobalFilesetConfig'
      summary: REQUIRES SUPPORT TOKEN -  Get the global Fileset configuration
      tags:
      - /internal/config
      x-group: internal_config
    patch:
      description: REQUIRES SUPPORT TOKEN - Update the global Fileset configuration.
        A support token is required for this operation.
      operationId: updateFilesetConfig
      parameters:
      - description: New configuration values
        in: body
        name: new_values
        required: true
        schema:
          $ref: '#/definitions/GlobalFilesetConfig'
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/GlobalFilesetConfig'
      summary: REQUIRES SUPPORT TOKEN - Update the global Fileset configuration. A
        support token is required for this operation.
      tags:
      - /internal/config
      x-group: internal_config
  /internal/config/forge:
    get:
      description: REQUIRES SUPPORT TOKEN - Get the global Forge configuration. A
        support token is required for this operation.
      operationId: getForgeConfig
      parameters: []
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/GlobalForgeConfig'
      summary: REQUIRES SUPPORT TOKEN -  Get the global Forge configuration
      tags:
      - /internal/config
      x-group: internal_config
    patch:
      description: REQUIRES SUPPORT TOKEN - Update the global Forge configuration.
        A support token is required for this operation.
      operationId: updateForgeConfig
      parameters:
      - description: New configuration values
        in: body
        name: new_values
        required: true
        schema:
          $ref: '#/definitions/GlobalForgeConfig'
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/GlobalForgeConfig'
      summary: REQUIRES SUPPORT TOKEN - Update the global Forge configuration. A support
        token is required for this operation.
      tags:
      - /internal/config
      x-group: internal_config
  /internal/config/infinity:
    get:
      description: REQUIRES SUPPORT TOKEN - Get the global Infinity configuration.
        A support token is required for this operation.
      operationId: getInfinityConfig
      parameters: []
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/GlobalInfinityConfig'
      summary: REQUIRES SUPPORT TOKEN -  Get the global Infinity configuration
      tags:
      - /internal/config
      x-group: internal_config
    patch:
      description: REQUIRES SUPPORT TOKEN - Update the global Infinity configuration.
        A support token is required for this operation.
      operationId: updateInfinityConfig
      parameters:
      - description: New configuration values
        in: body
        name: new_values
        required: true
        schema:
          $ref: '#/definitions/GlobalInfinityConfig'
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/GlobalInfinityConfig'
      summary: REQUIRES SUPPORT TOKEN - Update the global Infinity configuration.
        A support token is required for this operation.
      tags:
      - /internal/config
      x-group: internal_config
  /internal/config/jarvis:
    get:
      description: REQUIRES SUPPORT TOKEN - Get the global Jarvis configuration. A
        support token is required for this operation.
      operationId: getJarvisConfig
      parameters: []
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/GlobalJarvisConfig'
      summary: REQUIRES SUPPORT TOKEN -  Get the global Jarvis configuration
      tags:
      - /internal/config
      x-group: internal_config
    patch:
      description: REQUIRES SUPPORT TOKEN - Update the global Jarvis configuration.
        A support token is required for this operation.
      operationId: updateJarvisConfig
      parameters:
      - description: New configuration values
        in: body
        name: new_values
        required: true
        schema:
          $ref: '#/definitions/GlobalJarvisConfig'
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/GlobalJarvisConfig'
      summary: REQUIRES SUPPORT TOKEN - Update the global Jarvis configuration. A
        support token is required for this operation.
      tags:
      - /internal/config
      x-group: internal_config
  /internal/config/local_blobstore:
    get:
      description: REQUIRES SUPPORT TOKEN - Get the local Blobstore configuration.
        A support token is required for this operation.
      operationId: getLocalBlobstoreConfig
      parameters: []
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/LocalBlobstoreConfig'
      summary: REQUIRES SUPPORT TOKEN -  Get the local Blobstore configuration
      tags:
      - /internal/config
      x-group: internal_config
    patch:
      description: REQUIRES SUPPORT TOKEN - Update the local Blobstore configuration.
        A support token is required for this operation.
      operationId: updateLocalBlobstoreConfig
      parameters:
      - description: New configuration values
        in: body
        name: new_values
        required: true
        schema:
          $ref: '#/definitions/LocalBlobstoreConfig'
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/LocalBlobstoreConfig'
      summary: REQUIRES SUPPORT TOKEN - Update the local Blobstore configuration.
        A support token is required for this operation.
      tags:
      - /internal/config
      x-group: internal_config
  /internal/config/local_cerebro:
    get:
      description: REQUIRES SUPPORT TOKEN - Get the local Cerebro configuration. A
        support token is required for this operation.
      operationId: getLocalCerebroConfig
      parameters: []
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/LocalCerebroConfig'
      summary: REQUIRES SUPPORT TOKEN -  Get the local Cerebro configuration
      tags:
      - /internal/config
      x-group: internal_config
    patch:
      description: REQUIRES SUPPORT TOKEN - Update the local Cerebro configuration.
        A support token is required for this operation.
      operationId: updateLocalCerebroConfig
      parameters:
      - description: New configuration values
        in: body
        name: new_values
        required: true
        schema:
          $ref: '#/definitions/LocalCerebroConfig'
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/LocalCerebroConfig'
      summary: REQUIRES SUPPORT TOKEN - Update the local Cerebro configuration. A
        support token is required for this operation.
      tags:
      - /internal/config
      x-group: internal_config
  /internal/config/local_infinity:
    get:
      description: REQUIRES SUPPORT TOKEN - Get the local Infinity configuration.
        A support token is required for this operation.
      operationId: getLocalInfinityConfig
      parameters: []
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/LocalInfinityConfig'
      summary: REQUIRES SUPPORT TOKEN -  Get the local Infinity configuration
      tags:
      - /internal/config
      x-group: internal_config
    patch:
      description: REQUIRES SUPPORT TOKEN - Update the local Infinity configuration.
        A support token is required for this operation.
      operationId: updateLocalInfinityConfig
      parameters:
      - description: New configuration values
        in: body
        name: new_values
        required: true
        schema:
          $ref: '#/definitions/LocalInfinityConfig'
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/LocalInfinityConfig'
      summary: REQUIRES SUPPORT TOKEN - Update the local Infinity configuration. A
        support token is required for this operation.
      tags:
      - /internal/config
      x-group: internal_config
  /internal/config/local_mssql:
    get:
      description: REQUIRES SUPPORT TOKEN - Get the local Mssql configuration. A support
        token is required for this operation.
      operationId: getLocalMssqlConfig
      parameters: []
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/LocalMssqlConfig'
      summary: REQUIRES SUPPORT TOKEN -  Get the local Mssql configuration
      tags:
      - /internal/config
      x-group: internal_config
    patch:
      description: REQUIRES SUPPORT TOKEN - Update the local Mssql configuration.
        A support token is required for this operation.
      operationId: updateLocalMssqlConfig
      parameters:
      - description: New configuration values
        in: body
        name: new_values
        required: true
        schema:
          $ref: '#/definitions/LocalMssqlConfig'
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/LocalMssqlConfig'
      summary: REQUIRES SUPPORT TOKEN - Update the local Mssql configuration. A support
        token is required for this operation.
      tags:
      - /internal/config
      x-group: internal_config
  /internal/config/local_shield:
    get:
      description: REQUIRES SUPPORT TOKEN - Get the local Shield configuration. A
        support token is required for this operation.
      operationId: getLocalShieldConfig
      parameters: []
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/LocalShieldConfig'
      summary: REQUIRES SUPPORT TOKEN -  Get the local Shield configuration
      tags:
      - /internal/config
      x-group: internal_config
    patch:
      description: REQUIRES SUPPORT TOKEN - Update the local Shield configuration.
        A support token is required for this operation.
      operationId: updateLocalShieldConfig
      parameters:
      - description: New configuration values
        in: body
        name: new_values
        required: true
        schema:
          $ref: '#/definitions/LocalShieldConfig'
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/LocalShieldConfig'
      summary: REQUIRES SUPPORT TOKEN - Update the local Shield configuration. A support
        token is required for this operation.
      tags:
      - /internal/config
      x-group: internal_config
  /internal/config/local_thor:
    get:
      description: REQUIRES SUPPORT TOKEN - Get the local Thor configuration. A support
        token is required for this operation.
      operationId: getLocalThorConfig
      parameters: []
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/LocalThorConfig'
      summary: REQUIRES SUPPORT TOKEN -  Get the local Thor configuration
      tags:
      - /internal/config
      x-group: internal_config
    patch:
      description: REQUIRES SUPPORT TOKEN - Update the local Thor configuration. A
        support token is required for this operation.
      operationId: updateLocalThorConfig
      parameters:
      - description: New configuration values
        in: body
        name: new_values
        required: true
        schema:
          $ref: '#/definitions/LocalThorConfig'
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/LocalThorConfig'
      summary: REQUIRES SUPPORT TOKEN - Update the local Thor configuration. A support
        token is required for this operation.
      tags:
      - /internal/config
      x-group: internal_config
  /internal/config/managedVolume:
    get:
      description: REQUIRES SUPPORT TOKEN - Get the global Managedvolume configuration.
        A support token is required for this operation.
      operationId: getManagedVolumeConfig
      parameters: []
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/GlobalManagedVolumeConfig'
      summary: REQUIRES SUPPORT TOKEN -  Get the global Managedvolume configuration
      tags:
      - /internal/config
      x-group: internal_config
    patch:
      description: REQUIRES SUPPORT TOKEN - Update the global Managedvolume configuration.
        A support token is required for this operation.
      operationId: updateManagedVolumeConfig
      parameters:
      - description: New configuration values
        in: body
        name: new_values
        required: true
        schema:
          $ref: '#/definitions/GlobalManagedVolumeConfig'
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/GlobalManagedVolumeConfig'
      summary: REQUIRES SUPPORT TOKEN - Update the global Managedvolume configuration.
        A support token is required for this operation.
      tags:
      - /internal/config
      x-group: internal_config
  /internal/config/mssql:
    get:
      description: REQUIRES SUPPORT TOKEN - Get the global Mssql configuration. A
        support token is required for this operation.
      operationId: getMssqlConfig
      parameters: []
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/GlobalMssqlConfig'
      summary: REQUIRES SUPPORT TOKEN -  Get the global Mssql configuration
      tags:
      - /internal/config
      x-group: internal_config
    patch:
      description: REQUIRES SUPPORT TOKEN - Update the global Mssql configuration.
        A support token is required for this operation.
      operationId: updateMssqlConfig
      parameters:
      - description: New configuration values
        in: body
        name: new_values
        required: true
        schema:
          $ref: '#/definitions/GlobalMssqlConfig'
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/GlobalMssqlConfig'
      summary: REQUIRES SUPPORT TOKEN - Update the global Mssql configuration. A support
        token is required for this operation.
      tags:
      - /internal/config
      x-group: internal_config
  /internal/config/shield:
    get:
      description: REQUIRES SUPPORT TOKEN - Get the global Shield configuration. A
        support token is required for this operation.
      operationId: getShieldConfig
      parameters: []
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/GlobalShieldConfig'
      summary: REQUIRES SUPPORT TOKEN -  Get the global Shield configuration
      tags:
      - /internal/config
      x-group: internal_config
    patch:
      description: REQUIRES SUPPORT TOKEN - Update the global Shield configuration.
        A support token is required for this operation.
      operationId: updateShieldConfig
      parameters:
      - description: New configuration values
        in: body
        name: new_values
        required: true
        schema:
          $ref: '#/definitions/GlobalShieldConfig'
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/GlobalShieldConfig'
      summary: REQUIRES SUPPORT TOKEN - Update the global Shield configuration. A
        support token is required for this operation.
      tags:
      - /internal/config
      x-group: internal_config
  /internal/config/snapshot:
    get:
      description: REQUIRES SUPPORT TOKEN - Get the global Snapshot configuration.
        A support token is required for this operation.
      operationId: getSnapshotConfig
      parameters: []
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/GlobalSnapshotConfig'
      summary: REQUIRES SUPPORT TOKEN -  Get the global Snapshot configuration
      tags:
      - /internal/config
      x-group: internal_config
    patch:
      description: REQUIRES SUPPORT TOKEN - Update the global Snapshot configuration.
        A support token is required for this operation.
      operationId: updateSnapshotConfig
      parameters:
      - description: New configuration values
        in: body
        name: new_values
        required: true
        schema:
          $ref: '#/definitions/GlobalSnapshotConfig'
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/GlobalSnapshotConfig'
      summary: REQUIRES SUPPORT TOKEN - Update the global Snapshot configuration.
        A support token is required for this operation.
      tags:
      - /internal/config
      x-group: internal_config
  /internal/config/thor:
    get:
      description: REQUIRES SUPPORT TOKEN - Get the global Thor configuration. A support
        token is required for this operation.
      operationId: getThorConfig
      parameters: []
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/GlobalThorConfig'
      summary: REQUIRES SUPPORT TOKEN -  Get the global Thor configuration
      tags:
      - /internal/config
      x-group: internal_config
    patch:
      description: REQUIRES SUPPORT TOKEN - Update the global Thor configuration.
        A support token is required for this operation.
      operationId: updateThorConfig
      parameters:
      - description: New configuration values
        in: body
        name: new_values
        required: true
        schema:
          $ref: '#/definitions/GlobalThorConfig'
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/GlobalThorConfig'
      summary: REQUIRES SUPPORT TOKEN - Update the global Thor configuration. A support
        token is required for this operation.
      tags:
      - /internal/config
      x-group: internal_config
  /internal/data_location/nfs:
    delete:
      summary: REQUIRES SUPPORT TOKEN - Tries to clean up the data in the bucket in
        the NFS spec
      description: REQUIRES SUPPORT TOKEN - To be used by internal tests to clean
        the buckets. A support token is required for this operation.
      operationId: cleanNfsBucket
      tags:
      - /internal/data_location
      x-group: data_location
      parameters:
      - in: body
        description: Data Location definition
        name: definition
        required: true
        schema:
          $ref: '#/definitions/NfsLocationDefinition'
      responses:
        '204':
          description: Returned if bucket was successfully emptied.
  /internal/data_location/nfs/remove_bucket:
    post:
      summary: REQUIRES SUPPORT TOKEN - Remove all buckets matching given prefix.
      description: REQUIRES SUPPORT TOKEN - To be used by internal tests to remove
        all nfs buckets matching given prefix. Returns a list of buckets successfully
        removed. A support token is required for this operation.
      operationId: removeNfsBucket
      tags:
      - /internal/data_location
      x-group: data_location
      parameters:
      - in: body
        description: Remove bucket request configurations
        name: request
        required: true
        schema:
          $ref: '#/definitions/RemoveNfsBucketRequest'
      responses:
        '200':
          description: List of buckets removed.
          schema:
            type: array
            items:
              type: string
  /internal/data_location/object_store:
    delete:
      summary: REQUIRES SUPPORT TOKEN - Tries to clean up the data in the bucket in
        the ObjectSTore spec.
      description: REQUIRES SUPPORT TOKEN - To be used by internal tests to clean
        the buckets. A support token is required for this operation.
      operationId: cleanObjectStoreBucket
      tags:
      - /internal/data_location
      x-group: data_location
      parameters:
      - in: body
        description: Data Location definition
        name: definition
        required: true
        schema:
          $ref: '#/definitions/ObjectStoreLocationDefinition'
      responses:
        '204':
          description: Returned if bucket was successfully emptied.
  /internal/data_location/object_store/remove_bucket:
    post:
      summary: REQUIRES SUPPORT TOKEN - Remove all buckets matching given prefix.
      description: REQUIRES SUPPORT TOKEN - To be used by internal tests to remove
        all object store buckets matching given prefix. Returns a list of buckets
        successfully removed. A support token is required for this operation.
      operationId: removeObjectStoreBucket
      tags:
      - /internal/data_location
      x-group: data_location
      parameters:
      - in: body
        description: Remove bucket request configurations
        name: request
        required: true
        schema:
          $ref: '#/definitions/RemoveObjectStoreBucketRequest'
      responses:
        '200':
          description: List of buckets removed.
          schema:
            type: array
            items:
              type: string
  /internal/data_location/recover_archived_metadata:
    post:
      summary: REQUIRES SUPPORT TOKEN - DataLocationId from which to start the recovery
        process
      description: REQUIRES SUPPORT TOKEN - DataLocationId from which to start the
        recovery process. A support token is required for this operation.
      operationId: recoverArchivedMetadata
      tags:
      - /internal/data_location
      x-group: data_location
      parameters:
      - in: body
        description: ID of the data location to recover from
        name: request
        required: true
        schema:
          $ref: '#/definitions/RecoverArchivedMetadataRequest'
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/RecoverArchivedMetadataResponse'
  /internal/data_location/replication_source/delete_job:
    get:
      summary: REQUIRES SUPPORT TOKEN - Get the details of all one-off delete replication
        source jobs.
      description: REQUIRES SUPPORT TOKEN - Get the details of all one-off delete
        replication source jobs. A support token is required for this operation.
      operationId: getDeleteReplicationSourceJobs
      tags:
      - /internal/data_location
      x-group: data_location
      parameters: []
      responses:
        '200':
          description: SUCCESS
          schema:
            $ref: '#/definitions/DeleteReplicationSourceJobListResponse'
  /internal/data_location/teardown:
    post:
      summary: REQUIRES SUPPORT TOKEN -  Disconnect from a specific data location.
        Deletes the lock files, encryption files, and all the data.
      description: REQUIRES SUPPORT TOKEN - Disconnect from a specific data location.
        Deletes the lock files, encryption files and all the data. A support token
        is required for this operation.
      operationId: teardown
      tags:
      - /internal/data_location
      x-group: data_location
      parameters:
      - in: body
        description: dataLocationId
        name: request
        required: true
        schema:
          $ref: '#/definitions/DataLocationTeardownRequest'
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/DataLocationEndpointStatus'
  /internal/event:
    get:
      summary: Get information for specified events
      description: 'Retrieve information for the latest of related events that match
        the value specified in any of the following categories: type, status, or ID,
        and limit events by date.'
      operationId: queryEvents
      tags:
      - /internal/event
      x-group: events
      parameters:
      - in: query
        name: limit
        description: Maximum number of events retrieved
        required: false
        type: integer
        format: int32
        minimum: 0
      - name: after_id
        in: query
        description: Earliest event retrieved
        required: false
        type: string
      - name: event_series_id
        in: query
        description: Filter by Event Series ID (event_series_id)
        required: false
        type: string
      - name: status
        in: query
        description: "Filter by Status. Enter any of the following values: 'Failure',\
          \ 'Warning', 'Running', 'Success', 'Canceled', 'Canceling\u2019."
        required: false
        type: string
      - name: event_type
        in: query
        description: Filter by Event Type.
        enum:
        - Archive
        - Audit
        - Backup
        - Configuration
        - Diagnostic
        - NutanixCluster
        - Recovery
        - Replication
        - VCenter
        required: false
        type: string
      - name: object_ids
        in: query
        description: Filter by a comma separated list of object IDs.
        required: false
        type: array
        items:
          type: string
      - name: before_date
        in: query
        description: Filter all the events before a date.
        required: false
        type: string
        format: date-time
      - name: after_date
        in: query
        description: Filter all the events after a date.
        required: false
        type: string
        format: date-time
      - name: object_type
        in: query
        description: 'Filter all the events by object type. Enter any of the following
          values: ''VmwareVm'', ''Mssql'', ''LinuxFileset'', ''WindowsFileset'', and
          ''NutanixVm''.'
        required: false
        type: string
      responses:
        '200':
          description: Returns information for the events that match the query parameters
          schema:
            type: array
            items:
              description: listResponse
              $ref: '#/definitions/EventSummary'
  /internal/event_series/status:
    get:
      summary: Get information for several events
      description: Use the event series IDs of several events to retrieve information
        about each event, including ID, progress, cancelable, cancel pending, and
        the number of times the event has been attempted. Place each event_series_id
        on a separate line.
      operationId: bulkEventStatus
      tags:
      - /internal/event_series
      x-group: events
      parameters:
      - in: query
        description: Event series IDs (event_series_id) of the event
        name: ids
        required: true
        type: array
        items:
          type: string
      responses:
        '200':
          description: Returns information for the events specified by event_series_ids.
          schema:
            $ref: '#/definitions/EventStatusSummaryListResponse'
  /internal/event_series/{id}:
    get:
      summary: Get events associated with an event series
      description: Get events associated with an event series (a grouping of related
        events)
      operationId: queryBySeriesId
      tags:
      - /internal/event_series
      x-group: events
      parameters:
      - in: path
        description: The id of the event series
        name: id
        required: true
        type: string
      - in: query
        name: limit
        description: Limits the number of events returned.
        required: false
        type: integer
        format: int32
        minimum: 0
      - name: after_id
        in: query
        description: Fetches all events after given id.
        required: false
        type: string
      responses:
        '200':
          description: Returns the list of events by event series id
          schema:
            type: array
            items:
              description: listResponse
              $ref: '#/definitions/EventSeriesSummary'
  /internal/event_series/{id}/cancel:
    post:
      summary: Cancel an event
      description: Request cancelation of an event. To succeed, the 'isCancelable'
        parameter of the event must be 'true'.
      operationId: cancel
      tags:
      - /internal/event_series
      x-group: events
      parameters:
      - in: path
        description: The Event Series ID (event_series_id) of the event
        name: id
        required: true
        type: string
      responses:
        '204':
          description: The specified event is canceled
  /internal/event_series/{id}/status:
    get:
      summary: Get information for a specific event
      description: Use the event series ID for an event to retrieve information about
        the event, including ID, progress, cancelable, cancel pending, and the number
        of times the event has been attempted.
      operationId: eventStatus
      tags:
      - /internal/event_series
      x-group: events
      parameters:
      - in: path
        description: Event series ID (event_series_id) of the event
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Information for the event specified by event_series_id
          schema:
            description: EventStatusSummary
            $ref: '#/definitions/EventStatusSummary'
  /internal/fileset/bulk:
    post:
      summary: Create filesets for a host.
      description: Create filesets for a network host. Each fileset is a fileset template
        applied to a host
      operationId: bulkCreateFileset
      tags:
      - /internal/fileset
      x-group: fileset
      parameters:
      - in: body
        description: Specify an array of host and template ids
        name: definitions
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/FilesetCreate'
      responses:
        '201':
          description: Details of new filesets.
          schema:
            $ref: '#/definitions/FilesetDetailListResponse'
    delete:
      summary: Delete filesets.
      description: Delete filesets by specifying the fileset IDs.
      operationId: bulkDeleteFileset
      tags:
      - /internal/fileset
      x-group: fileset
      parameters:
      - in: query
        description: Provide a comma-separated list of fileset IDs.
        name: ids
        required: true
        type: array
        items:
          type: string
      - in: query
        description: Flag to indicate whether to convert snapshots of all deleted
          filesets to relics or to delete them. Applies to all filesets. Default is
          true.
        name: preserve_snapshots
        required: false
        type: boolean
      responses:
        '204':
          description: Deleted all specified filesets.
        '404':
          description: Fileset deletion failed for at least one fileset.
  /internal/fileset/snapshot/{id}/restore_files:
    post:
      summary: Create restore job to restore multiple files/directories
      description: Initiate a job to copy one or more file or folder from a fileset
        backup to the source host. Returns the job instance ID.
      operationId: createFilesetRestoreFilesJob
      tags:
      - /internal/fileset
      x-group: fileset
      parameters:
      - in: path
        description: ID of snapshot
        name: id
        required: true
        type: string
      - in: body
        description: Configuration for job to restore one or more files or folders
          from a fileset backup.
        name: config
        required: true
        schema:
          $ref: '#/definitions/FilesetRestoreFilesJobConfig'
      responses:
        '202':
          description: Status for the restore request.
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
  /internal/fileset_template/bulk:
    post:
      summary: Create fileset templates.
      description: 'Create fileset templates. The template is applied to the host.  Each
        template is a set of paths on the host.


        A template uses full paths and wildcards to define the objects to include,
        exclude, and exempt from exclusion.


        The **_exceptions_** value specifies paths that should not be excluded from
        the fileset by the **_exclude_** value.


        Specify an array of full path descriptions for each property **_include_**,
        **_exclude_**, and **_exceptions_**.


        Acceptable wildcard characters are

        + **_\*_** Single asterisk matches zero or more characters up to a path deliminator

        + **_\*\*_** Double asterisk matches zero or more characters


        The following rules apply to path descriptions

        + Accepts UTF-8 characters

        + Case sensitive

        + Forward slash character **_/_** is the path deliminator

        + Symbolic links must point to a subset of a non symbolic link path

        + Paths that do not start with **_/_** are modified to start with **_\*\*/_**

        + Paths that do not end with **_\*_** are modified to end with **_/\*\*_**'
      operationId: bulkCreateFilesetTemplate
      tags:
      - /internal/fileset
      x-group: fileset
      parameters:
      - in: body
        description: Provide an array containing a separate object for each fileset
          template definition.
        name: definitions
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/FilesetTemplateCreate'
      responses:
        '201':
          description: Summary information for the created fileset templates.
          schema:
            $ref: '#/definitions/FilesetTemplateDetailListResponse'
    patch:
      summary: Modify fileset templates.
      description: Modify the values of specified fileset templates.
      operationId: bulkUpdateFilesetTemplate
      tags:
      - /internal/fileset
      x-group: fileset
      parameters:
      - in: body
        description: Provide an array containing a separate object for each fileset
          template being modified.
        name: definitions
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/FilesetTemplatePatch'
      responses:
        '200':
          description: Detailed information for modified fileset templates.
          schema:
            $ref: '#/definitions/FilesetTemplateDetailListResponse'
    delete:
      summary: Delete fileset templates.
      description: Deletes specfied fileset templates. Detaches and retains all associated
        filesets as independent filesets with the existing values.
      operationId: bulkDeleteFilesetTemplate
      tags:
      - /internal/fileset
      x-group: fileset
      parameters:
      - in: query
        description: Provide an array with the ID of each fileset template to remove.
        name: ids
        required: true
        type: array
        items:
          type: string
      - in: query
        description: Flag to indicate whether to convert snapshots of filesets of
          the deleted templates to relics or to delete them. Applies to all templates
          being deleted. Default is true.
        name: preserve_snapshots
        required: false
        type: boolean
      responses:
        '204':
          description: Successfully removed all specified fileset templates.
        '404':
          description: Fileset template deletion failed for at least one fileset template.
  /internal/folder/hierarchy_rooted_at/{id}:
    get:
      summary: Hierarchy of folders and managed objects with this folder as root.
      description: Hierarchy of folders and managed objects with this folder as root.
      operationId: getFolderHierarchy
      tags:
      - /internal/folder
      x-group: folder
      parameters:
      - in: path
        description: ID of the folder at the root of expected hierarchy.
        name: id
        required: true
        type: string
      responses:
        '200':
          description: 'Contents of the folder are divided into two lists: subfolders,
            and other contents.'
          schema:
            $ref: '#/definitions/FolderHierarchy'
  /internal/folder/host/{datacenter_id}:
    get:
      summary: Get the top level host folder
      description: The top level host folder
      operationId: queryHostFolder
      tags:
      - /internal/folder
      x-group: folder
      parameters:
      - in: path
        description: ID of the datacenter
        name: datacenter_id
        required: true
        type: string
      responses:
        '200':
          description: Returns details about a host folder.
          schema:
            $ref: '#/definitions/FolderDetail'
  /internal/folder/vm/{datacenter_id}:
    get:
      summary: Get the top level vm folder
      description: The top level vm folder
      operationId: queryVmFolder
      tags:
      - /internal/folder
      x-group: folder
      parameters:
      - in: path
        description: ID of the datacenter
        name: datacenter_id
        required: true
        type: string
      responses:
        '200':
          description: Returns details about a vm folder.
          schema:
            $ref: '#/definitions/FolderDetail'
  /internal/folder/{id}:
    get:
      summary: Details of a folder
      description: Details of a folder
      operationId: getFolder
      tags:
      - /internal/folder
      x-group: folder
      parameters:
      - in: path
        description: ID of the Folder
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Returns details about a folder.
          schema:
            $ref: '#/definitions/FolderDetail'
  /internal/hierarchy/{id}:
    get:
      summary: Get summary of a hierarchy object
      description: Retrieve details for the specified storage hierarchy object.
      operationId: getHierarchyObject
      tags:
      - /internal/hierarchy
      x-group: hierarchy
      parameters:
      - in: path
        description: ID of the hierarchy object
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Details of the hierarchy object
          schema:
            $ref: '#/definitions/ManagedHierarchyObjectSummary'
  /internal/hierarchy/{id}/sla_conflicts:
    get:
      summary: Get list of descendant objects with SLA conflicts
      description: Retrieve the list of descendant objects with an explicitly configured
        SLA, or inherit an SLA from a different parent.
      operationId: getHierarchySlaConflicts
      tags:
      - /internal/hierarchy
      x-group: hierarchy
      parameters:
      - in: path
        description: ID of the hierarchy object
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Summary list of descendant objects
          schema:
            $ref: '#/definitions/ManagedHierarchyObjectSummaryListResponse'
  /internal/host/bulk:
    post:
      summary: Register hosts.
      description: Register hosts with Rubrik clusters.
      operationId: bulkRegisterHost
      tags:
      - /internal/host
      x-group: hosts
      parameters:
      - in: body
        description: Array containing a registration definition for each host.
        name: hosts
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/HostRegister'
      responses:
        '201':
          description: Summary information from registration of hosts.
          schema:
            $ref: '#/definitions/HostDetailListResponse'
  /internal/host/bulk-delete:
    post:
      summary: Deregister hosts.
      description: Deregister specified network hosts from Rubrik clusters.
      operationId: bulkDeleteHost
      tags:
      - /internal/host
      x-group: hosts
      parameters:
      - in: body
        description: Provide the ID of each host to deregister.
        name: ids
        required: true
        schema:
          type: array
          description: ID of the registered host.
          items:
            type: string
      responses:
        '204':
          description: Specified host were successfully deregistered.
  /internal/host/count:
    get:
      summary: Count all hosts
      description: Retrieve the total number of hosts, and the total number of protected
        hosts. A protected host has at least one protected fileset.
      operationId: countHost
      tags:
      - /internal/host
      x-group: hosts
      parameters:
      - in: query
        description: 'Filter the summary information based on the operating system
          type. Values are ''Linux'', ''Windows'', ''ANY'', or ''NONE''.

          Use **_ANY_** to return the total number of hosts that have any operating
          system type set.

          Use **_NONE_** to return the total number of hosts that do not have operating
          system type set.'
        name: operating_system_type
        required: false
        type: string
        enum:
        - Linux
        - Windows
        - ANY
        - NONE
      - in: query
        description: 'Filter the summary information based on the network share type.
          Values are ''SMB'', ''NFS'', ''ANY'', or ''NONE''.

          Use **_ANY_** to return the total number of hosts that have any network
          share type set.

          Use **_NONE_** to return the total number of hosts that do not have network
          share type type set.'
        name: share_type
        required: false
        type: string
        enum:
        - SMB
        - NFS
        - ANY
        - NONE
      responses:
        '200':
          description: Total number of hosts and total number of protected hosts.
          schema:
            $ref: '#/definitions/ProtectedObjectsCount'
  /internal/host/request/{id}:
    get:
      summary: Get host async request
      description: Get details about a host related async request.
      operationId: getHostAsyncRequestStatus
      tags:
      - /internal/host
      x-group: hosts
      parameters:
      - in: path
        description: ID of the request
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Status for the async request.
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
  /internal/host/share:
    get:
      summary: Get summary information for network shares.
      description: Retrieve summary information for network shares. Apply filters
        to refine the returned information.
      operationId: queryHostShare
      tags:
      - /internal/host/share
      x-group: hosts
      parameters:
      - in: query
        description: Filter the summary information based on the host id.
        name: host_id
        required: false
        type: string
      - in: query
        description: Filter the summary information based on the share type.
        name: share_type
        required: false
        type: string
        enum:
        - NFS
        - SMB
      - in: query
        description: Filters the summary information based on the Rubrik cluster specified
          by the value of primary_cluster_id. Use 'local' for the Rubrik cluster that
          is hosting the current REST API session.
        name: primary_cluster_id
        required: false
        type: string
      responses:
        '200':
          description: Summary information for network shares.
          schema:
            $ref: '#/definitions/HostShareDetailListResponse'
    post:
      summary: Add a network share to a host.
      description: Add a network share object to a host.
      operationId: addShareToHost
      tags:
      - /internal/host
      x-group: hosts
      parameters:
      - in: body
        description: Network share creation definition.
        name: share
        required: true
        schema:
          $ref: '#/definitions/HostShareCreate'
      responses:
        '201':
          description: Detail information for added network share.
          schema:
            $ref: '#/definitions/HostShareDetail'
  /internal/host/share/{id}:
    get:
      summary: Get detailed information for a network share.
      description: Retrieve detailed information for a network share.
      operationId: getHostShare
      tags:
      - /internal/host/share
      x-group: hosts
      parameters:
      - in: path
        description: ID of the network share.
        name: id
        required: true
        type: string
      responses:
        '201':
          description: Detailed information for the specified network share.
          schema:
            $ref: '#/definitions/HostShareDetail'
    patch:
      summary: Modify a network share.
      description: Modify a network share object.
      operationId: modifyHostShare
      tags:
      - /internal/host/share
      x-group: hosts
      parameters:
      - in: path
        description: Modify network share with given ID.
        name: id
        required: true
        type: string
      - in: body
        description: Network share modification definition.
        name: share
        required: true
        schema:
          $ref: '#/definitions/HostSharePatch'
      responses:
        '201':
          description: Summary information for modified network share.
          schema:
            $ref: '#/definitions/HostShareDetail'
    delete:
      summary: Delete a network share.
      description: Delete network by specifying the network share ID.
      operationId: deleteHostShare
      tags:
      - /internal/host/share
      x-group: hosts
      parameters:
      - in: path
        description: Modify network share with given ID.
        name: id
        required: true
        type: string
      responses:
        '204':
          description: Deleted specified network share.
  /internal/host/share/{id}/search:
    get:
      summary: Search for a file within a network share.
      description: Search for a file within a network share. Search via full path
        prefix or filename prefix.
      operationId: searchHostShare
      tags:
      - /internal/host/share
      x-group: hosts
      parameters:
      - in: path
        description: ID of the network share to search
        name: id
        required: true
        type: string
      - in: query
        description: The path query. Either path prefix or filename prefix.
        name: path
        required: true
        type: string
      responses:
        '200':
          description: Search results
          schema:
            $ref: '#/definitions/SearchResponseListResponse'
  /internal/host/share_credential:
    get:
      summary: Get summary information for host credential
      description: Retrieve summary information for host credential. Apply filters
        to refine the returned information.
      operationId: queryHostShareCredential
      tags:
      - /internal/host/share_credential
      x-group: hosts
      parameters:
      - in: query
        description: Filter the summary information based on the host id.
        name: host_id
        required: false
        type: string
      responses:
        '200':
          description: Summary information for host credential
          schema:
            $ref: '#/definitions/HostShareCredentialDetailListResponse'
    post:
      summary: Add a share credential to a host.
      description: Add a share credential object to a host.
      operationId: addShareCredentialToHost
      tags:
      - /internal/host/share_credential
      x-group: hosts
      parameters:
      - in: body
        description: Host share credential creation definition.
        name: share_credential
        required: true
        schema:
          $ref: '#/definitions/HostShareCredentialDefinition'
      responses:
        '201':
          description: Summary information for host credential
          schema:
            $ref: '#/definitions/HostShareCredentialDetail'
  /internal/host/{id}/async:
    delete:
      summary: Delete a registered host asynchronously
      description: Delete host asynchronously by specifying the host ID.
      operationId: deleteHostAsync
      tags:
      - /internal/host/async
      x-group: hosts
      parameters:
      - in: path
        description: ID of the host to delete
        name: id
        required: true
        type: string
      responses:
        '204':
          description: Async request for deleting the host.
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
  /internal/host/{id}/flag:
    patch:
      summary: REQUIRES SUPPORT TOKEN - Modify physical host agent flags.
      description: REQUIRES SUPPORT TOKEN - Modify physical host agent flags to new
        values. Physical host agent flags are defined during compile-time. They can
        be passed in during agent startup or can be modified dynamically using this
        endpoint. A support token is required for this operation.
      operationId: setHostFlag
      tags:
      - /internal/host
      x-group: hosts
      parameters:
      - in: path
        description: ID of the registered host.
        name: id
        required: true
        type: string
      - in: body
        description: Flag name and new value.
        name: flag
        required: true
        schema:
          $ref: '#/definitions/HostFlag'
      responses:
        '204':
          description: Physical host agent flags successfully modified.
    get:
      summary: REQUIRES SUPPORT TOKEN - Get the value for a physical host flag.
      description: REQUIRES SUPPORT TOKEN - Retrieve physical host agent flag value.
        Physical host agent flags are defined during compile-time. A support token
        is required for this operation.
      operationId: getHostFlag
      tags:
      - /internal/host
      x-group: hosts
      parameters:
      - in: path
        description: ID of the registered host.
        name: id
        required: true
        type: string
      - in: query
        description: Flag name.
        name: flag
        required: true
        type: string
      responses:
        '200':
          description: Physical host flag and value.
          schema:
            $ref: '#/definitions/HostFlag'
  /internal/host/{id}/log:
    post:
      summary: REQUIRES SUPPORT TOKEN - Fetch host logs from agent into cluster.
      description: REQUIRES SUPPORT TOKEN - Fetch host logs from agent into cluster
        /internal/sd/scratch directory. A support token is required for this operation.
      operationId: fetchHostLogs
      tags:
      - /internal/host
      x-group: hosts
      parameters:
      - in: path
        description: ID of the registered host.
        name: id
        required: true
        type: string
      responses:
        '204':
          description: Host logs successfully fetched into cluster.
  /internal/host_fileset:
    get:
      summary: Get summary information for hosts.
      description: Retrieve summary information for all hosts that are registered
        with a Rubrik cluster. For each host, we also retrieve the summary information
        for the filesets applied to the host.
      operationId: queryHostFileset
      tags:
      - /internal/host_fileset
      x-group: hosts
      parameters:
      - in: query
        description: Filter the summary information based on the hostname.
        name: hostname
        required: false
        type: string
      - in: query
        description: Filter the summary information based on the operating system
          type. Values are 'Linux' or 'Windows'
        name: operating_system_type
        required: false
        type: string
        enum:
        - Linux
        - Windows
      - in: query
        description: Filter the summary information based on the operating system
          of the host.
        name: operating_system
        required: false
        type: string
      - in: query
        description: Filters the summary information based on the Rubrik cluster specified
          by the value of primary_cluster_id. Use 'local' for the Rubrik cluster that
          is hosting the current REST API session.
        name: primary_cluster_id
        required: false
        type: string
      - in: query
        description: Filter the summary information based on the ID of the effective
          SLA Domain inherited by filesets of the host. Use **_UNPROTECTED_** to only
          return information for hosts with filesets that do not have an effective
          SLA Domain. Use **_PROTECTED_** to only return information for hosts with
          filesets that do have an effective SLA Domain.
        name: effective_sla_domain_id
        required: false
        type: string
      - in: query
        description: Filter the summary information based on the ID of a fileset templates
          applied to the host. Use **_NO_FILESET_** to return information for hosts
          with no filesets. _NO_FILESET_ must be used with searchType 'exact'
        name: template_id
        required: false
        type: string
      - in: query
        description: Search type. Accepted values are 'infix' or 'exact'. Default
          is 'exact'
        name: search_type
        required: false
        type: string
      - in: query
        description: Comma-separated list of attributes by which to sort hostName | operatingSystem | operatingSystemType | status
        name: sort_by
        required: false
        type: string
      - in: query
        description: Comma-separated list of sort orders (one for each sort_by) asc | desc,
        name: sort_order
        required: false
        type: string
        enum:
        - asc
        - desc
      responses:
        '200':
          description: Summary information for registered hosts.
          schema:
            $ref: '#/definitions/HostFilesetSummaryListResponse'
  /internal/host_fileset/share:
    get:
      summary: Get summary information for network shares.
      description: Retrieve summary information for the network shares that are registered
        with a Rubrik cluster, and summary information for the filesets that are assigned
        to each network share.
      operationId: queryHostFilesetShare
      tags:
      - /internal/host_fileset
      x-group: hosts
      parameters:
      - in: query
        description: Filter the summary information based on the hostname.
        name: hostname
        required: false
        type: string
      - in: query
        description: Filter the summary information based on the export point.
        name: export_point
        required: false
        type: string
      - in: query
        description: Filter the summary information based on the share type.
        name: share_type
        required: false
        type: string
        enum:
        - NFS
        - SMB
      - in: query
        description: Filters the summary information based on the Rubrik cluster specified
          by the value of primary_cluster_id. Use 'local' for the Rubrik cluster that
          is hosting the current REST API session.
        name: primary_cluster_id
        required: false
        type: string
      - in: query
        description: Filter the summary information based on the ID of the effective
          SLA Domain that is inherited by the filesets that are assigned to a network
          share. Use **_UNPROTECTED_** to only return information for network shares
          that have filesets without an effective SLA Domain. Use **_PROTECTED_**
          to only return information for network shares that have filesets with an
          effective SLA Domain.
        name: effective_sla_domain_id
        required: false
        type: string
      - in: query
        description: Filter the summary information based on the ID of a fileset templates
          applied to the network share. Use **_NO_FILESET_** to return information
          for network shares with no filesets. _NO_FILESET_ must be used with searchType
          'exact'
        name: template_id
        required: false
        type: string
      - in: query
        description: Search type. Accepted values are 'infix' or 'exact'. Default
          is 'exact'
        name: search_type
        required: false
        type: string
      - in: query
        description: 'Comma-separated list of attributes that define the sort order
          of the search results. Use the following attributes to form the list: exportPoint
          | hostName | shareType | status'
        name: sort_by
        required: false
        type: array
        items:
          type: string
      - in: query
        description: 'Comma-separated list of sort directions for each attribute type,
          use either ''asc'' for ascending or ''desc'' for descending. Match the order
          of the sort direction list values to the attribute list values to define
          the sort direction for each attribute type in the results.

          Comma-separated list of sort orders (one for each sort_by) asc | desc",'
        name: sort_order
        required: false
        type: array
        items:
          type: string
      responses:
        '200':
          description: Summary information for network shares.
          schema:
            $ref: '#/definitions/HostFilesetShareSummaryListResponse'
  /internal/host_fileset/share/{id}:
    get:
      summary: Get detailed information for a network share.
      description: Retrieve detailed information for a network share, including detailed
        information for the filesets that are assigned to the network share.
      operationId: getHostFilesetShare
      tags:
      - /internal/host_fileset
      x-group: hosts
      parameters:
      - in: path
        description: ID of the network share.
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Detailed information for the specified network share..
          schema:
            $ref: '#/definitions/HostFilesetShareDetail'
  /internal/host_fileset/{id}:
    get:
      summary: Get detail information for a host.
      description: Retrieve detail information for a registered host. For each host,
        we also retrieve the detail information for the filesets applied to the host.
      operationId: getHostFileset
      tags:
      - /internal/host_fileset
      x-group: hosts
      parameters:
      - in: path
        description: ID of the registered host.
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Summary information for the specified host.
          schema:
            $ref: '#/definitions/HostFilesetDetail'
  /internal/hyperv/cluster:
    get:
      summary: Get summary of all the Hyper-V hlusters
      description: Get summary of all the Hyper-V hlusters
      operationId: queryHypervCluster
      tags:
      - /internal/hyperv/cluster
      x-group: hyperv_cluster
      parameters:
      - in: query
        description: Filter by ID of effective SLA domain
        name: effective_sla_domain_id
        required: false
        type: string
      - in: query
        description: Filter by primary cluster ID, or **local**
        name: primary_cluster_id
        required: false
        type: string
      - name: limit
        in: query
        description: Limit the number of matches returned.
        required: false
        type: integer
        format: int32
        minimum: 0
      - name: offset
        in: query
        description: Ignore these many matches in the beginning.
        required: false
        type: integer
        format: int32
        minimum: 0
      - name: name
        in: query
        description: Search vm by vm name.
        required: false
        type: string
      - name: sla_assignment
        in: query
        description: Filter by SLA assignment type
        enum:
        - Derived
        - Direct
        - Unassigned
        required: false
        type: string
      - name: sort_by
        in: query
        description: A comma-separated list of attributes to sort the results on
        required: false
        type: string
        enum:
        - effectiveSlaDomainName
        - name
      - name: sort_order
        in: query
        description: Sort order, either ascending or descending
        required: false
        type: string
        enum:
        - asc
        - desc
      responses:
        '200':
          description: List of Hyper-V cluster summaries
          schema:
            $ref: '#/definitions/HypervClusterSummaryListResponse'
  /internal/hyperv/cluster/{id}:
    get:
      summary: Get details of a Hyper-V cluster
      description: Get details of a Hyper-V cluster
      operationId: getHypervCluster
      tags:
      - /internal/hyperv/cluster
      x-group: hyperv_cluster
      parameters:
      - in: path
        description: ID of the Hyper-V cluster
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Details about the Hyper-V cluster
          schema:
            $ref: '#/definitions/HypervClusterDetail'
    patch:
      summary: Update Hyper-V cluster
      description: Update cluster with specified properties
      operationId: updateHypervCluster
      tags:
      - /internal/hyperv/cluster
      x-group: hyperv_cluster
      parameters:
      - in: path
        description: ID of Hyper-V cluster
        name: id
        required: true
        type: string
      - in: body
        description: Properties to update
        name: update_properties
        required: true
        schema:
          $ref: '#/definitions/HypervClusterUpdate'
      responses:
        '200':
          description: Return details about virtual machine.
          schema:
            $ref: '#/definitions/HypervClusterDetail'
  /internal/hyperv/hierarchy/{id}:
    get:
      summary: Get summary of a hierarchy object
      description: Retrieve details for the specified hierarchy object.
      operationId: getHypervHierarchyObject
      tags:
      - /internal/hyperv/hierarchy
      x-group: hyperv_hierarchy
      parameters:
      - in: path
        description: ID of the hierarchy object
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Details of the hierarchy object
          schema:
            $ref: '#/definitions/HypervHierarchyObjectSummary'
  /internal/hyperv/hierarchy/{id}/children:
    get:
      summary: Get list of immediate descendant objects
      description: Retrieve the list of immediate descendant objects for the specified
        parent
      operationId: getHypervHierarchyChildren
      tags:
      - /internal/hyperv/hierarchy
      x-group: hyperv_hierarchy
      parameters:
      - in: path
        description: ID of the parent Hyper-V hierarchy object. To get top-level nodes,
          use **root** as the ID.
        name: id
        required: true
        type: string
      - in: query
        description: Filter by ID of effective SLA domain
        name: effective_sla_domain_id
        required: false
        type: string
      - in: query
        description: Filter by node object type
        name: object_type
        required: false
        type: string
      - in: query
        description: Filter by primary cluster ID, or **local**
        name: primary_cluster_id
        required: false
        type: string
      - name: limit
        in: query
        description: Limit the number of matches returned.
        required: false
        type: integer
        format: int32
        minimum: 0
      - name: offset
        in: query
        description: Ignore these many matches in the beginning.
        required: false
        type: integer
        format: int32
        minimum: 0
      - name: name
        in: query
        description: Search vm by vm name.
        required: false
        type: string
      - name: sla_assignment
        in: query
        description: Filter by SLA assignment type
        enum:
        - Derived
        - Direct
        - Unassigned
        required: false
        type: string
      - name: sort_by
        in: query
        description: Attribute to sort the results on
        required: false
        type: string
        enum:
        - effectiveSlaDomainName
        - name
        - descendentCount.cluster
        - descendentCount.host
        - descendentCount.vm
      - name: sort_order
        in: query
        description: Sort order, either ascending or descending
        required: false
        type: string
        enum:
        - asc
        - desc
      responses:
        '200':
          description: Summary list of descendant objects
          schema:
            $ref: '#/definitions/HypervHierarchyObjectSummaryListResponse'
  /internal/hyperv/hierarchy/{id}/descendants:
    get:
      summary: Get list of descendant objects
      description: Retrieve the list of descendant objects for the specified parent
      operationId: getHypervHierarchyDescendants
      tags:
      - /internal/hyperv/hierarchy
      x-group: hyperv_hierarchy
      parameters:
      - in: path
        description: ID of the parent Hyper-V hierarchy object
        name: id
        required: true
        type: string
      - in: query
        description: Filter by ID of effective SLA domain
        name: effective_sla_domain_id
        required: false
        type: string
      - in: query
        description: Filter by node object type
        name: object_type
        required: false
        type: string
        enum:
        - cluster
        - host
        - vm
      - in: query
        description: Filter by primary cluster ID, or **local**
        name: primary_cluster_id
        required: false
        type: string
      - name: limit
        in: query
        description: Limit the number of matches returned.
        required: false
        type: integer
        format: int32
        minimum: 0
      - name: offset
        in: query
        description: Ignore these many matches in the beginning.
        required: false
        type: integer
        format: int32
        minimum: 0
      - name: name
        in: query
        description: Search vm by vm name.
        required: false
        type: string
      - name: sla_assignment
        in: query
        description: Filter by SLA assignment type
        enum:
        - Derived
        - Direct
        - Unassigned
        required: false
        type: string
      - name: sort_by
        in: query
        description: Attribute to sort the results on
        required: false
        type: string
        enum:
        - effectiveSlaDomainName
        - name
        - descendentCount.cluster
        - descendentCount.host
        - descendentCount.vm
      - name: sort_order
        in: query
        description: Sort order, either ascending or descending
        required: false
        type: string
        enum:
        - asc
        - desc
      responses:
        '200':
          description: Summary list of descendant objects
          schema:
            $ref: '#/definitions/HypervHierarchyObjectSummaryListResponse'
  /internal/hyperv/host:
    get:
      summary: Get summary of all the Hyper-V hosts
      description: Get summary of all the Hyper-V hosts
      operationId: queryHypervHost
      tags:
      - /internal/hyperv/host
      x-group: hyperv_host
      parameters:
      - in: query
        description: Filter by ID of effective SLA domain
        name: effective_sla_domain_id
        required: false
        type: string
      - in: query
        description: Filter by primary cluster ID, or **local**
        name: primary_cluster_id
        required: false
        type: string
      - name: limit
        in: query
        description: Limit the number of matches returned.
        required: false
        type: integer
        format: int32
        minimum: 0
      - name: offset
        in: query
        description: Ignore these many matches in the beginning.
        required: false
        type: integer
        format: int32
        minimum: 0
      - name: name
        in: query
        description: Search vm by vm name.
        required: false
        type: string
      - name: sla_assignment
        in: query
        description: Filter by SLA assignment type
        enum:
        - Derived
        - Direct
        - Unassigned
        required: false
        type: string
      - name: sort_by
        in: query
        description: Sort the result by the given attribute.
        required: false
        type: string
        enum:
        - effectiveSlaDomainName
        - name
      - name: sort_order
        in: query
        description: Sort order, either ascending or descending
        required: false
        type: string
        enum:
        - asc
        - desc
      responses:
        '200':
          description: List of Hyper-V host summaries
          schema:
            $ref: '#/definitions/HypervHostSummaryListResponse'
  /internal/hyperv/host/request/{id}:
    get:
      summary: Get Hyper-V host async request
      description: Get details about a Hyper-V host related async request.
      operationId: getHypervHostAsyncRequestStatus
      tags:
      - /internal/hyperv/host
      x-group: hyperv_host
      parameters:
      - in: path
        description: ID of the request
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Status for the async request.
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
  /internal/hyperv/host/{id}:
    get:
      summary: Get details of a Hyper-V host
      description: Get details of a Hyper-V host
      operationId: getHypervHost
      tags:
      - /internal/hyperv/host
      x-group: hyperv_host
      parameters:
      - in: path
        description: ID of the Hyper-V host
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Details about the Hyper-V host
          schema:
            $ref: '#/definitions/HypervHostDetail'
    patch:
      summary: Update Hyper-V host
      description: Update host with specified properties
      operationId: updateHypervHost
      tags:
      - /internal/hyperv/host
      x-group: hyperv_host
      parameters:
      - in: path
        description: ID of Hyper-V host
        name: id
        required: true
        type: string
      - in: body
        description: Properties to update
        name: update_properties
        required: true
        schema:
          $ref: '#/definitions/HypervHostUpdate'
      responses:
        '200':
          description: Return details about virtual machine.
          schema:
            $ref: '#/definitions/HypervHostDetail'
  /internal/hyperv/host/{id}/refresh:
    post:
      summary: Refresh Hyper-V host metadata
      description: Create a job to refresh the metadata for the specified Hyper-V
        host
      operationId: refreshHypervHost
      tags:
      - /internal/hyperv/host
      x-group: hyperv_host
      parameters:
      - in: path
        description: ID of the Hyper-V host
        name: id
        required: true
        type: string
      responses:
        '202':
          description: Job Instance ID of the scheduled Hyper-V host refresh job.
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
  /internal/hyperv/vm:
    get:
      summary: Get list of VMs
      description: Get summary of all the VMs
      operationId: queryHypervVirtualMachine
      tags:
      - /internal/hyperv/vm
      x-group: hyperv_vm
      parameters:
      - in: query
        description: Filter by ID of effective SLA domain
        name: effective_sla_domain_id
        required: false
        type: string
      - in: query
        description: Filter by primary cluster ID, or **local**
        name: primary_cluster_id
        required: false
        type: string
      - name: limit
        in: query
        description: Limit the number of matches returned.
        required: false
        type: integer
        format: int32
        minimum: 0
      - name: offset
        in: query
        description: Ignore these many matches in the beginning.
        required: false
        type: integer
        format: int32
        minimum: 0
      - name: name
        in: query
        description: Search vm by vm name.
        required: false
        type: string
      - name: sla_assignment
        in: query
        description: Filter by SLA assignment type
        enum:
        - Derived
        - Direct
        - Unassigned
        required: false
        type: string
      - name: is_relic
        in: query
        description: Filter the summary information based on the relic status of the
          VM. Returns both relic and non relic if the parameter is not set.
        required: false
        type: boolean
      - name: sort_by
        in: query
        description: Sort the result by the given attribute.
        required: false
        type: string
        enum:
        - effectiveSlaDomainName
        - name
      - name: sort_order
        in: query
        description: Sort order, either ascending or descending
        required: false
        type: string
        enum:
        - asc
        - desc
      responses:
        '200':
          description: Get page summary about virtual machine
          schema:
            $ref: '#/definitions/HypervVirtualMachineSummaryListResponse'
  /internal/hyperv/vm/request/{id}:
    get:
      summary: Get VM async request details
      description: Get details about a Hyper-V vm related async request.
      operationId: getHypervVirtualMachineAsyncRequestStatus
      tags:
      - /internal/hyperv/vm
      x-group: hyperv_vm
      parameters:
      - in: path
        description: ID of the request
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Status for the async request.
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
  /internal/hyperv/vm/snapshot/mount:
    get:
      summary: Get summary information for all live mounts
      description: 'Retrieve the following information for all live mounts: ID, snapshot
        date, ID of source VM, name of source VM, ID of source host, status of the
        mount, mount event ID, and unmount event ID.'
      operationId: queryHypervVirtualMachineSnapshotMount
      tags:
      - /internal/hyperv/vm
      x-group: hyperv_vm
      parameters:
      - in: query
        description: Filters live mounts by VM ID
        name: vm_id
        required: false
        type: string
      - in: query
        description: Filters live mounts by VM name
        name: vm_name
        required: false
        type: string
      - name: offset
        in: query
        description: Ignore these many matches in the beginning.
        required: false
        type: integer
        format: int32
        minimum: 0
      - name: limit
        in: query
        description: Limit the number of matches returned. Default is 25.
        required: false
        type: integer
        format: int32
        minimum: 0
      responses:
        '200':
          description: Returns summary information for all live mounts.
          schema:
            $ref: '#/definitions/HypervVirtualMachineMountSummaryListResponse'
  /internal/hyperv/vm/snapshot/mount/{id}:
    get:
      summary: Get summary information for a live mount
      description: 'Retrieve the following summary information for a specified live
        mount: ID, snapshot date, ID of source VM, name of source VM, ID of source
        host, status of the mount, mount event ID, and unmount event ID.'
      operationId: getHypervVirtualMachineSnapshotMount
      tags:
      - /internal/hyperv/vm
      x-group: hyperv_vm
      parameters:
      - in: path
        description: ID of the live mount
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Returns detail information for a specified live mount.
          schema:
            $ref: '#/definitions/HypervVirtualMachineMountDetail'
    patch:
      summary: Power a Live Mount on and off
      description: Power a specified Live Mount virtual machine on or off. Pass **_true_**
        to power the virtual machine on and pass **_false_** to power the virtual
        machine off.
      operationId: updateHypervVirtualMachineSnapshotMount
      tags:
      - /internal/hyperv/vm
      x-group: hyperv_vm
      parameters:
      - in: path
        description: ID of a Live Mount.
        name: id
        required: true
        type: string
      - in: body
        description: Power state configuration.
        name: config
        required: true
        schema:
          $ref: '#/definitions/HypervUpdateMountConfig'
      responses:
        '200':
          description: Details of the Live Mount.
          schema:
            $ref: '#/definitions/HypervVirtualMachineMountDetail'
    delete:
      summary: Requst to delete a live mount
      description: Create a request to delete a live mount
      operationId: deleteHypervVirtualMachineSnapshotMount
      tags:
      - /internal/hyperv/vm
      x-group: hyperv_vm
      parameters:
      - in: path
        description: ID of the mount to remove
        name: id
        required: true
        type: string
      - in: query
        description: Force unmount to deal with situations where host has been moved.
        name: force
        required: false
        type: boolean
      responses:
        '202':
          description: Status for the unmount request.
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
  /internal/hyperv/vm/snapshot/{id}:
    get:
      summary: Get VM snapshot details
      description: Retrieve detailed information about a snapshot.
      operationId: getHypervVirtualMachineSnapshot
      tags:
      - /internal/hyperv/vm
      x-group: hyperv_vm
      parameters:
      - in: path
        description: ID of snapshot
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Returns details about a snapshot
          schema:
            $ref: '#/definitions/HypervVirtualMachineSnapshotDetail'
    delete:
      summary: Delete VM snapshot
      description: Delete a snapshot by expiring it. Snapshot is expired only if it
        is a manual snapshot or a snapshot of an unprotected vm.
      operationId: deleteHypervVirtualMachineSnapshot
      tags:
      - /internal/hyperv/vm
      x-group: hyperv_vm
      parameters:
      - in: path
        description: ID of snapshot
        name: id
        required: true
        type: string
      - in: query
        description: Snapshot location to delete. Use **_local_** to delete all local
          snapshots and **_all_** to delete the snapshot in all locations.
        name: location
        required: true
        type: string
        enum:
        - all
        - local
      responses:
        '204':
          description: Snapshot successfully deleted.
  /internal/hyperv/vm/snapshot/{id}/browse:
    get:
      summary: Lists all files in VM snapshot
      description: Lists all files and directories in a given path
      operationId: browseHypervVirtualMachineSnapshot
      tags:
      - /internal/hyperv/vm
      x-group: hyperv_vm
      parameters:
      - in: path
        description: ID of snapshot
        name: id
        required: true
        type: string
      - in: query
        description: The absolute path to start the directory listing from.
        name: path
        required: true
        type: string
      - in: query
        description: Starting position in the list of path entries contained in the
          query results, sorted by lexicographical order. The response includes the
          specified numbered entry and all higher numbered entries.
        name: offset
        required: false
        type: integer
        format: int32
      - in: query
        description: Maximum number of entries in the response.
        name: limit
        required: false
        type: integer
        format: int32
      responses:
        '200':
          description: List of files and directories at the specified path.
          schema:
            $ref: '#/definitions/BrowseResponseListResponse'
  /internal/hyperv/vm/snapshot/{id}/download:
    post:
      summary: Creates a download from archival request.
      description: Download a snapshot from archival.
      operationId: downloadHypervVirtualMachineSnapshot
      tags:
      - /internal/hyperv/vm
      x-group: hyperv_vm
      parameters:
      - in: path
        description: ID of snapshot
        name: id
        required: true
        type: string
      responses:
        '202':
          description: Status for the download request.
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
  /internal/hyperv/vm/snapshot/{id}/download_file:
    post:
      summary: Download file from VM snapshot
      description: Create a download file request
      operationId: downloadHypervVirtualMachineSnapshotFile
      tags:
      - /internal/hyperv/vm
      x-group: hyperv_vm
      parameters:
      - in: path
        description: ID of Snapshot
        name: id
        required: true
        type: string
      - in: body
        description: Configuration for a download request
        name: config
        required: true
        schema:
          $ref: '#/definitions/HypervDownloadFileJobConfig'
      responses:
        '202':
          description: Status for the instant recover request.
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
  /internal/hyperv/vm/snapshot/{id}/export:
    post:
      summary: Export VM snapshot
      description: Export snapshot of a vm.
      operationId: exportHypervVirtualMachineSnapshot
      tags:
      - /internal/hyperv/vm
      x-group: hyperv_vm
      parameters:
      - in: path
        description: ID of snapshot
        name: id
        required: true
        type: string
      - in: body
        description: Configuration for the export request
        name: config
        required: true
        schema:
          $ref: '#/definitions/HypervExportSnapshotJobConfig'
      responses:
        '202':
          description: Status for the export request.
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
  /internal/hyperv/vm/snapshot/{id}/instant_recover:
    post:
      summary: Creates an instant recover request that restores a target VM from the
        given Rubrik-hosted-snapshot.
      description: The VM will be started with networking enabled. If the VM does
        not exist anymore, a new VM will be created.
      operationId: recoverHypervVirtualMachineSnapshot
      tags:
      - /internal/hyperv/vm
      x-group: hyperv_vm
      parameters:
      - in: path
        description: ID of Snapshot
        name: id
        required: true
        type: string
      - in: body
        description: Configuration for the instant recover request
        name: config
        required: true
        schema:
          $ref: '#/definitions/HypervInstantRecoveryJobConfig'
      responses:
        '202':
          description: Status for the instant recover request.
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
  /internal/hyperv/vm/snapshot/{id}/mount:
    post:
      summary: Create a live mount request
      description: Create a live mount request with given configuration
      operationId: createHypervVirtualMachineSnapshotMount
      tags:
      - /internal/hyperv/vm
      x-group: hyperv_vm
      parameters:
      - in: path
        description: ID of Snapshot
        name: id
        required: true
        type: string
      - in: body
        description: Configuration for the mount request
        name: config
        required: false
        schema:
          $ref: '#/definitions/HypervMountSnapshotJobConfig'
      responses:
        '202':
          description: Status for the mount request.
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
  /internal/hyperv/vm/snapshot/{id}/restore_file:
    post:
      summary: Restore file from VM snapshot
      description: Restore files to the original VM
      operationId: restoreHypervVirtualMachineSnapshotFile
      tags:
      - /internal/hyperv/vm
      x-group: hyperv_vm
      parameters:
      - in: path
        description: ID of snapshot
        name: id
        required: true
        type: string
      - in: body
        description: Configuration for a restore job
        name: config
        required: true
        schema:
          $ref: '#/definitions/HypervRestoreFileConfig'
      responses:
        '202':
          description: Status for the restore request.
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
  /internal/hyperv/vm/{id}:
    get:
      summary: Get VM details
      description: Detailed view of a VM
      operationId: getHypervVirtualMachine
      tags:
      - /internal/hyperv/vm
      x-group: hyperv_vm
      parameters:
      - in: path
        description: ID of the Virtual Machine.
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Return details about the Virtual machine.
          schema:
            $ref: '#/definitions/HypervVirtualMachineDetail'
    patch:
      summary: Update VM
      description: Update VM with specified properties
      operationId: updateHypervVirtualMachine
      tags:
      - /internal/hyperv/vm
      x-group: hyperv_vm
      parameters:
      - in: path
        description: ID of Virtual Machine
        name: id
        required: true
        type: string
      - in: body
        description: Properties to update
        name: vm_update_properties
        required: true
        schema:
          $ref: '#/definitions/HypervVirtualMachineUpdate'
      responses:
        '200':
          description: Return details about virtual machine.
          schema:
            $ref: '#/definitions/HypervVirtualMachineDetail'
  /internal/hyperv/vm/{id}/missed_snapshot:
    get:
      summary: Get details about missed snapshots for a VM
      description: Retrieve the time of the day when the snapshots were missed specific
        to a vm.
      operationId: queryHypervVirtualMachineMissedSnapshot
      tags:
      - /internal/hyperv/vm
      x-group: hyperv_vm
      parameters:
      - in: path
        description: ID of the vm
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Returns details about missed snapshots for a VM.
          schema:
            $ref: '#/definitions/MissedSnapshotListResponse'
  /internal/hyperv/vm/{id}/register_agent:
    post:
      summary: Register the agent installed in VM
      description: Register the agent that installed in VM
      operationId: hypervVmRegisterAgent
      tags:
      - /internal/hyperv/vm
      x-group: hyperv_vm
      parameters:
      - in: path
        description: ID of the Virtual Machine
        name: id
        required: true
        type: string
      responses:
        '204':
          description: The VM agent is registered successfully
  /internal/hyperv/vm/{id}/search:
    get:
      summary: Search for file in VM
      description: Search for a file within the Virtual Machine. Search via full path
        prefix or filename prefix.
      operationId: searchHypervVirtualMachine
      tags:
      - /internal/hyperv/vm
      x-group: hyperv_vm
      parameters:
      - in: path
        description: ID of the vm
        name: id
        required: true
        type: string
      - in: query
        description: The path query. Either path prefix or filename prefix.
        name: path
        required: true
        type: string
      responses:
        '200':
          description: Search results
          schema:
            $ref: '#/definitions/SearchResponseListResponse'
  /internal/hyperv/vm/{id}/snapshot:
    get:
      summary: Get list of snapshots of VM
      description: 'Retrieve the following information for all snapshots for a VM:
        ID, snapshot date, expiration date, type of source object, Name of VM, Name
        of fileset, type of snapshot, state of the cloud, level of consistency, name
        of snapshot VM, Index of state, total number of file, IDs of all replication
        location, IDs of all archival location.'
      operationId: queryHypervVirtualMachineSnapshot
      tags:
      - /internal/hyperv/vm
      x-group: hyperv_vm
      parameters:
      - in: path
        description: ID of the vm
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Returns summary information for all snapshots.
          schema:
            $ref: '#/definitions/HypervVirtualMachineSnapshotSummaryListResponse'
    post:
      summary: Create on-demand VM snapshot
      description: Create an on-demand snapshot for the given VM ID
      operationId: createHypervVirtualMachineSnapshot
      tags:
      - /internal/hyperv/vm
      x-group: hyperv_vm
      parameters:
      - in: path
        description: ID of the VM
        name: id
        required: true
        type: string
      - in: body
        description: Configuration for the on-demand backup.
        required: false
        name: config
        schema:
          $ref: '#/definitions/BaseOnDemandSnapshotConfig'
      responses:
        '202':
          description: Status for the backup request.
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
    delete:
      summary: Delete all snapshots of VM
      description: Delete all snapshots of a virtual machine
      operationId: deleteHypervVirtualMachineSnapshots
      tags:
      - /internal/hyperv/vm
      x-group: hyperv_vm
      parameters:
      - in: path
        description: Virtual machine ID
        name: id
        required: true
        type: string
      responses:
        '204':
          description: Snapshots successfully deleted.
  /internal/job/deleteReplicationSource:
    post:
      summary: REQUIRES SUPPORT TOKEN - deletes a replication source cluster on the
        target cluster.
      description: REQUIRES SUPPORT TOKEN - Deletes a replication source cluster on
        the target cluster. A support token is required for this operation.
      operationId: scheduleDeleteReplicationSourceJob
      tags:
      - /internal/job
      x-group: internal_job
      parameters:
      - in: body
        description: Configuration for the delete replication source job
        name: config
        required: true
        schema:
          $ref: '#/definitions/DeleteReplicationSourceJobConfig'
      responses:
        '200':
          description: TODO
          schema:
            type: string
  /internal/job/instance:
    get:
      summary: REQUIRES SUPPORT TOKEN - Query for job instances
      description: REQUIRES SUPPORT TOKEN - This is just for easier diagnosis to figure
        out what jobs there are in the system. A support token is required for this
        operation.
      operationId: queryInstances
      tags:
      - /internal/job
      x-group: internal_job
      parameters:
      - in: query
        description: Status of job instance
        name: status
        required: false
        type: string
      responses:
        '200':
          description: TODO
          schema:
            type: array
            items:
              $ref: '#/definitions/InternalJobInstanceDetail'
  /internal/job/instances:
    post:
      summary: REQUIRES SUPPORT TOKEN - list of job instances.
      description: REQUIRES SUPPORT TOKEN - Get instances by job id and status. A
        support token is required for this operation.
      operationId: getJobInstances
      tags:
      - /internal/job
      x-group: internal_job
      parameters:
      - in: body
        description: job id and status(optional)
        name: config
        required: true
        schema:
          $ref: '#/definitions/InstancesConfig'
      responses:
        '200':
          description: TODO
          schema:
            type: array
            items:
              $ref: '#/definitions/InternalJobInstanceDetail'
  /internal/job/schedule_gc_job_start_time_now:
    post:
      summary: REQUIRES SUPPORT TOKEN -  sets the start time of the next queued GC
        job to be the current date and time
      description: REQUIRES SUPPORT TOKEN - Sets the start time of the next queued
        GC job to be the current date and time. A support token is required for this
        operation.
      operationId: scheduleGCJobStartTimeNow
      tags:
      - /internal/job
      x-group: internal_job
      parameters: []
      responses:
        '200':
          description: Returns the composite JobInstance id of the scheduled GC job
            on success
          schema:
            type: string
        '404':
          description: Returned if no queued GC job exists
          schema:
            type: string
  /internal/job/type/backup:
    post:
      summary: REQUIRES SUPPORT TOKEN - Create a backup job instance
      description: TODO
      operationId: createVmBackupJob
      tags:
      - /internal/job
      x-group: internal_job
      parameters:
      - in: body
        description: Configuration for the backup job
        name: config
        required: true
        schema:
          $ref: '#/definitions/BackupJobConfig'
      responses:
        '200':
          description: Status of backup job creation
          schema:
            $ref: '#/definitions/Status'
  /internal/job/type/clean_up_references:
    post:
      summary: REQUIRES SUPPORT TOKEN - Creates a job to clean up references (semaphores,
        throttles, replication targets)
      description: REQUIRES SUPPORT TOKEN - Creates a job to clean up references (semaphores,
        throttles, replication targets). A support token is required for this operation.
      operationId: createCleanUpReferences
      tags:
      - /internal/job
      x-group: internal_job
      parameters: []
      responses:
        '201':
          description: Returned if the job creation succeeds
          schema:
            type: string
        '409':
          description: Returned if the job creation fails
          schema:
            $ref: '#/definitions/RequestFailedException'
  /internal/job/type/expire:
    post:
      summary: REQUIRES SUPPORT TOKEN - Create an expire snapshot job instance
      description: TODO
      operationId: createExpire
      tags:
      - /internal/job
      x-group: internal_job
      parameters:
      - in: body
        description: Configuration for the expire snapshot job
        name: config
        required: true
        schema:
          $ref: '#/definitions/ExpireSnapshotJobConfig'
      responses:
        '200':
          description: Return the expire job instance id on success
          schema:
            type: string
        '404':
          description: Returned if snappable does not exist
          schema:
            type: string
        '409':
          description: Returned if the request to create the expire job fails
          schema:
            $ref: '#/definitions/RequestFailedException'
  /internal/job/type/garbageCollection:
    post:
      summary: REQUIRES SUPPORT TOKEN - Create a garbage collection job instance
      description: TODO
      operationId: createGarbageCollection
      tags:
      - /internal/job
      x-group: internal_job
      parameters:
      - in: body
        description: Configuration for the garbage collection job
        name: config
        required: true
        schema:
          $ref: '#/definitions/GarbageCollectionJobConfig'
      responses:
        '200':
          description: TODO
          schema:
            type: string
  /internal/job/type/prune_job_instances:
    post:
      summary: REQUIRES SUPPORT TOKEN - Creates a job to prune job instances.
      description: REQUIRES SUPPORT TOKEN - Creates a job to prune job instances.
        A support token is required for this operation.
      operationId: createPruneJobInstances
      tags:
      - /internal/job
      x-group: internal_job
      parameters: []
      responses:
        '201':
          description: Returned if the job is successfully created
          schema:
            type: string
        '409':
          description: Returned if the job creation fails
          schema:
            $ref: '#/definitions/RequestFailedException'
  /internal/job/type/snapshot_integrity:
    post:
      summary: REQUIRES SUPPORT TOKEN - Verify integrity of a VM''s snapshots.
      description: REQUIRES SUPPORT TOKEN - Calculate the SHA-1 hash of each snapshot.
        The first time we verify a snapshot, we simply record its hash in Cassandra.
        During subsequent runs, we check the hash against the recorded hash. A support
        token is required for this operation.
      operationId: createSnapshotIntegrity
      tags:
      - /internal/job
      x-group: internal_job
      parameters:
      - in: body
        description: Configuration for the snapshot integrity job
        name: config
        required: true
        schema:
          $ref: '#/definitions/SnapshotIntegrityJobConfig'
      responses:
        '200':
          description: TODO
          schema:
            type: string
  /internal/job/type/vmJobMaintainer:
    post:
      summary: REQUIRES SUPPORT TOKEN - Creates a job that maintains other VM jobs.
      description: REQUIRES SUPPORT TOKEN - Creates a job that maintains other VM
        jobs. A support token is required for this operation.
      operationId: vmJobMaintainer
      tags:
      - /internal/job
      x-group: internal_job
      parameters: []
      responses:
        '200':
          description: TODO
          schema:
            type: string
  /internal/job/{id}:
    get:
      summary: REQUIRES SUPPORT TOKEN - Get details about a job instance
      description: REQUIRES SUPPORT TOKEN - Retrieve the following information about
        job instance- ID of job instance, job status, error details, start time of
        job, end time of job, job type, ID of the node and job progress. A support
        token is required for this operation.
      operationId: getJobInstance
      tags:
      - /internal/job
      x-group: internal_job
      parameters:
      - in: path
        description: ID of Job instance
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Return job instance details.
          schema:
            $ref: '#/definitions/InternalJobInstanceDetail'
    patch:
      summary: REQUIRES SUPPORT TOKEN - End point to update general properties of
        a job.
      description: REQUIRES SUPPORT TOKEN - This is to allow one to update general
        properties of a job. A support token is required for this operation.
      operationId: updateJob
      tags:
      - /internal/job
      x-group: internal_job
      parameters:
      - in: path
        description: ID of the job
        name: id
        required: true
        type: string
      - in: body
        description: Properties to update
        name: job_update_properties
        required: true
        schema:
          $ref: '#/definitions/JobUpdate'
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/JobDetail'
  /internal/log:
    post:
      summary: 'INTERNAL ONLY: Log a message'
      description: Used by UI to generate logs
      operationId: log
      tags:
      - /internal/log
      x-group: internal_log
      parameters:
      - in: body
        description: Details of message to log
        name: log_message
        required: true
        schema:
          $ref: '#/definitions/LogMessage'
      responses:
        '204':
          description: TODO
      x-unauthenticated: true
  /internal/managed_object/bulk/summary:
    post:
      summary: Gets the summaries of a set of managed objects
      description: Gets the summaries of a set of managed objects
      operationId: getBulkSummary
      tags:
      - /internal/managed_object
      x-group: managed_object
      parameters:
      - in: body
        name: objects
        description: List of managed IDs whose summaries to get
        schema:
          $ref: '#/definitions/ManagedIdList'
        required: true
      - in: query
        description: 'Comma-separated list of attributes by which to sort: name|objectType|hostname'
        name: sort_attr
        required: false
        type: array
        items:
          type: string
      - in: query
        description: 'Comma-separated list of sort orders (one for each sort_attr):
          asc|desc'
        name: sort_order
        required: false
        type: array
        items:
          type: string
      responses:
        '200':
          description: Summaries of each managed object
          schema:
            $ref: '#/definitions/ManagedObjectSummaryListResponse'
  /internal/managed_object/{managed_id}/children:
    get:
      summary: Gets the summaries of a managed object's children
      description: Gets the summaries of a managed object's immediate children
      operationId: getObjectChildren
      tags:
      - /internal/managed_object
      x-group: managed_object
      parameters:
      - in: path
        description: ManagedID of object whose summary to get
        name: managed_id
        required: true
        type: string
      - in: query
        description: Maximum number of results to return
        name: limit
        required: false
        type: integer
        format: int32
        minimum: 0
      - in: query
        description: Comma-separated list of objectType values by which to search
          (all if not specified)
        name: object_type
        required: false
        type: array
        items:
          type: string
      - in: query
        description: 'Comma-separated list of operatingSystemType values by which
          to search (all if not specified): Linux|Windows'
        name: operating_system_type
        required: false
        type: array
        items:
          type: string
      - in: query
        description: Starting offset of the results to return
        name: offset
        required: false
        type: integer
        format: int32
        minimum: 0
      - in: query
        description: Filter by primary cluster ID, or local
        name: primary_cluster_id
        required: false
        type: string
      - in: query
        description: 'Comma-separated list of attributes by which to search: name|hostname'
        name: search_attr
        required: false
        type: array
        items:
          type: string
      - in: query
        description: Comma-separated list of values by which to search (one for each
          search_attr)
        name: search_value
        required: false
        type: array
        items:
          type: string
      - in: query
        description: 'Comma-separated list of search types (one for each search_attr):
          prefix|infix|exact'
        name: search_type
        required: false
        type: array
        items:
          type: string
      - in: query
        description: 'Whether results must match any or all of the search attributes:
          all|any (default is "all")'
        name: join_operator
        required: false
        type: string
      - in: query
        description: 'Comma-separated list of attributes by which to sort: name|objectType|hostname'
        name: sort_attr
        required: false
        type: array
        items:
          type: string
      - in: query
        description: 'Comma-separated list of sort orders (one for each sort_attr):
          asc|desc'
        name: sort_order
        required: false
        type: array
        items:
          type: string
      responses:
        '200':
          description: Summaries of each child object
          schema:
            $ref: '#/definitions/ManagedObjectSummaryListResponse'
  /internal/managed_object/{managed_id}/descendants:
    get:
      summary: Gets the summaries of a managed object's descendants
      description: Gets the summaries of all the descendants of a managed object
      operationId: getObjectDescendants
      tags:
      - /internal/managed_object
      x-group: managed_object
      parameters:
      - in: path
        description: ManagedID of object whose descendants to get
        name: managed_id
        required: true
        type: string
      - in: query
        description: Maximum number of results to return
        name: limit
        required: false
        type: integer
        format: int32
        minimum: 0
      - in: query
        description: 'Comma-separated list of objectType values by which to search
          (all if not specified): ComputeCluster|DataCenter|Fileset|Folder|Global|Host|MssqlDatabase|MssqlInstance|VirtualMachine|VmwareHost|vCenter'
        name: object_type
        required: false
        type: array
        items:
          type: string
      - in: query
        description: 'Comma-separated list of operatingSystemType values by which
          to search (all if not specified): Linux|Windows'
        name: operating_system_type
        required: false
        type: array
        items:
          type: string
      - in: query
        description: Starting offset of the results to return
        name: offset
        required: false
        type: integer
        format: int32
        minimum: 0
      - in: query
        description: Filter by primary cluster ID, or local
        name: primary_cluster_id
        required: false
        type: string
      - in: query
        description: 'Comma-separated list of attributes by which to search: name|hostname'
        name: search_attr
        required: false
        type: array
        items:
          type: string
      - in: query
        description: Comma-separated list of values by which to search (one for each
          search_attr)
        name: search_value
        required: false
        type: array
        items:
          type: string
      - in: query
        description: 'Comma-separated list of search types (one for each search_attr):
          prefix|infix|exact'
        name: search_type
        required: false
        type: array
        items:
          type: string
      - in: query
        description: 'Whether results must match any or all of the search attributes:
          all|any (default is "all")'
        name: join_operator
        required: false
        type: string
      - in: query
        description: 'Comma-separated list of attributes by which to sort: name|objectType|hostname'
        name: sort_attr
        required: false
        type: array
        items:
          type: string
      - in: query
        description: 'Comma-separated list of sort orders (one for each sort_attr):
          asc|desc'
        name: sort_order
        required: false
        type: array
        items:
          type: string
      responses:
        '200':
          description: Summaries of each descendant object
          schema:
            $ref: '#/definitions/ManagedObjectSummaryListResponse'
  /internal/managed_object/{managed_id}/summary:
    get:
      summary: Gets the summary of a managed object
      description: Gets the summary of a managed object
      operationId: getObjectSummary
      tags:
      - /internal/managed_object
      x-group: managed_object
      parameters:
      - in: path
        description: ManagedID of object whose summary to get
        name: managed_id
        required: true
        type: string
      responses:
        '200':
          description: Summary of managed object
          schema:
            $ref: '#/definitions/ManagedObjectSummary'
  /internal/managed_volume:
    get:
      summary: Get summary information for managed volumes.
      description: Retrieve summary information for all managed volumes that are created
        within a Rubrik cluster.
      operationId: queryManagedVolume
      tags:
      - /internal/managed_volume
      x-group: managed_volume
      parameters:
      - in: query
        name: is_relic
        description: Filter by isRelic field. Return both relic and non-relic managed
          volumes if this query is not set.
        required: false
        type: boolean
      - in: query
        description: Filters the summary information based on the Rubrik cluster specified
          by the value of primary_cluster_id. Use 'local' for the Rubrik cluster that
          is hosting the current REST API session.
        name: primary_cluster_id
        required: false
        type: string
      - in: query
        description: Retrieve managed volumes with a name matching the provided name.
          The search type is infix.
        name: name
        required: false
        type: string
      - in: query
        description: Filter by ID of effective SLA domain
        name: effective_sla_domain_id
        required: false
        type: string
      - name: sort_by
        in: query
        description: 'Specifies the managed volume attribute to use in sorting the
          managed volume summary information. Performs an ASCII sort of the summary
          information using the specified attribute, in the order specified.

          Valid attributes are ''name'' and ''effectiveSlaDomainId'''
        required: false
        type: string
        enum:
        - name
      - in: query
        description: Sort order, either ascending or descending.
        name: sort_order
        required: false
        type: string
        enum:
        - asc
        - desc
      responses:
        '200':
          description: Summary information for managed volumes.
          schema:
            $ref: '#/definitions/ManagedVolumeSummaryListResponse'
    post:
      summary: Create a managed volume
      description: Create a managed volume.
      operationId: createManagedVolume
      tags:
      - /internal/managed_volume
      x-group: managed_volume
      parameters:
      - in: body
        description: Managed volume configuration.
        name: managed_volume_config
        required: true
        schema:
          $ref: '#/definitions/ManagedVolumeConfig'
      responses:
        '201':
          description: Details about the created nanaged volume.
          schema:
            $ref: '#/definitions/ManagedVolumeSummary'
  /internal/managed_volume/request/{id}:
    get:
      summary: Get managed volume async request status
      description: Get status of a managed volume async request.
      operationId: getManagedVolumeAsyncRequestStatus
      tags:
      - /internal/managed_volume
      x-group: managed_volume
      parameters:
      - in: path
        description: ID of the request.
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Status for the async request.
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
  /internal/managed_volume/snapshot/export:
    get:
      summary: Get summary information for all managed volume snapshot exports.
      description: Returns a list of summary information for all exports of all managed
        volume snapshots, sorted and filtered.
      operationId: queryManagedVolumeSnapshotExport
      tags:
      - /internal/managed_volume
      x-group: managed_volume
      parameters:
      - in: query
        description: Filter snapshot exports to those that belong to the managed volume
          with given id.
        name: source_managed_volume_id
        required: false
        type: string
      - in: query
        description: Filter snapshot exports to those that belong to the managed volume
          with given name using infix search.
        name: source_managed_volume_name
        required: false
        type: string
      - in: query
        name: sort_by
        description: 'Specifies the managed volume export attribute to use in sorting
          the managed volume summary information. Performs an ASCII sort of the summary
          information using the specified attribute, in the order specified.

          Valid attributes are ''status'', ''snapshotDate'', ''sourceManagedVolumeName'',
          ''exportedDate'''
        required: false
        type: string
        enum:
        - status
        - snapshotDate
        - sourceManagedVolumeName
        - exportedDate
      - in: query
        description: Sort order, either ascending or descending.
        name: sort_order
        required: false
        type: string
        enum:
        - asc
        - desc
      responses:
        '200':
          description: Returns summary information for snapshot exports.
          schema:
            $ref: '#/definitions/ManagedVolumeSnapshotExportSummaryListResponse'
  /internal/managed_volume/snapshot/export/{id}:
    delete:
      summary: Delete a managed volume snapshot export
      description: Delete a managed volume snapshot export.
      operationId: deleteManagedVolumeSnapshotExport
      tags:
      - /internal/managed_volume
      x-group: managed_volume
      parameters:
      - name: id
        in: path
        description: ID of snapshot export.
        required: true
        type: string
      responses:
        '204':
          description: Snapshot export sucessfully deleted.
  /internal/managed_volume/snapshot/{id}:
    delete:
      summary: Delete a managed volume snapshot
      description: Delete a managed volume snapshot
      operationId: deleteManagedVolumeSnapshot
      tags:
      - /internal/managed_volume
      x-group: managed_volume
      parameters:
      - name: id
        in: path
        description: ID of snapshot
        required: true
        type: string
      - name: location
        in: query
        description: Snapshot location to delete. Use **_local_** to delete all local
          snapshots and **_all_** to delete the snapshot in all locations. Defaults
          to **_all_** if not set.
        type: string
        enum:
        - all
        - local
      responses:
        '204':
          description: Snapshot sucessfully deleted
    get:
      summary: Get managed volume snapshot details
      description: Retrieve detailed information about a snapshot.
      operationId: getManagedVolumeSnapshot
      tags:
      - /internal/managed_volume
      x-group: managed_volume
      parameters:
      - in: path
        description: ID of snapshot
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Returns details about a snapshot
          schema:
            $ref: '#/definitions/ManagedVolumeSnapshotDetail'
  /internal/managed_volume/snapshot/{id}/browse:
    get:
      summary: Lists all files in Managed volume snapshot
      description: Lists all files and directories in a given path
      operationId: browseManagedVolumeSnapshot
      tags:
      - /internal/managed_volume
      x-group: managed_volume
      parameters:
      - in: path
        description: ID of snapshot
        name: id
        required: true
        type: string
      - in: query
        description: The absolute path of the starting point for the directory listing.
        name: path
        required: true
        type: string
      - in: query
        description: Starting position in the list of path entries contained in the
          query results, sorted by lexicographical order. The response includes the
          specified numbered entry and all higher numbered entries.
        name: offset
        required: false
        type: integer
        format: int32
      - in: query
        description: Maximum number of entries in the response.
        name: limit
        required: false
        type: integer
        format: int32
      responses:
        '200':
          description: List of files and directories at the specified path.
          schema:
            $ref: '#/definitions/BrowseResponseListResponse'
  /internal/managed_volume/snapshot/{id}/download:
    post:
      summary: Create a download managed volume snapshot from archival request
      description: Create a download managed volume snapshot from archival request.
      operationId: createDownloadManagedVolumeSnapshotFromCloud
      tags:
      - /internal/managed_volume
      x-group: managed_volume
      parameters:
      - in: path
        description: ID of snapshot
        name: id
        required: true
        type: string
      responses:
        '202':
          description: Status for the download request.
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
  /internal/managed_volume/snapshot/{id}/download_file:
    post:
      summary: Download file from Managed volume snapshot
      description: Create a download file request
      operationId: createManagedVolumeDownloadFileJob
      tags:
      - /internal/managed_volume
      x-group: managed_volume
      parameters:
      - in: path
        description: ID of Snapshot
        name: id
        required: true
        type: string
      - in: body
        description: Configuration for a download request
        name: config
        required: true
        schema:
          $ref: '#/definitions/ManagedVolumeDownloadFileJobConfig'
      responses:
        '202':
          description: Status for the file download request.
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
  /internal/managed_volume/snapshot/{id}/export:
    post:
      summary: Create a request to export a snapshot
      description: Export a managed volume snapshot as a share.
      operationId: exportSnapshot
      tags:
      - /internal/managed_volume
      x-group: managed_volume
      parameters:
      - name: id
        in: path
        description: ID of snapshot.
        required: true
        type: string
      - name: params
        in: body
        description: Export parameters.
        required: true
        schema:
          $ref: '#/definitions/ManagedVolumeExportConfig'
      responses:
        '202':
          description: Status for the export request.
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
  /internal/managed_volume/{id}:
    get:
      summary: Get details of a managed volume
      description: Details of a managed volume.
      operationId: getManagedVolume
      tags:
      - /internal/managed_volume
      x-group: managed_volume
      parameters:
      - in: path
        description: ID of the managed volume.
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Returns details about a managed volume.
          schema:
            $ref: '#/definitions/ManagedVolumeSummary'
    patch:
      summary: Update managed volume
      description: Update managed volume with specified properties.
      operationId: updateManagedVolume
      tags:
      - /internal/managed_volume
      x-group: managed_volume
      parameters:
      - in: path
        description: ID of managed volume.
        name: id
        required: true
        type: string
      - in: body
        description: Properties to update.
        name: update
        required: true
        schema:
          $ref: '#/definitions/ManagedVolumeUpdate'
      responses:
        '200':
          description: Return details about a managed volume.
          schema:
            $ref: '#/definitions/ManagedVolumeSummary'
    delete:
      summary: Delete a managed volume
      description: Delete a managed volume.
      operationId: deleteManagedVolume
      tags:
      - /internal/managed_volume
      x-group: managed_volume
      parameters:
      - in: path
        name: id
        description: ID of managed volume.
        required: true
        type: string
      - in: query
        description: Flag to indicate whether to convert snapshots of this managed
          volume to relics or to delete them.  Default is true.
        name: preserve_snapshots
        required: false
        type: boolean
      responses:
        '204':
          description: Managed volume sucessfully deleted.
  /internal/managed_volume/{id}/begin_snapshot:
    post:
      summary: Begin managed volume snapshot
      description: Opens the managed volume for writes. All writes to the managed
        volume until next end-snapshot call will be part of this snapshot.
      operationId: openWrites
      tags:
      - /internal/managed_volume
      x-group: managed_volume
      parameters:
      - name: id
        in: path
        description: ID of managed volume.
        required: true
        type: string
      responses:
        '204':
          description: The managed volume is opened for writes
  /internal/managed_volume/{id}/end_snapshot:
    post:
      summary: End managed volume snapshot
      description: Close a managed volume for writes. A snapshot will be created containing
        all writes since the last begin-snapshot call.
      operationId: closeWrites
      tags:
      - /internal/managed_volume
      x-group: managed_volume
      parameters:
      - name: id
        in: path
        description: ID of managed volume.
        required: true
        type: string
      - name: params
        in: body
        description: Snapshot parameters.
        required: false
        schema:
          $ref: '#/definitions/ManagedVolumeSnapshotConfig'
      responses:
        '200':
          description: Returns ID of a snapshot
          schema:
            $ref: '#/definitions/ManagedVolumeSnapshotSummary'
  /internal/managed_volume/{id}/reset:
    post:
      summary: Reset a managed volume
      description: Reset a managed volume to the last successful snapshot.
      operationId: resetManagedVolume
      tags:
      - /internal/managed_volume
      x-group: managed_volume
      parameters:
      - name: id
        in: path
        description: ID of managed volume
        required: true
        type: string
      responses:
        '202':
          description: Status for the async request.
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
  /internal/managed_volume/{id}/search:
    get:
      summary: Search for files in a managed volume
      description: Search a managed volume for files
      operationId: searchManagedVolume
      tags:
      - /internal/managed_volume
      x-group: managed_volume
      parameters:
      - in: path
        description: ID of the managed volume
        name: id
        required: true
        type: string
      - in: query
        description: The path query. Either path prefix or filename prefix.
        name: path
        required: true
        type: string
      responses:
        '200':
          description: Search results
          schema:
            $ref: '#/definitions/SearchResponseListResponse'
  /internal/managed_volume/{id}/snapshot:
    get:
      summary: Get summary information for snapshots of a managed volume.
      description: Returns a list of summary information for snapshots of a managed
        volume.
      operationId: queryManagedVolumeSnapshot
      tags:
      - /internal/managed_volume
      x-group: managed_volume
      parameters:
      - in: path
        description: ID of the managed volume.
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Returns summary information for snapshots.
          schema:
            $ref: '#/definitions/ManagedVolumeSnapshotSummaryListResponse'
  /internal/mssql/availability_group:
    get:
      summary: Get summary information for Microsoft SQL availability groups.
      description: Returns a list of summary information for Microsoft SQL availability
        groups.
      operationId: queryMssqlAvailabilityGroup
      tags:
      - mssql
      x-group: mssql_availability_group
      parameters:
      - in: query
        description: Filter by primary cluster.
        name: primary_cluster_id
        required: false
        type: string
      responses:
        '200':
          description: Returned if the query was successful.
          schema:
            $ref: '#/definitions/MssqlAvailabilityGroupSummaryListResponse'
  /internal/mssql/availability_group/{id}:
    get:
      summary: Get detailed information for a Microsoft SQL availability group.
      description: Returns a detailed view of a Microsoft SQL availability group.
      operationId: getMssqlAvailabilityGroup
      tags:
      - mssql
      x-group: mssql_availability_group
      parameters:
      - in: path
        description: ID of the Microsoft SQL availability group to fetch.
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Returned if the query was successful.
          schema:
            $ref: '#/definitions/MssqlAvailabilityGroupDetail'
    patch:
      summary: Update a Microsoft SQL availability group.
      description: Update a Microsoft SQL availability group with the specified properties.
      operationId: updateMssqlAvailabilityGroup
      tags:
      - mssql
      x-group: mssql_availability_group
      parameters:
      - in: path
        description: ID of the Microsoft SQL availability group to update.
        name: id
        required: true
        type: string
      - in: body
        description: Properties to update.
        name: update_properties
        required: true
        schema:
          $ref: '#/definitions/MssqlAvailabilityGroupUpdate'
      responses:
        '200':
          description: Returned if the update was successful
          schema:
            $ref: '#/definitions/MssqlAvailabilityGroupDetail'
  /internal/mssql/db/bulk:
    patch:
      summary: Update multiple Microsoft SQL databases.
      description: Update multiple Microsoft SQL databases with the specified properties
      operationId: bulkUpdateMssqlDb
      tags:
      - /internal/mssql
      x-group: mssql
      parameters:
      - in: body
        description: Properties to update for each database.
        name: dbs_update_properties
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/MssqlDbUpdateId'
      responses:
        '200':
          description: Returns a detailed view of all updated databases.
          schema:
            type: array
            items:
              $ref: '#/definitions/MssqlDbDetail'
  /internal/mssql/db/count:
    get:
      summary: Get a count of Microsoft SQL databases.
      description: Returns a count of Microsoft SQL databases.
      operationId: countMssqlDb
      tags:
      - /internal/mssql
      x-group: mssql
      parameters:
      - name: root_id
        in: query
        description: Include only instances that belong to this root.
        required: false
        type: string
      responses:
        '200':
          description: Returned if the query was successful.
          schema:
            $ref: '#/definitions/ProtectedObjectsCount'
  /internal/mssql/db/defaults:
    get:
      summary: Get the current default properties for Microsoft SQL databases
      description: The default properties are Log Backup Frequency (minutes) and Log
        Backup Retention (Days). New databases added to the Rubrik system will be
        given these values as their defaults.
      operationId: getDefaultDbProperties
      tags:
      - /internal/mssql
      x-group: mssql
      parameters: []
      responses:
        '200':
          description: Returns the current default properties.
          schema:
            $ref: '#/definitions/MssqlDbDefaults'
    patch:
      summary: Update the default properties for Microsoft SQL databases.
      description: The default properties are Log Backup Frequency (minutes) and Log
        Backup Retention (Days). New databases added to the Rubrik system will be
        given these values as their defaults.
      operationId: updateDefaultDbProperties
      tags:
      - /internal/mssql
      x-group: mssql
      parameters:
      - in: body
        description: Updated default properties.
        name: default_properties
        required: true
        schema:
          $ref: '#/definitions/MssqlDbDefaults'
      responses:
        '200':
          description: Returns the updated defaultp properties.
          schema:
            $ref: '#/definitions/MssqlDbDefaults'
  /internal/mssql/db/recoverable_range/download/{id}:
    get:
      summary: Get the deletion status of downloaded recoverable ranges.
      description: Get the details of the progress made in deleting recoverable ranges.
        The recoverable ranges to delete are those specified by the DELETE request
        to /mssql/db/{id}/recoverable_range/download which yielded the response with
        the job id.
      operationId: getDeleteMssqlDbRecoverableRangesStatus
      tags:
      - /internal/mssql
      x-group: mssql
      parameters:
      - in: path
        description: Job ID of the deletion for which to check progress.
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Returns the progress made in deleting the recoverable ranges.
          schema:
            $ref: '#/definitions/InternalJobInstanceDetail'
  /internal/mssql/db/sla/{id}/assign:
    post:
      summary: Assign mssql databases to an SLA Domain.
      description: Assign mssql databases to the specified SLA Domain. Note that this
        assignment can fail, as at most one database in each availability group can
        be protected. When the force parameter is set to true, currently-protected
        databases may be unprotected in order allow protecting the specified databases.
        Assignment is not guaranteed to succeed even when force is set to true. For
        example, a request to protect two databases in the same availability group
        will always fail.
      operationId: mssqlDbAssignToSla
      tags:
      - /internal/mssql
      x-group: mssql
      parameters:
      - in: path
        description: ID of the SLA Domain.
        name: id
        required: true
        type: string
      - in: body
        description: SLA assignment information
        name: assignment_info
        required: true
        schema:
          $ref: '#/definitions/MssqlDbSlaAssignment'
      responses:
        '200':
          description: Databases have been assigned to the specified SLA Domain.
          schema:
            $ref: '#/definitions/MssqlDbSlaAssignStatus'
        '409':
          description: Databases could not be assigned due to availability group conflicts.
            The response will contain the databaseToUnprotect (if any) that needs
            to be unprotected in order for the SLA assignment to succeed. If force
            is not set to true, this will be empty.
          schema:
            allOf:
            - $ref: '#/definitions/RequestFailedException'
            - type: object
              properties:
                slaConflictInformation:
                  $ref: '#/definitions/MssqlDbSlaConflictInfo'
  /internal/mssql/db/sla/{id}/availability_group_conflicts:
    post:
      summary: Get availability group conflicts that would occur under the specified
        SLA Domain assignment.
      description: Checks for conflicts under an assignment of Microsoft SQL databases
        to the specified SLA Domain.
      operationId: mssqlDbAvailabilityGroupConflicts
      tags:
      - /internal/mssql
      x-group: mssql
      parameters:
      - in: path
        description: ID of the SLA Domain.
        name: id
        required: true
        type: string
      - in: body
        description: SLA assignment information.
        name: assignment_info
        required: true
        schema:
          $ref: '#/definitions/MssqlDbSlaConflictCheck'
      responses:
        '200':
          description: Availability group information. The response will contain the
            databaseToUnprotect (if any) that needs to be unprotected in order for
            the SLA assignment to succeed. If force is not set to true, this will
            be empty.
          schema:
            $ref: '#/definitions/MssqlDbSlaConflictInfo'
  /internal/mssql/db/{id}/compatible_instance:
    get:
      summary: Get compatible instances for the recovery of a Microsoft SQL database.
      description: Returns all compatible instances for export for a given recovery
        time.
      operationId: getCompatibleMssqlInstances
      tags:
      - /internal/mssql
      x-group: mssql
      parameters:
      - in: path
        description: ID of the Microsoft SQL database.
        name: id
        required: true
        type: string
      - in: query
        description: Time to recover to. The date-time string should be in ISO8601
          format, such as "2016-01-01T01:23:45.678Z".
        name: recovery_time
        required: true
        type: string
        format: date-time
      - in: query
        description: Recovery type.
        name: recovery_type
        required: true
        type: string
        enum:
        - Mount
        - Export
        - Restore
      responses:
        '200':
          description: Returns summary information for all compatible Microsoft SQL
            instances for export.
          schema:
            $ref: '#/definitions/MssqlInstanceSummaryListResponse'
  /internal/mssql/db/{id}/recoverable_range/download:
    delete:
      summary: Delete downloaded recoverable ranges of a Microsoft SQL database.
      description: Deletes all local snapshots and logs that have previously been
        downloaded. A begin and/or end time can be provided to delete only the downloaded
        snapshots and logs that fall within the window. The time is relative to when
        the snapshot or log backup was originally taken, not downloaded. Parts of
        the window may not be deleted if certain log files must be kept to preserve
        times outside the window. Data is deleted in the background. To check the
        status of the deletion, poll /mssql/db/recoverable_range/downloaded/{id}.
      operationId: deleteDownloadedMssqlDbRecoverableRanges
      tags:
      - /internal/mssql
      x-group: mssql
      parameters:
      - in: path
        description: ID of the Microsoft SQL database.
        name: id
        required: true
        type: string
      - in: query
        description: Delete only the downloaded snapshots and logs taken after this
          time. The date-time string should be in ISO8601 format, such as "2016-01-01T01:23:45.678".
        name: after_time
        required: false
        type: string
        format: date-time
      - in: query
        description: Delete only the downloaded snapshots and logs taken before this
          time. The date-time string should be in ISO8601 format, such as "2016-01-01T01:23:45.678".
        name: before_time
        required: false
        type: string
        format: date-time
      responses:
        '202':
          description: Returns the job ID to check the progress of deleting the downloaded
            snapshots and logs.
          schema:
            $ref: '#/definitions/JobScheduledResponse'
  /internal/mssql/db/{id}/restore_estimate:
    get:
      summary: Get a size estimate for a restore or export.
      description: Provides an estimate of resources needed for the specified restore
        or export operation.
      operationId: mssqlRestoreEstimate
      tags:
      - /internal/mssql
      x-group: mssql
      parameters:
      - in: path
        description: ID of the Microsoft SQL database.
        name: id
        required: true
        type: string
      - in: query
        description: Time to recover to, in ISO8601 date-time format, such as "2016-01-01T01:23:45.678".
          Either this or the LSN must be specified.
        name: time
        type: string
        format: date-time
      - in: query
        description: LSN to recover to. Either this or time must be specified.
        name: lsn
        type: string
      - in: query
        description: Recovery fork GUID of LSN to recover to. Has meaning only when
          lsn is specified.
        name: recovery_fork_guid
        type: string
      responses:
        '200':
          description: Returns the esimate for a restore or export to the specified
            recovery point.
          schema:
            $ref: '#/definitions/MssqlRestoreEstimateResult'
  /internal/mssql/db/{id}/restore_files:
    get:
      summary: Get all database files to be restored.
      description: Provides a list of database files to be restored for the specified
        restore or export operation.
      operationId: mssqlGetRestoreFiles
      tags:
      - /internal/mssql
      x-group: mssql
      parameters:
      - in: path
        description: ID of the Microsoft SQL database.
        name: id
        required: true
        type: string
      - in: query
        description: Time to recover to, in ISO8601 date-time format, such as "2016-01-01T01:23:45.678".
          Either this or the LSN must be specified.
        name: time
        type: string
        format: date-time
      - in: query
        description: LSN to recover to. Either this or time must be specified.
        name: lsn
        type: string
      - in: query
        description: Recovery fork GUID of LSN to recover to. Has meaning only when
          lsn is specified.
        name: recovery_fork_guid
        type: string
      responses:
        '200':
          description: Database files to be restored.
          schema:
            type: array
            items:
              description: Database file to be restored
              $ref: '#/definitions/MssqlRestoreFile'
  /internal/mssql/db/{id}/snappable_id:
    get:
      summary: Get the snappableId for a Microsoft SQL database.
      description: Returns the snappableId for a Microsoft SQL database.
      operationId: mssqlGetSnappableId
      tags:
      - /internal/mssql
      x-group: mssql
      parameters:
      - in: path
        description: ID of the Microsoft SQL database.
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Returns the snappableId.
          schema:
            $ref: '#/definitions/MssqlSnappableId'
  /internal/mssql/instance/count:
    get:
      summary: Get a count of Microsoft SQL instances.
      description: Returns a count of all Microsoft SQL instances.
      operationId: countMssqlInstance
      tags:
      - /internal/mssql
      x-group: mssql
      parameters: []
      responses:
        '200':
          description: Returned if the query was successful
          schema:
            $ref: '#/definitions/CountResponse'
  /internal/node:
    get:
      summary: Get list of nodes in this Rubrik cluster.
      description: Returns the list of all Rubrik nodes.
      operationId: getNodes
      tags:
      - /internal/node
      x-group: node
      parameters: []
      responses:
        '200':
          description: List of nodes
          schema:
            type: array
            items:
              description: listResponse
              $ref: '#/definitions/NodeStatus'
  /internal/node/{id}:
    get:
      summary: Detailed view of a Rubrik node
      description: Returns the complete view of a Rubrik node
      operationId: getNode
      tags:
      - /internal/node
      x-group: node
      parameters:
      - in: path
        description: ID of the node to load
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Detailed information about the node
          schema:
            $ref: '#/definitions/NodeInfo'
  /internal/node/{id}/cpu_cores_count:
    get:
      summary: Get CPU Cores count of a node
      description: CPU cores count of a node.
      operationId: getNodeCpuCoresCount
      tags:
      - /internal/node
      x-group: node
      parameters:
      - in: path
        description: Id of the node to get cpu cores count for.
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Count of cpu cores for the given node
          schema:
            $ref: '#/definitions/CountResponse'
  /internal/node/{id}/io_stats:
    get:
      summary: Iops and IO throughput of the node
      description: Iops and IO throughput of the node
      operationId: getNodeIo
      tags:
      - /internal/node
      x-group: node
      parameters:
      - in: path
        description: Id of node to fetch IO throughput stats for
        name: id
        required: true
        type: string
      - in: query
        description: 'Optional time range parameter for the timeseries, eg: -1h, -1min,
          etc. Default value is -6h'
        name: range
        required: false
        type: string
      responses:
        '200':
          description: IO stats for the node
          schema:
            $ref: '#/definitions/IoStat'
  /internal/node/{id}/stats:
    get:
      summary: Fetches time ranged statistics about the specified Node
      description: Statistics about the specific Node given a time range. One hour
        is default
      operationId: getNodeStats
      tags:
      - /internal/node
      x-group: node
      parameters:
      - in: path
        description: Id of the node to fetch statistics for
        name: id
        required: true
        type: string
      - in: query
        description: 'Range for timeseries. eg: -1h, -1min, etc. Default value is
          -1h'
        name: range
        required: false
        type: string
      responses:
        '200':
          description: Statistics about the node
          schema:
            $ref: '#/definitions/NodeStats'
  /internal/node/{id}/vlan:
    post:
      summary: Adds or re-ips a VLAN on the node
      description: Edits tagged interfaces on the node by VLAN.
      operationId: configureInterface
      tags:
      - /internal/node
      x-group: node
      parameters:
      - in: path
        description: Id of node to add VLAN interface to
        name: id
        required: true
        type: string
      - in: body
        description: Network interface to apply
        name: network_interface
        required: true
        schema:
          $ref: '#/definitions/NetworkInterface'
      responses:
        '204':
          description: Successfully added Interfaced to the node
        '409':
          description: Returned if ips conflict
          schema:
            $ref: '#/definitions/RequestFailedException'
    delete:
      summary: Drops a VLAN interface from the node
      description: Drops the specified VLAN interface from the node.
      operationId: deleteInterface
      tags:
      - /internal/node
      x-group: node
      parameters:
      - in: path
        description: Id of node to remove VLAN interface from
        name: id
        required: true
        type: string
      - in: query
        description: VLAN
        name: vlan
        required: true
        type: integer
        format: int32
      responses:
        '204':
          description: Successfully dropped VLAN interface
        '409':
          description: Returned if interface does not exist
          schema:
            $ref: '#/definitions/RequestFailedException'
    get:
      summary: Get configured VLAN interfaces on node
      description: Retrieves the VLANs configured on node and their ip configurations
      operationId: getInterfaces
      tags:
      - /internal/node
      x-group: node
      parameters:
      - in: path
        description: Id of node to remove retrieve VLAN interface info for
        name: id
        required: true
        type: string
      - in: query
        description: Will retrieve info for a specific VLAN if passed in
        name: vlan
        required: false
        type: integer
        format: int32
      responses:
        '200':
          description: VLAN configurations for the node
          schema:
            type: array
            items:
              description: listResponse
              $ref: '#/definitions/NodeNetworkInterface'
  /internal/node_management/cluster/{id}/failure_tolerance:
    get:
      summary: Get Rubrik cluster failure tolerance information
      description: Return various numbers of component failures allowed in the Rubrik
        cluster under which the cluster remains fully functional.
      operationId: failureToleranceStatus
      tags:
      - /internal/node_management
      x-group: internal_node_management
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Failures can be tolerated in the cluster
          schema:
            $ref: '#/definitions/FailureToleranceStatus'
  /internal/node_management/cluster_ip:
    get:
      summary: Get a list of a cluster's always-available Ips
      description: Get a list of a cluster's always-available Ips
      operationId: getClusterIps
      tags:
      - /internal/node_management
      x-group: internal_node_management
      parameters: []
      responses:
        '200':
          description: TODO
          schema:
            type: array
            items:
              type: string
    post:
      summary: Modify the list of cluster IPs
      description: Modify the list of cluster IPs
      operationId: updateClusterIps
      tags:
      - /internal/node_management
      x-group: internal_node_management
      parameters:
      - in: body
        description: New list of cluster IPs
        name: new_cluster_ips
        required: true
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/ClusterIpRec'
  /internal/node_management/cluster_ip/{ip}:
    get:
      summary: Get the node which owns the cluster IP address
      description: Returns the node which owns provided cluster IP address. Returns
        'NOT OWNED' if the IP is not owned by any node
      operationId: getIpOwner
      tags:
      - /internal/node_management
      x-group: internal_node_management
      parameters:
      - in: path
        description: cluster IP for which owner needs to be fetched
        name: ip
        required: true
        type: string
      responses:
        '200':
          description: Returns the node which owns provided cluster IP address
          schema:
            type: string
        '409':
          description: Returned if IP address is invalid
          schema:
            $ref: '#/definitions/RequestFailedException'
  /internal/node_management/hostname:
    get:
      summary: hostname supporting the current server
      description: hostname supporting the current server
      operationId: getHostname
      tags:
      - /internal/node_management
      x-group: internal_node_management
      parameters: []
      responses:
        '200':
          description: TODO
          schema:
            type: string
  /internal/node_management/is_bootstrapped:
    get:
      summary: Returns whether this machine is bootstrapped to a cluster
      description: Check whether this machine has been bootstrapped
      operationId: isBootstrapped
      tags:
      - /internal/node_management
      x-group: internal_node_management
      parameters: []
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/BooleanResponse'
      x-unauthenticated: true
  /internal/node_management/management_ip:
    get:
      summary: Get the management ip's netmask and gateway for this machine's cluster
      description: Get the management ip's netmask and gateway for this machine's
        cluster
      operationId: getManagementIpConfig
      tags:
      - /internal/node_management
      x-group: internal_node_management
      parameters: []
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/ClusterIpConfig'
  /internal/node_management/proxy_config:
    get:
      summary: Get existing proxy settings
      description: Get existing proxy settings
      operationId: getProxyConfigs
      tags:
      - /internal/node_management
      x-group: internal_node_management
      parameters: []
      responses:
        '200':
          description: Returns existing proxy config
          schema:
            $ref: '#/definitions/ProxyConfigGet'
    patch:
      summary: Update proxy config
      description: Update proxy config
      operationId: updateProxyConfig
      tags:
      - /internal/node_management
      x-group: internal_node_management
      parameters:
      - in: body
        description: Proxy url and port
        name: proxy
        required: true
        schema:
          $ref: '#/definitions/ProxyConfig'
      responses:
        '200':
          description: Returned if proxy successfully configured
          schema:
            $ref: '#/definitions/ProxyConfigGet'
    delete:
      summary: Delete existing proxy configuration
      description: Delete an existing proxy that was configured
      operationId: deleteProxyConfig
      tags:
      - /internal/node_management
      x-group: internal_node_management
      parameters: []
      responses:
        '204':
          description: Returned if proxy successfully deleted
        '404':
          description: Returned if no proxy configured
          schema:
            type: string
  /internal/node_management/replace_node:
    get:
      summary: REQUIRES SUPPORT TOKEN - Returns the status of the corresponding replaceNode
        request
      description: REQUIRES SUPPORT TOKEN - Returns the status of the corresponding
        replaceNode request. A support token is required for this operation.
      operationId: replaceNodeStatus
      tags:
      - /internal/node_management
      x-group: internal_node_management
      parameters:
      - in: query
        description: Replace node request id
        name: request_id
        required: true
        type: integer
        format: int64
      responses:
        '200':
          description: Replace node request status
          schema:
            $ref: '#/definitions/ReplaceNodeStatus'
    post:
      summary: REQUIRES SUPPORT TOKEN - Replace a removed node with a new node, keeping
        HDDs and IPs
      description: REQUIRES SUPPORT TOKEN - Replace a removed node with a new node.
        A support token is required for this operation.
      operationId: replaceNode
      tags:
      - /internal/node_management
      x-group: internal_node_management
      parameters:
      - in: body
        description: IDs of new node and node to replace
        name: replace_node_config
        required: true
        schema:
          $ref: '#/definitions/ReplaceNodeConfig'
      responses:
        '200':
          description: Request handle to check replace node request status
          schema:
            $ref: '#/definitions/ReplaceNodeRec'
  /internal/node_management/reset:
    post:
      summary: Issues a reset to the current node
      description: Issues a reset to the current node
      operationId: resetNode
      tags:
      - /internal/node_management
      x-group: internal_node_management
      parameters: []
      responses:
        '204':
          description: Successfully started reseting the node
      x-unauthenticated: true
  /internal/node_management/route_config:
    get:
      summary: Get all existing route configs
      description: Lists all existing route configs
      operationId: getRoutes
      tags:
      - /internal/node_management
      x-group: internal_node_management
      parameters: []
      responses:
        '200':
          description: Returns list of existing route configs
          schema:
            type: array
            items:
              $ref: '#/definitions/RouteConfig'
        '409':
          description: Returned if no nodes were found
          schema:
            $ref: '#/definitions/RequestFailedException'
    post:
      summary: Add a new route config to all hosts
      description: Add a new route config to all hosts
      operationId: addRoute
      tags:
      - /internal/node_management
      x-group: internal_node_management
      parameters:
      - in: body
        description: Network, netmask and gateway
        name: route_config
        required: true
        schema:
          $ref: '#/definitions/RouteConfig'
      responses:
        '201':
          description: Returned if route successfully added to node table
          schema:
            $ref: '#/definitions/RouteConfig'
        '409':
          description: Returned if no nodes were found
          schema:
            $ref: '#/definitions/RequestFailedException'
    delete:
      summary: Delete an existing route
      description: Delete an existing route that was configured
      operationId: deleteRoute
      tags:
      - /internal/node_management
      x-group: internal_node_management
      parameters:
      - in: body
        description: Network and netmask
        name: route_config
        required: true
        schema:
          $ref: '#/definitions/RouteDeletionConfig'
      responses:
        '204':
          description: Returned if route successfully deleted from node table
        '409':
          description: Retuned if nodes were found
          schema:
            $ref: '#/definitions/RequestFailedException'
        '404':
          description: Returned if route not found
          schema:
            type: string
  /internal/node_management/{id}/fetch_package:
    get:
      summary: REQUIRES SUPPORT TOKEN - Return fetch upgrade package request status
      description: REQUIRES SUPPORT TOKEN - Returns the status of the fetch upgrade
        package request, which is initiated by fetch_package POST. A support token
        is required for this operation.
      operationId: fetchUpgradeStatus
      tags:
      - /internal/node_management
      x-group: internal_node_management
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Returns status of fetch upgrade package request
          schema:
            $ref: '#/definitions/FetchUpgradeStatus'
    post:
      summary: REQUIRES SUPPORT TOKEN - Initiate download of rubrik upgrade package
        from http server
      description: REQUIRES SUPPORT TOKEN - Fetch a package for software upgrade from
        a remote http server given the url, use the node_management/{id}/upgrade endpoint
        to initiate upgrade. A support token is required for this operation.
      operationId: fetchUpgrade
      tags:
      - /internal/node_management
      x-group: internal_node_management
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        type: string
      - in: body
        description: URL of location where the upgrade package is hosted
        name: url
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Successfully initiated download of rubrik upgrade package.
            To poll for status, use the GET endpoint
        '409':
          description: Download request failed because the previous request is still
            in process
          schema:
            $ref: '#/definitions/RequestFailedException'
  /internal/node_management/{id}/upgrade:
    get:
      summary: REQUIRES SUPPORT TOKEN - Get upgrade request status
      description: REQUIRES SUPPORT TOKEN - Returns the status of the upgrade request,
        which is initiated by the POST endpoint. A support token is required for this
        operation.
      operationId: upgradeStatus
      tags:
      - /internal/node_management
      x-group: internal_node_management
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Returns status of upgrade request
          schema:
            $ref: '#/definitions/UpgradeStatus'
    post:
      summary: REQUIRES SUPPORT TOKEN - Initiate upgrade using package downloaded
        from remote http server
      description: REQUIRES SUPPORT TOKEN - Runs upgrade with the package downloaded
        from remote http server, use the node_management/{id}/fetch_upgrade endpoint
        to fetch upgrade package. A support token is required for this operation.
      operationId: upgrade
      tags:
      - /internal/node_management
      x-group: internal_node_management
      parameters:
      - in: path
        description: ID of the Rubrik cluster or *me* for self
        name: id
        required: true
        type: string
      - in: body
        description: ' Force defaults to be false. Allows software to use an upgrade
          package of lower or equal version, which is not allowed by if force is not
          specified'
        name: upgrade_request
        schema:
          $ref: '#/definitions/UpgradeRequest'
      responses:
        '204':
          description: Successfully initiated upgrade. To poll for status, use the
            GET endpoint
          schema: {}
        '409':
          description: Previous upgrade request in process
          schema:
            $ref: '#/definitions/RequestFailedException'
  /internal/nutanix/cluster:
    get:
      summary: Get list of Nutanix clusters
      description: Retrieve information for each managed Nutanix cluster
      operationId: queryNutanixCluster
      tags:
      - /internal/nutanix/cluster
      x-group: nutanix_cluster
      parameters:
      - in: query
        description: Limits the information to the Rubrik cluster specified by the
          value of primary_cluster_id. Use 'local' for the Rubrik cluster that is
          hosting the current REST API session.
        name: primary_cluster_id
        required: false
        type: string
      - in: query
        description: Determines whether or not the status field is populated. Populating
          this field involves issuing a call to the Nutanix cluster itself, which
          may not be performant. Defaults to false.
        name: should_get_status
        required: false
        type: boolean
      responses:
        '200':
          description: Summary information for managed Nutanix clusters.
          schema:
            $ref: '#/definitions/NutanixClusterSummaryListResponse'
    post:
      summary: Add Nutanix cluster
      description: Create a Nutanix cluster object by providing an address and account
        credentials for Prism. Initiates an asynchronous job to establish a connection
        with the cluster and retrieve all metadata. Use GET /nutanix_cluster/{id}/status
        to check status.
      operationId: createNutanixCluster
      tags:
      - /internal/nutanix/cluster
      x-group: nutanix_cluster
      parameters:
      - in: body
        description: IP address, natural ID of added cluster (since Prism central
          can manage multiple clusters), and credentials for Prism.
        name: nutanix_cluster_config
        required: true
        schema:
          $ref: '#/definitions/NutanixClusterConfig'
      responses:
        '202':
          description: Status for the refresh request.
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
  /internal/nutanix/cluster/request/{id}:
    get:
      summary: Get Nutanix cluster async request
      description: Get details about a Nutanix cluster-related async request.
      operationId: getNutanixClusterAsyncRequestStatus
      tags:
      - /internal/nutanix/cluster
      x-group: nutanix_cluster
      parameters:
      - in: path
        description: ID of the request
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Status for the async request.
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
  /internal/nutanix/cluster/{id}:
    get:
      summary: Get the details of a Nutanix Cluster
      description: Retrieve detailed information for a Nutanix Cluster object.
      operationId: getNutanixCluster
      tags:
      - /internal/nutanix/cluster
      x-group: nutanix_cluster
      parameters:
      - in: path
        description: ID of the Nutanix Cluster.
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Details for a Nutanix Cluster object.
          schema:
            $ref: '#/definitions/NutanixClusterDetail'
    patch:
      summary: Patch Nutanix cluster
      description: Patch the host, credentials, and/or CA certs of the specified Nutanix
        cluster object.
      operationId: patchNutanixCluster
      tags:
      - /internal/nutanix/cluster
      x-group: nutanix_cluster
      parameters:
      - in: path
        description: ID of the Nutanix cluster.
        name: id
        required: true
        type: string
      - in: body
        description: Object containing updated Nutanix cluster information.
        name: patch_properties
        required: true
        schema:
          $ref: '#/definitions/NutanixClusterPatch'
      responses:
        '200':
          description: Detail of the updated Nutanix cluster object.
          schema:
            $ref: '#/definitions/NutanixClusterDetail'
    delete:
      summary: Remove Nutanix cluster
      description: Initiates an asynchronous job to remove a Nutanix cluster object.
        The Nutanix cluster cannot have VMs mounted through the Rubrik cluster.
      operationId: deleteNutanixCluster
      tags:
      - /internal/nutanix/cluster
      x-group: nutanix_cluster
      parameters:
      - in: path
        description: ID of the Nutanix cluster to remove.
        name: id
        required: true
        type: string
      responses:
        '202':
          description: Status for the async request.
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
  /internal/nutanix/cluster/{id}/container:
    get:
      summary: Get list of containers on this cluster
      description: Query the nutanix cluster to get the list of containers, used for
        export purposes.
      operationId: getContainers
      tags:
      - /internal/nutanix/cluster
      x-group: nutanix_cluster
      parameters:
      - in: path
        description: ID of the Nutanix cluster
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Returns the ID and name of containers on the Nutanix cluster
          schema:
            $ref: '#/definitions/NutanixContainerListResponse'
  /internal/nutanix/cluster/{id}/refresh:
    post:
      summary: Refresh Nutanix cluster metadata
      description: Create a job to refresh the metadata for the specified Nutanix
        cluster
      operationId: createNutanixClusterRefresh
      tags:
      - /internal/nutanix/cluster
      x-group: nutanix_cluster
      parameters:
      - in: path
        description: ID of the Nutanix cluster
        name: id
        required: true
        type: string
      responses:
        '202':
          description: Status for the async request.
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
  /internal/nutanix/hierarchy/{id}:
    get:
      summary: Get summary of a hierarchy object
      description: Retrieve details for the specified hierarchy object.
      operationId: getNutanixHierarchyObject
      tags:
      - /internal/nutanix/hierarchy
      x-group: nutanix_hierarchy
      parameters:
      - in: path
        description: ID of the hierarchy object
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Details of the hierarchy object
          schema:
            $ref: '#/definitions/NutanixHierarchyObjectSummary'
  /internal/nutanix/hierarchy/{id}/children:
    get:
      summary: Get list of immediate descendant objects
      description: Retrieve the list of immediate descendant objects for the specified
        parent
      operationId: getNutanixHierarchyChildren
      tags:
      - /internal/nutanix/hierarchy
      x-group: nutanix_hierarchy
      parameters:
      - in: path
        description: ID of the parent Nutanix hierarchy object. To get top-level nodes,
          use **root** as the ID.
        name: id
        required: true
        type: string
      - in: query
        description: Filter by ID of effective SLA domain
        name: effective_sla_domain_id
        required: false
        type: string
      - in: query
        description: Filter by node object type
        name: object_type
        required: false
        type: string
      - in: query
        description: Filter by primary cluster ID, or **local**
        name: primary_cluster_id
        required: false
        type: string
      - in: query
        description: Filter by isRelic field of Nutanix VM hierarchy object. Return
          both relic and non-relic children if this query is not set.
        name: is_relic
        required: false
        type: boolean
      - name: limit
        in: query
        description: Limit the number of matches returned.
        required: false
        type: integer
        format: int32
        minimum: 0
      - name: offset
        in: query
        description: Ignore these many matches in the beginning.
        required: false
        type: integer
        format: int32
        minimum: 0
      - name: name
        in: query
        description: Search vm by vm name.
        required: false
        type: string
      - name: sla_assignment
        in: query
        description: Filter by SLA assignment type
        enum:
        - Derived
        - Direct
        - Unassigned
        required: false
        type: string
      - name: sort_by
        in: query
        description: Attribute to sort the results on
        required: false
        type: string
        enum:
        - effectiveSlaDomainName
        - name
        - descendantCount.cluster
        - descendantCount.vm
      - name: sort_order
        in: query
        description: Sort order, either ascending or descending
        required: false
        type: string
        enum:
        - asc
        - desc
      responses:
        '200':
          description: Summary list of descendant objects
          schema:
            $ref: '#/definitions/NutanixHierarchyObjectSummaryListResponse'
  /internal/nutanix/hierarchy/{id}/descendants:
    get:
      summary: Get list of descendant objects
      description: Retrieve the list of descendant objects for the specified parent
      operationId: getNutanixHierarchyDescendants
      tags:
      - /internal/nutanix/hierarchy
      x-group: nutanix_hierarchy
      parameters:
      - in: path
        description: ID of the parent Nutanix hierarchy object
        name: id
        required: true
        type: string
      - in: query
        description: Filter by ID of effective SLA domain
        name: effective_sla_domain_id
        required: false
        type: string
      - in: query
        description: Filter by node object type
        name: object_type
        required: false
        type: string
        enum:
        - cluster
        - vm
      - in: query
        description: Filter by primary cluster ID, or **local**
        name: primary_cluster_id
        required: false
        type: string
      - in: query
        description: Filter by isRelic field of Nutanix VM hierarchy object. Return
          both relic and non-relic children if this query is not set.
        name: is_relic
        required: false
        type: boolean
      - name: limit
        in: query
        description: Limit the number of matches returned.
        required: false
        type: integer
        format: int32
        minimum: 0
      - name: offset
        in: query
        description: Ignore these many matches in the beginning.
        required: false
        type: integer
        format: int32
        minimum: 0
      - name: name
        in: query
        description: Search vm by vm name.
        required: false
        type: string
      - name: sla_assignment
        in: query
        description: Filter by SLA assignment type
        enum:
        - Derived
        - Direct
        - Unassigned
        required: false
        type: string
      - name: sort_by
        in: query
        description: Attribute to sort the results on
        required: false
        type: string
        enum:
        - effectiveSlaDomainName
        - name
        - descendantCount.cluster
        - descendantCount.vm
      - name: sort_order
        in: query
        description: Sort order, either ascending or descending
        required: false
        type: string
        enum:
        - asc
        - desc
      responses:
        '200':
          description: Summary list of descendant objects
          schema:
            $ref: '#/definitions/NutanixHierarchyObjectSummaryListResponse'
  /internal/nutanix/vm:
    get:
      summary: Get list of Nutanix VMs
      description: Get summary of all the VMs
      operationId: queryNutanixVm
      tags:
      - /internal/nutanix/vm
      x-group: nutanix_vm
      parameters:
      - in: query
        description: Filter by ID of effective SLA domain
        name: effective_sla_domain_id
        required: false
        type: string
      - in: query
        description: Filter by primary cluster ID, or **local**
        name: primary_cluster_id
        required: false
        type: string
      - name: limit
        in: query
        description: Limit the number of matches returned.
        required: false
        type: integer
        format: int32
        minimum: 0
      - name: offset
        in: query
        description: Ignore these many matches in the beginning.
        required: false
        type: integer
        format: int32
        minimum: 0
      - name: is_relic
        in: query
        description: Filter by isRelic field of VM. Return both relic and non-relic
          VM if this query is not set.
        required: false
        type: boolean
      - name: name
        in: query
        description: Search vm by vm name.
        required: false
        type: string
      - name: sla_assignment
        in: query
        description: Filter by SLA assignment type
        enum:
        - Derived
        - Direct
        - Unassigned
        required: false
        type: string
      - name: sort_by
        in: query
        description: Attribute to sort the results on
        required: false
        type: string
        enum:
        - effectiveSlaDomainName
        - name
        - folderPath
        - infraPath
      - name: sort_order
        in: query
        description: Sort order, either ascending or descending
        required: false
        type: string
        enum:
        - asc
        - desc
      responses:
        '200':
          description: Get page summary about Nutanix virtual machine
          schema:
            $ref: '#/definitions/NutanixVmSummaryListResponse'
  /internal/nutanix/vm/request/{id}:
    get:
      summary: Get VM async request details
      description: Get details about a Nutanix VM-related async request.
      operationId: getNutanixVmAsyncRequestStatus
      tags:
      - /internal/nutanix/vm
      x-group: nutanix_vm
      parameters:
      - in: path
        description: ID of the request
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Status for the async request.
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
  /internal/nutanix/vm/snapshot/{id}:
    get:
      summary: Get VM snapshot details
      description: Retrieve detailed information about a snapshot.
      operationId: getNutanixSnapshot
      tags:
      - /internal/nutanix/vm
      x-group: nutanix_vm
      parameters:
      - in: path
        description: ID of snapshot
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Returns details about a snapshot
          schema:
            $ref: '#/definitions/NutanixVmSnapshotDetail'
    delete:
      summary: Delete VM snapshot
      description: Delete a snapshot by expiring it. Snapshot is expired only if it
        is a manual snapshot or a snapshot of an unprotected vm.
      operationId: deleteNutanixSnapshot
      tags:
      - /internal/nutanix/vm
      x-group: nutanix_vm
      parameters:
      - in: path
        description: ID of snapshot
        name: id
        required: true
        type: string
      - in: query
        description: Snapshot location to delete. Use **_local_** to delete all local
          snapshots and **_all_** to delete the snapshot in all locations.
        name: location
        required: true
        type: string
        enum:
        - all
        - local
      responses:
        '204':
          description: Snapshot successfully deleted.
  /internal/nutanix/vm/snapshot/{id}/browse:
    get:
      summary: Lists all files in VM snapshot
      description: Lists all files and directories in a given path
      operationId: browseNutanixSnapshot
      tags:
      - /internal/nutanix/vm
      x-group: nutanix_vm
      parameters:
      - in: path
        description: ID of snapshot
        name: id
        required: true
        type: string
      - in: query
        description: The absolute path of the starting point for the directory listing.
        name: path
        required: true
        type: string
      - in: query
        description: Starting position in the list of path entries contained in the
          query results, sorted by lexicographical order. The response includes the
          specified numbered entry and all higher numbered entries.
        name: offset
        required: false
        type: integer
        format: int32
      - in: query
        description: Maximum number of entries in the response.
        name: limit
        required: false
        type: integer
        format: int32
      responses:
        '200':
          description: List of files and directories at the specified path.
          schema:
            $ref: '#/definitions/BrowseResponseListResponse'
  /internal/nutanix/vm/snapshot/{id}/download:
    post:
      summary: Creates a download from archival request.
      description: Download a snapshot from archival.
      operationId: createDownloadSnapshotFromCloud
      tags:
      - /internal/nutanix/vm
      x-group: nutanix_vm
      parameters:
      - in: path
        description: ID of snapshot
        name: id
        required: true
        type: string
      responses:
        '202':
          description: Status for the download request.
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
  /internal/nutanix/vm/snapshot/{id}/download_file:
    post:
      summary: Download file from VM snapshot
      description: Create a download file request
      operationId: createNutanixDownloadFileJob
      tags:
      - /internal/nutanix/vm
      x-group: nutanix_vm
      parameters:
      - in: path
        description: ID of Snapshot
        name: id
        required: true
        type: string
      - in: body
        description: Configuration for a download request
        name: config
        required: true
        schema:
          $ref: '#/definitions/NutanixDownloadFileJobConfig'
      responses:
        '202':
          description: Status for the instant recover request.
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
  /internal/nutanix/vm/snapshot/{id}/export:
    post:
      summary: Export VM snapshot
      description: Export snapshot of a vm.
      operationId: createNutanixExport
      tags:
      - /internal/nutanix/vm
      x-group: nutanix_vm
      parameters:
      - in: path
        description: ID of snapshot
        name: id
        required: true
        type: string
      - in: body
        description: Configuration for the export request
        name: config
        required: true
        schema:
          $ref: '#/definitions/NutanixVmExportSnapshotJobConfig'
      responses:
        '202':
          description: Status for the export request.
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
  /internal/nutanix/vm/{id}:
    get:
      summary: Get VM details
      description: Detailed view of a Nutanix VM
      operationId: getNutanixVm
      tags:
      - /internal/nutanix/vm
      x-group: nutanix_vm
      parameters:
      - in: path
        description: ID of the Nutanix Virtual Machine.
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Return details about the Nutanix Virtual machine.
          schema:
            $ref: '#/definitions/NutanixVmDetail'
    patch:
      summary: Patch VM
      description: Patch VM with specified properties
      operationId: patchNutanixVm
      tags:
      - /internal/nutanix/vm
      x-group: nutanix_vm
      parameters:
      - in: path
        description: ID of Nutanix Virtual Machine
        name: id
        required: true
        type: string
      - in: body
        description: Properties to patch
        name: vm_patch_properties
        required: true
        schema:
          $ref: '#/definitions/NutanixVmPatch'
      responses:
        '200':
          description: Return details about Nutanix virtual machine.
          schema:
            $ref: '#/definitions/NutanixVmDetail'
  /internal/nutanix/vm/{id}/missed_snapshot:
    get:
      summary: Get details about missed snapshots for a VM
      description: Retrieve the time of the day when the snapshots were missed specific
        to a vm.
      operationId: nutanixMissedSnapshots
      tags:
      - /internal/nutanix/vm
      x-group: nutanix_vm
      parameters:
      - in: path
        description: ID of the vm
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Returns details about missed snapshots for a VM.
          schema:
            $ref: '#/definitions/MissedSnapshotListResponse'
  /internal/nutanix/vm/{id}/search:
    get:
      summary: Search for file in Nutanix VM
      description: Search for a file within the Nutanix Virtual Machine. Search via
        full path prefix or filename prefix.
      operationId: searchNutanixVm
      tags:
      - /internal/nutanix/vm
      x-group: nutanix_vm
      parameters:
      - in: path
        description: ID of the vm
        name: id
        required: true
        type: string
      - in: query
        description: The path query. Either path prefix or filename prefix.
        name: path
        required: true
        type: string
      responses:
        '200':
          description: Search results
          schema:
            $ref: '#/definitions/SearchResponseListResponse'
  /internal/nutanix/vm/{id}/snapshot:
    get:
      summary: Get list of snapshots of VM
      description: 'Retrieve the following information for all snapshots for a VM:
        ID, snapshot date, expiration date, type of source object, name of VM, type
        of snapshot, state of the cloud, level of consistency, name of snapshot VM,
        index state, total number of files, IDs of all replication location, IDs of
        all archival locations.'
      operationId: queryNutanixSnapshot
      tags:
      - /internal/nutanix/vm
      x-group: nutanix_vm
      parameters:
      - in: path
        description: ID of the vm
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Returns summary information for all snapshots.
          schema:
            $ref: '#/definitions/NutanixVmSnapshotSummaryListResponse'
    post:
      summary: Create on-demand VM snapshot
      description: Create an on-demand snapshot for the given VM ID
      operationId: createOnDemandNutanixBackup
      tags:
      - /internal/nutanix/vm
      x-group: nutanix_vm
      parameters:
      - in: path
        description: ID of the VM
        name: id
        required: true
        type: string
      - in: body
        description: Configuration for the on-demand backup.
        required: false
        name: config
        schema:
          $ref: '#/definitions/BaseOnDemandSnapshotConfig'
      responses:
        '202':
          description: Status for the backup request.
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
    delete:
      summary: Delete all snapshots of VM
      description: Delete all snapshots of a virtual machine
      operationId: deleteNutanixSnapshots
      tags:
      - /internal/nutanix/vm
      x-group: nutanix_vm
      parameters:
      - in: path
        description: Virtual machine ID
        name: id
        required: true
        type: string
      responses:
        '204':
          description: Snapshots successfully deleted.
  # Multi-tenancy endpoints not implemented or documented in 4.0.2
  # /organization: {}
  # /organization/{id}: {}
  # /organization/{id}/stats/average_storage_growth_per_day: {}
  # /organization/{id}/stats/total_storage_usage: {}
  /internal/principal_search:
    post:
      summary: Searches for security principals
      description: Searches for security principals using one or more independent
        queries. The result set is the union of the principals returned by each query.
      operationId: searchPrincipals
      tags:
      - /internal/principal_search
      x-group: principal_search
      parameters:
      - in: body
        name: search_request
        description: Search request to perform
        schema:
          $ref: '#/definitions/PrincipalSearchRequest'
        required: true
      responses:
        '200':
          description: Returns the list of matching principals
          schema:
            $ref: '#/definitions/PrincipalSummaryListResponse'
  /internal/replication/source:
    get:
      summary: Get summaries for all replication sources.
      description: Retrieve the ID, name, and address for each replication source.
      operationId: replicationSources
      tags:
      - /internal/replication
      x-group: data_location
      parameters: []
      responses:
        '200':
          description: Returns a list of replication sources.
          schema:
            $ref: '#/definitions/ReplicationSourceSummaryListResponse'
  /internal/replication/source/{id}:
    get:
      summary: Get summary for a specific replication source.
      description: Retrieve the ID, name, and address for a specified replication
        source.
      operationId: getReplicationSource
      tags:
      - /internal/replication
      x-group: data_location
      parameters:
      - in: path
        description: ID of a replication source.
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Returns summary details for the specified replication source.
          schema:
            $ref: '#/definitions/ReplicationSourceSummary'
    delete:
      summary: 'REQUIRES SUPPORT TOKEN: Remove a replication source.'
      description: 'REQUIRES SUPPORT TOKEN: Remove a specified replication source
        from this Rubrik cluster. A support token is required for this operation'
      operationId: deleteReplicationSource
      tags:
      - /internal/replication
      x-group: data_location
      parameters:
      - in: path
        description: ID of the replication source to be removed.
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Successfully removed replication source with ID of <sourceClusterUuid>.
          schema:
            $ref: '#/definitions/DeleteReplicationSourceSummary'
  /internal/replication/target:
    get:
      summary: Get summary of current replication target.
      description: Retrieve the ID, name, and address for the current replication
        target.
      operationId: replicationTargets
      tags:
      - /internal/replication
      x-group: data_location
      parameters: []
      responses:
        '200':
          description: Summary of current replication target.
          schema:
            $ref: '#/definitions/ReplicationTargetSummaryListResponse'
    post:
      summary: Configure a replication target
      description: 'Provide an address, network setup, username, and password to configure
        and enable a replication target. Network setup must be either ''NAT'' or ''Private
        Network''. WARNING: This will fail if there is already an existing replication
        target.'
      operationId: addReplicationTarget
      tags:
      - /internal/replication
      x-group: data_location
      parameters:
      - in: body
        description: Replication target definition
        name: definition
        required: true
        schema:
          $ref: '#/definitions/ReplicationTargetDefinition'
      responses:
        '201':
          description: Replication target at <targetClusterAddress> successfully added.
          schema:
            $ref: '#/definitions/ReplicationTargetSummary'
        '409':
          description: Returned if the request fails
          schema:
            $ref: '#/definitions/RequestFailedException'
  /internal/replication/target/{id}:
    get:
      summary: Get summary for the replication target.
      description: Retrieve the ID, name, and address of the replication target.
      operationId: getReplicationTarget
      tags:
      - /internal/replication
      x-group: data_location
      parameters:
      - in: path
        description: ID of the replication target.
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Returns summary details for the replication target..
          schema:
            $ref: '#/definitions/ReplicationTargetSummary'
    delete:
      summary: Remove the replication target.
      description: Remove the replication target from this cluster.
      operationId: deleteReplicationTarget
      tags:
      - /internal/replication
      x-group: data_location
      parameters:
      - in: path
        description: ID of the replication target.
        name: id
        required: true
        type: string
      responses:
        '204':
          description: Successfully removed the replication target.
        '409':
          description: Returned if the request fails
          schema:
            $ref: '#/definitions/RequestFailedException'
    patch:
      summary: Update the replication target information.
      description: Update the setup information, address, username, and password for
        the replication target.
      operationId: updateReplicationTarget
      tags:
      - /internal/replication
      x-group: data_location
      parameters:
      - in: path
        description: ID of the replication target.
        name: id
        required: true
        type: string
      - in: body
        description: Object containing updated replication target information.
        name: update
        required: true
        schema:
          $ref: '#/definitions/ReplicationTargetDefinition'
      responses:
        '200':
          description: Returns summary of updated replication target.
          schema:
            $ref: '#/definitions/ReplicationTargetSummary'
  /internal/report:
    get:
      summary: Get summary information for all reports.
      description: Retrieve summary information for each report. Optionally, filter
        the retrieved information.
      operationId: queryReports
      tags:
      - /internal/report
      x-group: internal_report
      parameters:
      - name: report_type
        in: query
        description: Filter the returned reports based off the reports type
        required: false
        type: string
        enum:
        - Canned
        - Custom
      - name: search_text
        in: query
        description: Filter the returned reports based off their name
        required: false
        type: string
      - name: sort_attr
        in: query
        description: 'Sort the returned reports based off the specified attribute.
          Default: Name'
        required: false
        type: string
        enum:
        - Name
        - ReportType
      - name: sort_order
        in: query
        description: 'Order by which to sort the returned reports. Default: asc'
        required: false
        type: string
        enum:
        - asc
        - desc
      responses:
        '200':
          description: Summary information for reports.
          schema:
            $ref: '#/definitions/ReportSummaryListResponse'
    post:
      summary: Create a new report.
      description: Create a new report by specifying one of the report templates.
      operationId: createReport
      tags:
      - /internal/report
      x-group: internal_report
      parameters:
      - in: body
        description: Report name and Report template
        name: report_config
        required: true
        schema:
          $ref: '#/definitions/ReportCreate'
      responses:
        '201':
          description: Returned if report successfully created.
          schema:
            $ref: '#/definitions/ReportDetail'
  /internal/report/email_subscription/{subscription_id}:
    get:
      summary: Returns specific email subscription for a report.
      description: Returns the email subscription specified by subscription_id for
        the report it is a subscription of.
      operationId: getSingleEmailSubscription
      tags:
      - /internal/report
      x-group: internal_report
      parameters:
      - name: subscription_id
        in: path
        description: Id of the specific email seubscription to retrieve
        required: true
        type: string
      responses:
        '200':
          description: Specific email subscription summary.
          schema:
            type: object
            $ref: '#/definitions/EmailSubscriptionSummary'
    patch:
      summary: Updates a specific email subscription for a report.
      description: Updates the email subscription specified by subscription_id for
        the report it is a subscription of.
      operationId: updateEmailSubscription
      tags:
      - /internal/report
      x-group: internal_report
      parameters:
      - name: subscription_id
        in: path
        description: Id of the specific email seubscription to retrieve
        required: true
        type: string
      - name: subscribe_request
        in: body
        description: Definition of the updated email subscription.
        required: true
        schema:
          $ref: '#/definitions/EmailSubscriptionSummary'
      responses:
        '200':
          description: The updated email subscription summary.
          schema:
            type: object
            $ref: '#/definitions/EmailSubscriptionSummary'
    delete:
      summary: Deletes a specific email subscription for a report.
      description: Deletes the email subscription specified by subscription_id for
        the report it is a subscription of.
      operationId: deleteEmailSubscription
      tags:
      - /internal/report
      x-group: internal_report
      parameters:
      - name: subscription_id
        in: path
        description: Id of the specific email seubscription to retrieve
        required: true
        type: string
      responses:
        '204':
          description: Email subscription was successfully deleted.
  /internal/report/{id}:
    get:
      summary: Get information about a specific report.
      description: Get report details and update status
      operationId: getReport
      tags:
      - /internal/report
      x-group: internal_report
      parameters:
      - in: path
        description: ID of the report
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Return report details.
          schema:
            $ref: '#/definitions/ReportDetail'
    patch:
      summary: Update a specific report.
      description: Update a specific report. The report's name, chart parameters,
        filters and table can be updated. If successful, this will automatically trigger
        an async job to refresh the report content.
      operationId: updateReport
      tags:
      - /internal/report
      x-group: internal_report
      parameters:
      - in: path
        description: ID of the report
        name: id
        required: true
        type: string
      - in: body
        description: Report update config
        name: update_config
        required: true
        schema:
          $ref: '#/definitions/ReportUpdate'
      responses:
        '200':
          description: Returns the status of the job that was automatically triggered
            to refresh the report's content.
          schema:
            $ref: '#/definitions/ReportDetail'
    delete:
      summary: Delete a specific report.
      description: Delete a specific report specified by reportId
      operationId: deleteReport
      tags:
      - /internal/report
      x-group: internal_report
      parameters:
      - in: path
        description: ID of the report
        name: id
        required: true
        type: string
      responses:
        '204':
          description: Returned if report was deleted successfully.
  /internal/report/{id}/chart:
    get:
      summary: Get chart data for a report
      description: Retrieve chart data associated with the report specified by id
      operationId: getCharts
      tags:
      - /internal/report
      x-group: internal_report
      parameters:
      - in: path
        description: ID of the report
        name: id
        required: true
        type: string
      - in: query
        description: ID of the chart
        name: chart_id
        required: false
        type: string
      - in: query
        description: Maximum number of chart columns to return
        name: limit
        required: false
        type: integer
        format: int32
      responses:
        '200':
          description: Chart data for the report
          schema:
            type: array
            items:
              $ref: '#/definitions/ChartData'
  /internal/report/{id}/download_csv:
    get:
      summary: Get a CSV file for the report specified by id
      description: Get the link to a CSV file for a report. This is a synchronous
        operation.
      operationId: getCsvDownloadLink
      tags:
      - /internal/report
      x-group: internal_report
      parameters:
      - in: path
        description: ID of the report
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Download link of the requested CSV file.
          schema:
            type: string
  /internal/report/{id}/email_subscription:
    get:
      summary: Returns email subscriptions for a report.
      description: Returns all email subscriptions for the report specified by id.
      operationId: getEmailSubscriptions
      tags:
      - /internal/report
      x-group: internal_report
      parameters:
      - name: id
        in: path
        description: Id of the report to get email subscriptions for
        required: true
        type: string
      responses:
        '200':
          description: Summary of email subscriptions for the report specified by
            id.
          schema:
            type: array
            items:
              $ref: '#/definitions/EmailSubscriptionSummary'
    post:
      summary: Creates email subscription for a report.
      description: Creates an email subscription for the report specified by id.
      operationId: createEmailSubscription
      tags:
      - /internal/report
      x-group: internal_report
      parameters:
      - name: id
        in: path
        description: Id of the report to create an email subscription for.
        required: true
        type: string
      - name: subscribe_request
        in: body
        description: Definition of the email subscription to create.
        required: true
        schema:
          $ref: '#/definitions/EmailSubscriptionCreate'
      responses:
        '200':
          description: Summary of email subscriptions for the report specified by
            id.
          schema:
            type: object
            $ref: '#/definitions/EmailSubscriptionSummary'
  /internal/report/{id}/refresh:
    post:
      summary: Begins to refresh the data associated with a report.
      description: Begins to refresh the data associated with the report specified
        by id. This should be used following calls to the various report patch endpoints
        in order to trigger the data update.
      operationId: refreshReportData
      tags:
      - /internal/report
      x-group: internal_report
      parameters:
      - name: id
        in: path
        description: Id of the report to refresh
        required: true
        type: string
      responses:
        '202':
          description: Returns the status of the refresh data request
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
  /internal/report/{id}/table:
    get:
      summary: Gets the table associated with the report specified by id
      description: Retrieve table data for a specific report
      operationId: getTable
      tags:
      - /internal/report
      x-group: internal_report
      parameters:
      - in: path
        description: ID of the report
        name: id
        required: true
        type: string
      - in: query
        description: Maximum number of table rows to return.
        name: limit
        required: false
        type: integer
        format: int32
      - in: query
        description: Sort the returned table based off the specified attribute.
        name: sort_attr
        required: false
        type: string
        enum:
        - ObjectName
        - ObjectType
        - Location
        - ClusterLocation
        - SlaDomain
        - TaskType
        - TaskStatus
        - Hour
        - Day
        - Month
        - Quarter
        - Year
        - QueuedTime
        - StartTime
        - EndTime
        - Duration
        - DataTransferred
        - LogicalDataProtected
        - DataStored
        - DedupRatio
        - LogicalDedupRatio
        - DataReductionPercent
        - LogicalDataReductionPercent
        - TaskCount
        - SuccessfulTasks
        - CanceledTasks
        - FailedTasks
        - RunningTasks
        - AverageDuration
        - ObjectCount
        - TotalLocalStorage
        - TotalReplicaStorage
        - TotalArchiveStorage
        - LocalStorageGrowth
        - ArchiveStorageGrowth
        - ReplicaStorageGrowth
        - ProtectedOn
        - InComplianceCount
        - NonComplianceCount
        - TotalSnapshots
        - MissedSnapshots
        - LocalSnapshots
        - ReplicaSnapshots
        - ArchiveSnapshots
        - LastSnapshot
      - in: query
        name: sort_order
        description: 'Order by which to sort the returned table. Default: asc'
        required: false
        type: string
        enum:
        - asc
        - desc
      - in: query
        name: after_id
        description: Fetches all rows after given id.
        required: false
        type: string
      - in: query
        name: search_value
        description: Search table data by object name.
        required: false
        type: string
      - in: query
        name: sla_domain_id
        description: Filter table data on SLA domain id.
        required: false
        type: string
      - in: query
        name: task_type
        description: Filter table data on task type.
        required: false
        type: string
      - in: query
        name: task_status
        description: Filter table data on task status.
        required: false
        type: string
      - in: query
        name: object_type
        description: Filter table data on object type.
        required: false
        type: string
      - in: query
        name: compliance_status
        description: Filter table data on compliance status.
        required: false
        type: string
      - in: query
        name: cluster_location
        description: Filter table data on cluster location.
        required: false
        type: string
      responses:
        '200':
          description: Table data for the report
          schema:
            $ref: '#/definitions/TableData'
  /internal/search:
    get:
      summary: Search for a file within the given managed ID of a Virtual Machine
        or Fileset or Host
      description: Search for a file within a given VM or Host. Search via full path
        prefix or filename prefix.
      operationId: searchQuery
      tags:
      - /internal/search
      x-group: search
      parameters:
      - in: query
        description: Managed ID of the object that is searched. It has to be either
          a Virtual Machine or Fileset or Host.
        name: managed_id
        required: true
        type: string
      - in: query
        description: The query string. Either path prefix or filename prefix
        name: query_string
        required: true
        type: string
      responses:
        '200':
          description: Search results
          schema:
            $ref: '#/definitions/SearchResponseListResponse'
  /internal/sla_domain/conflicts:
    get:
      deprecated: true
      summary: Finding managed entities with SLA Domain conflicts.
      description: Find managed entities that have a conflict with the SLA Domain
        assignment that is derived from a specified entity. For managed entities that
        derive an assignment from the specified entity, this call finds conflicts
        caused by an individual assignment, and conflicts caused by deriving assignments
        from more than one source.
      operationId: getSlaConflicts
      tags:
      - /internal/sla_domain
      x-group: sla_domain
      parameters:
      - in: query
        description: ID of the managed entity that is the source of the derived SLA
          Domain assignment. All entities that derive an SLA Domain assignment from
          the specified managed entity are checked for conflicts.
        name: managed_id
        required: true
        type: string
      responses:
        '200':
          description: List of conflicts found in managed entities that derive an
            assignment from the specified managed entity.
          schema:
            $ref: '#/definitions/ProtectionDetailListResponse'
  /internal/sla_domain/{id}/assign:
    post:
      summary: Assign managed entities to an SLA Domain synchronously.
      description: Assign managed entities to the specified SLA Domain. The assignment
        event runs synchronously.
      operationId: assignToSlaAndWaitForJob
      tags:
      - /internal/sla_domain
      x-group: sla_domain
      parameters:
      - in: path
        description: ID of the SLA Domain.
        name: id
        required: true
        type: string
      - in: body
        description: A comma-separated list of the IDs of the managed entities being
          assigned to the SLA Domain.
        name: assignment_info
        required: true
        schema:
          $ref: '#/definitions/SlaDomainAssignmentInfo'
      responses:
        '204':
          description: Assigned managed entities to the specified SLA Domain.
  /internal/smtp_instance:
    post:
      summary: Add smtp instances
      description: Add smtp instances
      operationId: createSmtpInstance
      tags:
      - /internal/smtp_instance
      x-group: smtp_instance
      parameters:
      - in: body
        description: smtp instance
        name: instance
        required: true
        schema:
          $ref: '#/definitions/SmtpInstanceDefinition'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/SmtpInstanceDetail'
    get:
      summary: Get summary of all smtp instances
      description: Get summary of all smtp instances
      operationId: querySmtpInstance
      tags:
      - /internal/smtp_instance
      x-group: smtp_instance
      parameters: []
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/SmtpInstanceDetailListResponse'
  /internal/smtp_instance/send_test_email:
    post:
      summary: send email
      description: Send email to admin users if toEmailIds is empty
      operationId: sendTestEmail
      tags:
      - /internal/smtp_instance
      x-group: smtp_instance
      parameters:
      - in: body
        description: send email params
        name: email_ids
        required: true
        schema:
          $ref: '#/definitions/SendEmailParams'
      responses:
        '204':
          description: Email sent
  /internal/smtp_instance/{id}:
    get:
      summary: Details of a smtp instance
      description: ''
      operationId: getSmtpInstance
      tags:
      - /internal/smtp_instance
      x-group: smtp_instance
      parameters:
      - in: path
        description: ID of the smtp instance to be fetched
        name: id
        required: true
        type: string
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/SmtpInstanceDetail'
    delete:
      summary: Delete a smtp instance
      description: ''
      operationId: deleteSmtpInstance
      tags:
      - /internal/smtp_instance
      x-group: smtp_instance
      parameters:
      - in: path
        description: ID of the smtp instance to be deleted
        name: id
        required: true
        type: string
      responses:
        '204':
          description: SMTP instance deleted
    patch:
      summary: update specifications for sending email
      description: update specifications for sending email
      operationId: updateSmtpInstance
      tags:
      - /internal/smtp_instance
      x-group: smtp_instance
      parameters:
      - in: path
        description: ID of the smtp instance to be deleted
        name: id
        required: true
        type: string
      - in: body
        description: smtp instances
        name: instance
        required: true
        schema:
          $ref: '#/definitions/UpdateSmtpInstanceDefinition'
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/SmtpInstanceDetail'
  /internal/snapshot/archive_garbage_collect_status:
    post:
      summary: REQUIRES SUPPORT TOKEN - Check whether snapshots have been GC''d on
        archive
      description: REQUIRES SUPPORT TOKEN - Check whether snapshots have been GC''d
        on archive. A support token is required for this operation.
      operationId: snapshotArchiveGarbageCollectionStatus
      tags:
      - /internal/snapshot
      x-group: internal_snapshot
      parameters:
      - in: body
        description: List of snapshot IDs and location ID to check if GC'd
        name: config
        required: true
        schema:
          $ref: '#/definitions/InternalSnapshotArchiveGarbageCollectStatusConfig'
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/InternalGarbageCollectStatusResult'
  /internal/snapshot/corrupt_chain:
    post:
      summary: REQUIRES SUPPORT TOKEN - Corrupt an incremental snapshot by redirecting
        its base pointer.
      description: REQUIRES SUPPORT TOKEN- Corrupt an incremental snapshot by redirecting
        its base pointer. CAUTION - This request races with Reverse and Expire, so
        care must be taken to disable these jobs or stop services (on all nodes).
        A support token is required for this operation.
      operationId: corruptSnapshotChain
      tags:
      - /internal/snapshot
      x-group: internal_snapshot
      parameters:
      - in: body
        description: Configuration for the snapshot corruption
        name: config
        required: true
        schema:
          $ref: '#/definitions/CorruptSnapshotChainConfig'
      responses:
        '200':
          description: TODO
          schema:
            type: string
  /internal/snapshot/expire:
    post:
      summary: REQUIRES SUPPORT TOKEN - Expire a snapshot
      description: REQUIRES SUPPORT TOKEN - Will mark the snapshot as expired. A support
        token is required for this operation.
      operationId: internalExpireSnapshot
      tags:
      - /internal/snapshot
      x-group: internal_snapshot
      parameters:
      - in: body
        description: ID of the Snapshot that needs to be expired locally
        name: config
        required: true
        schema:
          $ref: '#/definitions/InternalExpireSnapshotConfig'
      responses:
        '200':
          description: Return the expire job instance id on success
          schema:
            type: string
        '404':
          description: Returned if snapshot does not exist
          schema:
            type: string
        '409':
          description: Returned if expire snapshot request fails
          schema:
            $ref: '#/definitions/RequestFailedException'
  /internal/snapshot/garbage_collect_status:
    post:
      summary: REQUIRES SUPPORT TOKEN - Check whether snapshots have been GC''d
      description: REQUIRES SUPPORT TOKEN - Check whether snapshots have been GC''d.
        A support token is required for this operation.
      operationId: snapshotGarbageCollectionStatus
      tags:
      - /internal/snapshot
      x-group: internal_snapshot
      parameters:
      - in: body
        description: List of snapshot IDs to check if GC'd
        name: config
        required: true
        schema:
          $ref: '#/definitions/InternalSnapshotGarbageCollectStatusConfig'
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/InternalGarbageCollectStatusResult'
  /internal/snapshot/{id}/diagnostic:
    get:
      summary: REQUIRES SUPPORT TOKEN - Returns the diagnostic info of a snapshot
      description: REQUIRES SUPPORT TOKEN - It returns some diagnostic info of a snapshot,
        right now only compression type is returned. A support token is required for
        this operation.
      operationId: getSnapshotDiagnosticInfo
      tags:
      - /internal/snapshot
      x-group: internal_snapshot
      parameters:
      - in: path
        description: ID of the Snapshot to get info from
        name: id
        required: true
        type: string
      - in: query
        description: Snappable id of target object
        name: snappable_id
        required: true
        type: string
      responses:
        '200':
          description: Returns storage stats for a snapshot
          schema:
            $ref: '#/definitions/SnapshotDiagnosticInfo'
  /internal/snapshot/{id}/storage/stats:
    get:
      summary: REQUIRES SUPPORT TOKEN - Returns storage stats for a snapshot
      description: REQUIRES SUPPORT TOKEN - It returns storage stats for a snapshot.
        This end point is not supposed to be ever exposed. A support token is required
        for this operation.
      operationId: getSnapshotStorageStats
      tags:
      - /internal/snapshot
      x-group: internal_snapshot
      parameters:
      - in: path
        description: ID of the Snapshot to get storage stats from
        name: id
        required: true
        type: string
      - in: query
        description: Filter by ID of effective SLA domain
        name: snappable_id
        required: true
        type: string
      responses:
        '200':
          description: Returns storage stats for a snapshot
          schema:
            $ref: '#/definitions/SnapshotStorageStats'
  /internal/stats/archival/bandwidth/time_series:
    get:
      summary: Get the bandwidth of the archival location
      description: Gets the bandwidth of the archival location. If data location ID
        is not provided, returns the sum over all archival locations.
      operationId: archivalBandwidth
      tags:
      - /internal/stats
      x-group: stats
      parameters:
      - in: query
        description: Data location ID
        name: data_location_id
        required: false
        type: string
      - in: query
        description: 'Range for timeseries. eg: -1h, -1min, etc. Default value is
          -1h.'
        name: range
        required: false
        type: string
      responses:
        '200':
          description: Returns a timeSeries depicting bytes per second
          schema:
            type: array
            items:
              $ref: '#/definitions/TimeStat'
  /internal/stats/available_storage:
    get:
      summary: Get available storage in cluster
      description: Get available storage in cluster.
      operationId: availableStorage
      tags:
      - /internal/stats
      x-group: stats
      parameters: []
      responses:
        '200':
          description: 'Returns an object with attribute: name(String), key(String),
            value(String), frequencyInMin(Integer), lastUpdateTime(Date)'
          schema:
            $ref: '#/definitions/OfflineStatSummary'
  /internal/stats/average_storage_growth_per_day:
    get:
      summary: Get average storage growth per day
      description: Get average storage growth per day.
      operationId: averageStorageGrowthPerDay
      tags:
      - /internal/stats
      x-group: stats
      parameters: []
      responses:
        '200':
          description: Returns an object with attribute 'bytes'(Long).
          schema:
            $ref: '#/definitions/StorageGrowth'
  /internal/stats/cloud_storage:
    get:
      summary: Get storage used on cloud for all snapshots
      description: Get storage used on cloud for all snapshots.
      operationId: cloudStorage
      tags:
      - /internal/stats
      x-group: stats
      parameters: []
      responses:
        '200':
          description: 'Returns an object with attribute: name(String), key(String),
            value(String), frequencyInMin(Integer), lastUpdateTime(Date)'
          schema:
            $ref: '#/definitions/OfflineStatSummary'
  /internal/stats/cross_compression:
    get:
      summary: Get compression stats for cross increments
      description: Get compression stats for cross increments.
      operationId: crossCompression
      tags:
      - /internal/stats
      x-group: stats
      parameters: []
      responses:
        '200':
          description: 'Returns an object with attribute: name(String), key(String),
            value(String), frequencyInMin(Integer), lastUpdateTime(Date)'
          schema:
            $ref: '#/definitions/OfflineStatSummary'
  /internal/stats/data_location/usage:
    get:
      summary: Get usage details of al data locations
      description: Get usage details from all data locations
      operationId: dataLocationsUsage
      tags:
      - /internal/stats
      x-group: stats
      parameters: []
      responses:
        '200':
          description: Get a list with data location usage information.
          schema:
            $ref: '#/definitions/DataLocationUsageListResponse'
  /internal/stats/logical_ingest/time_series:
    get:
      summary: Get timeseries on logical data ingestion
      description: Get timeseries on logical data ingestion.
      operationId: logicalIngest
      tags:
      - /internal/stats
      x-group: stats
      parameters: []
      responses:
        '200':
          description: Returns a timeSeries depicting bytes per second.
          schema:
            type: array
            items:
              $ref: '#/definitions/TimeStat'
  /internal/stats/per_mount_storage/{id}:
    get:
      summary: Get storage footprint on rubrik for a given mount
      description: Get storage footprint on rubrik for a given mount.
      operationId: perMountStorage
      tags:
      - /internal/stats
      x-group: stats
      parameters:
      - in: path
        description: Mount ID
        name: id
        required: true
        type: string
      responses:
        '200':
          description: 'Returns an object with attribute: name(String), key(String),
            value(String), frequencyInMin(Integer), lastUpdateTime(Date)'
          schema:
            $ref: '#/definitions/OfflineStatSummary'
  /internal/stats/per_vm_storage:
    get:
      summary: Get total storage consumed by each vm
      description: Get total storage storage consumed by each vm sorted by storage.
        If a vm's storage is zero, it is not present in the list
      operationId: allVmStorageStats
      tags:
      - /internal/stats
      x-group: stats
      parameters: []
      responses:
        '200':
          description: 'Returns a list of objects with attribute: id(String),logicalBytes(Long),
            ingestedBytes(Long), exclusivePhysicalBytes(Long), sharedPhysicalBytes(Long),
            indexStorageBytes(Long)'
          schema:
            $ref: '#/definitions/VmStorageStatsListResponse'
  /internal/stats/per_vm_storage/{vm_id}:
    get:
      summary: Storage consumed by this vm
      description: storage storage consumed by this vm
      operationId: perVmStorageStats
      tags:
      - /internal/stats
      x-group: stats
      parameters:
      - in: path
        description: Virtual Machine ID
        name: vm_id
        required: true
        type: string
      responses:
        '200':
          description: 'Returns an objects with attribute: id(String),logicalBytes(Long),
            ingestedBytes(Long), exclusivePhysicalBytes(Long), sharedPhysicalBytes(Long),
            indexStorageBytes(Long)'
          schema:
            $ref: '#/definitions/VmStorageStats'
  /internal/stats/physical_ingest/time_series:
    get:
      summary: Get timeseries on physical data ingestion
      description: Get timeseries on physical data ingestion
      operationId: physicalIngest
      tags:
      - /internal/stats
      x-group: stats
      parameters:
      - in: query
        description: 'Range for timeseries. eg: -1h, -1min, etc. Default value is
          -1h.'
        name: range
        required: false
        type: string
      responses:
        '200':
          description: Returns a timeSeries depicting bytes per second.
          schema:
            type: array
            items:
              $ref: '#/definitions/TimeStat'
  /internal/stats/physical_ingest_per_day/time_series:
    get:
      summary: Get a timeseries on physical data ingestion per day
      description: Get a timeseries on physical data ingestion per day.
      operationId: physicalIngestPerDay
      tags:
      - /internal/stats
      x-group: stats
      parameters:
      - in: query
        description: 'Range for timeseries. eg: -1h, -1min, etc. Default value is
          -1h.'
        name: range
        required: false
        type: string
      responses:
        '200':
          description: Returns a timeSeries depicting bytes per second.
          schema:
            type: array
            items:
              $ref: '#/definitions/TimeStat'
  /internal/stats/physical_storage:
    get:
      summary: Get total physical storage being used in the system
      description: Get total Physical storage being used in the system.
      operationId: physicalStorage
      tags:
      - /internal/stats
      x-group: stats
      parameters: []
      responses:
        '200':
          description: 'Returns an object with attribute: name(String), key(String),
            value(String), frequencyInMin(Integer), lastUpdateTime(Date)'
          schema:
            $ref: '#/definitions/OfflineStatSummary'
  /internal/stats/protected_primary_storage:
    get:
      summary: Get protected primary storage
      description: Get protected primary storage.
      operationId: protectedPrimarySnapshotStorage
      tags:
      - /internal/stats
      x-group: stats
      parameters: []
      responses:
        '200':
          description: 'Returns an object with attribute: name(String), key(String),
            value(String), frequencyInMin(Integer), lastUpdateTime(Date)'
          schema:
            $ref: '#/definitions/OfflineStatSummary'
  /internal/stats/replication/incoming/time_series:
    get:
      summary: Get a timeseries of total incoming bandwidth from the replication clusters.
      description: Get the total incoming bandwidth from the replication clusters
      operationId: replicationBandwidthIncoming
      tags:
      - /internal/stats
      x-group: stats
      parameters:
      - in: query
        description: 'Range for timeseries. eg: -1h, -1min, etc. Default value is
          -1h.'
        name: range
        required: false
        type: string
      responses:
        '200':
          description: TimeSeries depicting bytes per second
          schema:
            type: array
            items:
              $ref: '#/definitions/TimeStat'
  /internal/stats/replication/outgoing/time_series:
    get:
      summary: Get the total outgoing bandwidth to the replication clusters
      description: Get the total outgoing bandwidth to the replication clusters.
      operationId: replicationBandwidthOutgoing
      tags:
      - /internal/stats
      x-group: stats
      parameters:
      - in: query
        description: 'Range for timeseries. eg: -1h, -1min, etc. Default value is
          -1h.'
        name: range
        required: false
        type: string
      responses:
        '200':
          description: TimeSeries depicting bytes per second
          schema:
            type: array
            items:
              $ref: '#/definitions/TimeStat'
  /internal/stats/runway_remaining:
    get:
      summary: Get the number of days remaining before the system fills up
      description: Get the number of days remaining before the system fills up.
      operationId: runwayRemaining
      tags:
      - /internal/stats
      x-group: stats
      parameters: []
      responses:
        '200':
          description: Returns an object with attribute 'days'(Long)
          schema:
            $ref: '#/definitions/Runway'
  /internal/stats/sla_domain_storage:
    get:
      summary: Get total storage for all the SLA domains
      description: Get total storage for all the SLA domains.
      operationId: totalSlaDomainStorage
      tags:
      - /internal/stats
      x-group: stats
      parameters: []
      responses:
        '200':
          description: 'Returns an object with attribute: name(String), key(String),
            value(String), frequencyInMin(Integer), lastUpdateTime(Date)'
          schema:
            $ref: '#/definitions/OfflineStatSummary'
  /internal/stats/sla_domain_storage/time_series:
    get:
      summary: Get a timeseries of storage growth for the given SLA domain
      description: Get a timeseries of storage growth timeseries for the given SLA
        domain.
      operationId: slaDomainStorageTimeseries
      tags:
      - /internal/stats
      x-group: stats
      parameters:
      - in: query
        description: SLA Domain ID
        name: id
        required: true
        type: string
      - in: query
        description: 'Range for timeseries. eg: -1h, -1min, etc. Default value is
          -1h.'
        name: range
        required: false
        type: string
      responses:
        '200':
          description: Returns a timeSeries depicting bytes per second.
          schema:
            type: array
            items:
              $ref: '#/definitions/TimeStat'
  /internal/stats/sla_domain_storage/{id}:
    get:
      summary: Get storage used on cloud for the given SLA domain
      description: Get storage used on cloud for the given SLA domain.
      operationId: slaDomainStorage
      tags:
      - /internal/stats
      x-group: stats
      parameters:
      - in: path
        description: SLA Domain ID
        name: id
        required: true
        type: string
      responses:
        '200':
          description: 'Returns an object with attribute: name(String), key(String),
            value(String), frequencyInMin(Integer), lastUpdateTime(Date)'
          schema:
            $ref: '#/definitions/OfflineStatSummary'
  /internal/stats/snapshot_ingest/time_series:
    get:
      summary: Get a timeseries of snapshots being ingested at a given time instance
      description: Get a timeseries of snapshots being ingested at a given time instance.
      operationId: snapshotIngest
      tags:
      - /internal/stats
      x-group: stats
      parameters: []
      responses:
        '200':
          description: Returns a timeSeries depicting bytes per second
          schema:
            type: array
            items:
              $ref: '#/definitions/TimeStat'
  /internal/stats/snapshot_storage/ingested:
    get:
      summary: Get ingested storage for all snapshots
      description: Get ingested storage for all snapshots.
      operationId: ingestedSnapshotStorage
      tags:
      - /internal/stats
      x-group: stats
      parameters: []
      responses:
        '200':
          description: 'Returns an object with attribute: name(String), key(String),
            value(String), frequencyInMin(Integer), lastUpdateTime(Date)'
          schema:
            $ref: '#/definitions/OfflineStatSummary'
  /internal/stats/snapshot_storage/live:
    get:
      summary: Get live snapshot storage for all snapshots
      description: Get live snapshot storage for all snapshots.
      operationId: liveSnapshotStorage
      tags:
      - /internal/stats
      x-group: stats
      parameters: []
      responses:
        '200':
          description: 'Returns an object with attribute: name(String), key(String),
            value(String), frequencyInMin(Integer), lastUpdateTime(Date)'
          schema:
            $ref: '#/definitions/OfflineStatSummary'
  /internal/stats/snapshot_storage/logical:
    get:
      summary: Get logical storage for all snapshots
      description: Get logical storage for all snapshots.
      operationId: logicalSnapshotStorage
      tags:
      - /internal/stats
      x-group: stats
      parameters: []
      responses:
        '200':
          description: 'Returns an object with attribute: name(String), key(String),
            value(String), frequencyInMin(Integer), lastUpdateTime(Date)'
          schema:
            $ref: '#/definitions/OfflineStatSummary'
  /internal/stats/snapshot_storage/physical:
    get:
      summary: Get physical storage for all snapshots
      description: Get physical storage for all snapshots.
      operationId: physicalSnapshotStorage
      tags:
      - /internal/stats
      x-group: stats
      parameters: []
      responses:
        '200':
          description: 'Returns an object with attribute: name(String), key(String),
            value(String), frequencyInMin(Integer), lastUpdateTime(Date)'
          schema:
            $ref: '#/definitions/OfflineStatSummary'
  /internal/stats/streams/count:
    get:
      summary: Get the number of concurent streams
      description: Get the number of concurent streams.
      operationId: streams
      tags:
      - /internal/stats
      x-group: stats
      parameters: []
      responses:
        '200':
          description: Returns a total number of concurent streams
          schema:
            $ref: '#/definitions/CountResponse'
  /internal/stats/system_storage:
    get:
      summary: Get entire storage info about TotalStorage, AvailableStorage, ReservedStorage
        and UsedStorage
      description: Get entire storage info about TotalStorage, AvailableStorage, ReservedStorage
        and UsedStorage.
      operationId: systemStorage
      tags:
      - /internal/stats
      x-group: stats
      parameters: []
      responses:
        '200':
          description: 'Returns an object with attribute: total(Long), used(Long),
            available(Long), lastUpdateTime(Date)'
          schema:
            $ref: '#/definitions/SystemStorageStats'
  /internal/stats/total_physical_storage/time_series:
    get:
      summary: Get a timeseries of total physical storage growth
      description: Get a timeseries of total physical storage growth.
      operationId: totalPhysicalStorageTimeseries
      tags:
      - /internal/stats
      x-group: stats
      parameters:
      - in: query
        description: 'Range for timeseries. eg: -1h, -1min, etc. Default value is
          -1h.'
        name: range
        required: true
        type: string
      responses:
        '200':
          description: Returns a timeSeries depicting bytes per second.
          schema:
            type: array
            items:
              $ref: '#/definitions/TimeStat'
  /internal/stats/total_replication_storage:
    get:
      summary: Get total storage including local vm storage replicated across targets
        and also remote vm storage on premise
      description: Get Total storage including local vm storage replicated across
        targets and also remote vm storage on premise.
      operationId: totalReplicationStorage
      tags:
      - /internal/stats
      x-group: stats
      parameters: []
      responses:
        '200':
          description: Returns an object with replication storage stats.
          schema:
            $ref: '#/definitions/ReplicationStorage'
  /internal/stats/total_storage:
    get:
      summary: Get total storage in cluster
      description: Get total storage in cluster.
      operationId: totalStorage
      tags:
      - /internal/stats
      x-group: stats
      parameters: []
      responses:
        '200':
          description: 'Returns an object with attribute: name(String), key(String),
            value(String), frequencyInMin(Integer), lastUpdateTime(Date)'
          schema:
            $ref: '#/definitions/OfflineStatSummary'
  /internal/stats/unprotected_snappable_storage:
    get:
      summary: Get total storage for snappables that have snapshots but are currently
        not protected
      description: Get total storage for snappables that have snapshots but are currently
        not protected
      operationId: unprotectedSnappableStorage
      tags:
      - /internal/stats
      x-group: stats
      parameters: []
      responses:
        '200':
          description: 'Returns an object with attribute: name(String), key(String),
            value(String), frequencyInMin(Integer), lastUpdateTime(Date)'
          schema:
            $ref: '#/definitions/OfflineStatSummary'
  /internal/storage/array:
    get:
      summary: Summary of all storage arrays
      description: Retrieve the host IP and username for all storage arrays.
      operationId: queryStorageArrays
      tags:
      - /internal/storage/array
      x-group: storage_array
      parameters: []
      responses:
        '200':
          description: Storage arrays
          schema:
            $ref: '#/definitions/StorageArrayDetailListResponse'
    post:
      summary: Add a new storage array
      description: Add a new storage array
      operationId: addStorageArray
      tags:
      - /internal/storage/array
      x-group: storage_array
      parameters:
      - in: body
        description: JSON object for storage array definition.
        name: definition
        required: true
        schema:
          $ref: '#/definitions/StorageArrayDefinition'
      responses:
        '201':
          description: Returns the added storage array object.
          schema:
            $ref: '#/definitions/StorageArrayDetail'
  /internal/storage/array/{id}:
    get:
      summary: Get information about a specific storage array.
      description: Get information about a specific storage array.
      operationId: getStorageArray
      tags:
      - /internal/storage/array
      x-group: storage_array
      parameters:
      - in: path
        description: ID of the storage array.
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Returns JSON object containing information storage array.
          schema:
            $ref: '#/definitions/StorageArrayDetail'
    put:
      summary: Update a specific storage array
      description: Update the host ip, username, and/or password of given storage
        array.
      operationId: updateStorageArray
      tags:
      - /internal/storage/array
      x-group: storage_array
      parameters:
      - in: path
        description: ID of the storage array to update.
        name: id
        required: true
        type: string
      - in: body
        description: JSON object for storage array definition.
        name: definition
        required: true
        schema:
          $ref: '#/definitions/StorageArrayDefinition'
      responses:
        '200':
          description: Returns the updated storage array object.
          schema:
            $ref: '#/definitions/StorageArrayDetail'
    delete:
      summary: Remove a specific storage array.
      description: Remove a specific storage array.
      operationId: deleteStorageArrayById
      tags:
      - /internal/storage/array
      x-group: storage_array
      parameters:
      - in: path
        description: ID of the storage array to remove.
        name: id
        required: true
        type: string
      responses:
        '204':
          description: Successfully removed given storage array object.
  /internal/support/support_bundle:
    post:
      summary: Collect log files from the cluster
      description: To be used by Admin to collect necessary Rubrik's log files from
        all the nodes. Both event_id and reqeust_ids are optional. If nothing is specified,
        the whole support bundle is to be collected, if event_id is specified, the
        reqeuest_ids is ignored. If request id is specified, only collect logs related
        to the specific request, otherwise collect all the logs
      operationId: generateSupportBundle
      tags:
      - /internal/support
      x-group: support
      parameters:
      - in: body
        description: Either event id or request id list of the request to be collected,
          if both are provided, request id list would be ignored
        name: definitions
        required: false
        schema:
          $ref: '#/definitions/GenerateSupportBundleRequest'
      responses:
        '202':
          description: Returns the status of the create support bundle request
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
    get:
      summary: Get the status of generating support bundle
      description: Given a request ID for generate support bundle request, provide
        the status of the request. If the request is successful, the download link
        for the support bundle would be included.
      operationId: querySupportBundle
      tags:
      - /internal/support
      x-group: support
      parameters:
      - in: query
        description: The support bundle generation request
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Returns the status of given request
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
  /internal/support/tunnel:
    get:
      summary: 'ADMIN ONLY: Check support tunnel status'
      description: To be used by Admin to check status of the support tunnel
      operationId: tunnelStatus
      tags:
      - /internal/support
      x-group: support
      parameters: []
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/TunnelStatus'
    post:
      summary: 'ADMIN ONLY: Create SSH Tunnel for Support Access'
      description: To be used by Admin to open a SSH tunnel for support
      operationId: createTunnel
      tags:
      - /internal/support
      x-group: support
      parameters: []
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/TunnelStatus'
    delete:
      summary: 'ADMIN ONLY: Remove SSH Tunnel for Support Access'
      description: To be used by Admin to close an established SSH tunnel
      operationId: closeTunnel
      tags:
      - /internal/support
      x-group: support
      parameters: []
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/TunnelStatus'
  /internal/syslog:
    get:
      summary: Get configured Syslog Server export settings.
      description: Returns the list of all configured Syslog Server export settings.
      operationId: querySyslog
      tags:
      - /internal/syslog
      x-group: syslog
      parameters: []
      responses:
        '200':
          description: Information for all Syslog Server export settings.
          schema:
            $ref: '#/definitions/SyslogServerSettingsListResponse'
    post:
      summary: Configure new Syslog Server export settings.
      description: Configures new Syslog Server export settings to be used for Syslog
        export.
      operationId: configureSyslogServerSettings
      tags:
      - /internal/syslog
      x-group: syslog
      parameters:
      - in: body
        description: New Syslog Server export settings.
        name: syslog_settings
        required: true
        schema:
          $ref: '#/definitions/SyslogServerSettingsUpdate'
      responses:
        '201':
          description: Information for Syslog Server export settings.
          schema:
            $ref: '#/definitions/SyslogServerSettings'
  /internal/syslog/test:
    post:
      summary: Test Syslog Server export settings.
      description: Sends a test message using a given Syslog Server export settings.
      operationId: testSyslogServerExportSettings
      tags:
      - /internal/syslog
      x-group: syslog
      parameters:
      - in: body
        description: Syslog Server export settings.
        name: syslog_settings
        required: true
        schema:
          $ref: '#/definitions/SyslogServerSettingsUpdate'
      responses:
        '200':
          description: Syslog Server export settings were tested successfully.
          schema:
            $ref: '#/definitions/SyslogServerTestResult'
        '409':
          description: Syslog Server export settings test failed.
          schema:
            $ref: '#/definitions/RequestFailedException'
  /internal/syslog/{id}:
    get:
      summary: Get Syslog Server export settings for a configured Syslog Server.
      description: Gets the Syslog Server export settings of a configured Syslog Server
        with the given ID.
      operationId: getSyslogServerSettings
      tags:
      - /internal/syslog
      x-group: syslog
      parameters:
      - in: path
        description: The ID of Syslog Server export settings.
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Information for the Syslog Server export settings.
          schema:
            $ref: '#/definitions/SyslogServerSettings'
    patch:
      summary: Modify Syslog Server export settings.
      description: Modify the export settings for a single Syslog Server.
      operationId: updateSyslogServerSettings
      tags:
      - /internal/syslog
      x-group: syslog
      parameters:
      - in: path
        description: The ID of Syslog Server export settings.
        name: id
        required: true
        type: string
      - in: body
        description: Syslog Server export settings.
        name: syslog_settings
        required: true
        schema:
          $ref: '#/definitions/SyslogServerSettingsUpdate'
      responses:
        '200':
          description: Updated Syslog Server export settings.
          schema:
            $ref: '#/definitions/SyslogServerSettings'
    delete:
      summary: Delete Syslog Server export settings.
      description: Delete the Syslog Server export settings by specifying the settings
        ID.
      operationId: deleteSyslogServerSettings
      tags:
      - /internal/syslog
      x-group: syslog
      parameters:
      - in: path
        description: The ID of Syslog Server export settings.
        name: id
        required: true
        type: string
      responses:
        '204':
          description: Syslog Server export settings successfully deleted.
        '404':
          description: Syslog Server export settings not found.
          schema:
            type: string
  /internal/throttle:
    get:
      summary: Get the throttling settings
      description: Get the throttling settings.
      operationId: getThrottlingSettings
      tags:
      - /internal/throttle
      x-group: throttle
      parameters: []
      responses:
        '200':
          description: Returned when successfully retrieve throttling settings
          schema:
            $ref: '#/definitions/ThrottlingSettings'
    put:
      summary: Change the throttling settings
      description: Change the throttling settings. This request will completely replace
        the existing settings. So if a field is not specified, it will be cleared
        and will not be used for throttling.
      operationId: updateThrottlingSettings
      tags:
      - /internal/throttle
      x-group: throttle
      parameters:
      - in: body
        description: New throttling settings
        name: settings
        required: true
        schema:
          $ref: '#/definitions/ThrottlingSettings'
      responses:
        '200':
          description: Returned if successfully changed throttling settings
          schema:
            $ref: '#/definitions/ThrottlingSettings'
  /internal/unmanaged_object:
    get:
      summary: Get summary of all the objects with unmanaged snapshots
      description: Get summary of all the objects with unmanaged snapshots
      operationId: queryUnmanagedObject
      tags:
      - /internal/unmanaged_object
      x-group: unmanaged_object
      parameters:
      - name: limit
        in: query
        description: Limit the number of matches returned.
        required: false
        type: integer
        format: int32
        minimum: 0
      - name: after_id
        in: query
        description: First unmanaged object after which objects should be retrieved
        required: false
        type: string
      - name: search_value
        in: query
        description: Search object by object name.
        required: false
        type: string
      - name: unmanaged_status
        in: query
        enum:
        - Protected
        - Relic
        - Unprotected
        description: Filter by the type of the object. If not specified, will return
          all objects. Valid attributes are Protected, Relic and Unprotected
        required: false
        type: string
      - name: object_type
        in: query
        enum:
        - VirtualMachine
        - MssqlDatabase
        - LinuxFileset
        - WindowsFileset
        - ShareFileset
        - NutanixVm
        - HypervVm
        - ManagedVolume
        description: Filter by the type of the unmanaged object.
        required: false
        type: string
      - name: sort_by
        in: query
        enum:
        - Name
        - UnmanagedStatus
        - Location
        - UnmanagedSnapshotCount
        - LocalStorage
        - ArchiveStorage
        description: Sort the result by given attribute.
        required: false
        type: string
      - name: sort_order
        in: query
        enum:
        - asc
        - desc
        description: The sort order. Defaults to asc if not specified
        required: false
        type: string
      responses:
        '200':
          description: Get page summary about objects with unmanaged snapshots
          schema:
            $ref: '#/definitions/UnmanagedObjectSummaryListResponse'
  /internal/unmanaged_object/snapshot/bulk_delete:
    post:
      summary: Bulk delete all unmanaged snapshots for the given objects
      description: Bulk delete all unmanaged snapshots for the objects specified by
        objectId/objectType pairings
      operationId: bulkDeleteUnmanagedObjectSnapshots
      tags:
      - /internal/unmanaged_object
      x-group: unmanaged_object
      parameters:
      - in: body
        description: List of objectId/objectType pairings for which to delete all
          snapshots
        name: delete_unmanaged_config
        required: true
        schema:
          $ref: '#/definitions/BulkDeleteUnmanagedObjectSnapshots'
      responses:
        '204':
          description: OK on success
        '409':
          description: Returned if delete all fails
          schema:
            $ref: '#/definitions/RequestFailedException'
  /internal/unmanaged_object/{id}/snapshot:
    get:
      summary: Get summary of all the unmanaged snapshots for a given object
      description: Get summary of all the unmanaged snapshots for the object specified
        by id
      operationId: queryUnmanagedObjectSnapshots
      tags:
      - /internal/unmanaged_object
      x-group: unmanaged_object
      parameters:
      - in: path
        description: ID of a object.
        name: id
        required: true
        type: string
      - name: limit
        in: query
        description: Limit the number of matches returned.
        required: false
        type: integer
        format: int32
        minimum: 0
      - name: offset
        in: query
        description: Ignore these many matches in the beginning.
        required: false
        type: integer
        format: int32
        minimum: 0
      - name: search_value
        in: query
        description: Search snapshot by Date and Time.
        required: false
        type: string
      - name: search_timezone_offset
        in: query
        description: The timezone offset with which to search by Date and Time against,
          in minutes.
        required: false
        type: integer
        format: int32
      - name: unmanaged_snapshot_type
        in: query
        enum:
        - OnDemand
        - Retrieved
        - Relic
        - Unprotected
        description: Filter by Unmanaged Snapshot Type. Valid attributes are OnDemand,
          Retrieved, Relic, and Unprotected
        required: false
        type: string
      - name: before_date
        in: query
        description: Filter all the snapshots before a date.
        required: false
        type: string
        format: date-time
      - name: after_date
        in: query
        description: Filter all the snapshots after a date.
        required: false
        type: string
        format: date-time
      - name: sort_by
        in: query
        enum:
        - SnapshotDateAndTime
        - UnmanagedSnapshotType
        - LocalStorage
        - ArchiveStorage
        description: Sort by given attribute.
        required: false
        type: string
      - name: sort_order
        in: query
        enum:
        - asc
        - desc
        description: The sort order. Defaults to asc if not specified.
        required: false
        type: string
      responses:
        '200':
          description: Get page summary about umanaged snapshots for a given object
          schema:
            $ref: '#/definitions/UnmanagedSnapshotSummaryListResponse'
  /internal/unmanaged_object/{id}/snapshot/bulk_delete:
    post:
      summary: Bulk delete specified unmanaged snapshots for the given object. Must
        specify object type as well.
      description: Bulk delete unmanaged snapshots specified by snapshotIds for the
        given object
      operationId: bulkDeleteUnmanagedSnapshotsForObject
      tags:
      - /internal/unmanaged_object
      x-group: unmanaged_object
      parameters:
      - in: path
        description: ID of the object.
        name: id
        required: true
        type: string
      - in: body
        description: List of snapshotIds to delete and the type of object the snapshots
          are of.
        name: delete_snapshots_config
        required: true
        schema:
          $ref: '#/definitions/BulkDeleteUnmanagedSnapshotsConfig'
      responses:
        '204':
          description: OK on success
        '409':
          description: Returned if delete all fails
          schema:
            $ref: '#/definitions/RequestFailedException'
  /internal/user:
    get:
      summary: 'ADMIN ONLY: Summary of all the Users '
      description: To be used by Admin to fetch the list of Users
      operationId: queryUser
      tags:
      - /internal/user
      x-group: user
      parameters:
      - in: query
        name: username
        type: string
        description: Username to match
      - in: query
        name: auth_domain_id
        type: string
        description: Auth domain ID to match
      responses:
        '200':
          description: TODO
          schema:
            type: array
            items:
              $ref: '#/definitions/UserSummary'
    post:
      summary: 'ADMIN ONLY: Create new User'
      description: To be used by Admin to create new User
      operationId: createUser
      tags:
      - /internal/user
      x-group: user
      parameters:
      - in: body
        description: Detail info about the user to be created
        name: definition
        required: true
        schema:
          $ref: '#/definitions/UserDefinition'
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/UserDetail'
  /internal/user/{id}:
    get:
      summary: 'ADMIN ONLY: Details about the specific User'
      description: To be used by Admin to fetch details about the specific User
      operationId: getUser
      tags:
      - /internal/user
      x-group: user
      parameters:
      - in: path
        description: ID of the User that needs to be fetched
        name: id
        required: true
        type: string
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/UserDetail'
    delete:
      summary: 'ADMIN ONLY: Delete a user for the given id'
      description: Delete a user for the given id
      operationId: deleteUser
      tags:
      - /internal/user
      x-group: user
      parameters:
      - in: path
        description: ID of the user to be deleted
        name: id
        required: true
        type: string
      responses:
        '200':
          description: TODO
          schema:
            type: string
    patch:
      summary: 'ADMIN ONLY: Update existing User'
      description: To be used by Admin to update existing User
      operationId: updateUser
      tags:
      - /internal/user
      x-group: user
      parameters:
      - in: path
        description: ID of the User that needs to be updated
        name: id
        required: true
        type: string
      - in: body
        description: User info to be updated
        name: user_info
        required: true
        schema:
          $ref: '#/definitions/UserUpdateInfo'
      responses:
        '200':
          description: Returns updated details about the user
          schema:
            $ref: '#/definitions/UserDetail'
  # /user/{id}/preferences: {}
  /internal/user_notification:
    get:
      summary: Get notifications for the current user
      description: Notifications for the current user
      operationId: queryUserNotification
      tags:
      - /internal/user_notification
      x-group: user_notification
      parameters:
      - in: query
        name: limit
        description: Maximum number of notifications retrieved
        required: false
        type: integer
        format: int32
        minimum: 0
      - name: after_id
        in: query
        description: Retrieve notifications after given notification id. Combined
          with the limit parameter, this allows paginated query for notifications.
        required: false
        type: string
      - name: state
        in: query
        description: Filter by State.
        enum:
        - NEW
        - READ
        required: false
        type: string
      - name: status
        in: query
        description: Filter by Status.
        enum:
        - Failure
        - Warning
        - Success
        required: false
        type: string
      - name: notification_type
        in: query
        description: Filter by Notification Type.
        enum:
        - Backup
        - Configuration
        - Recovery
        - SlaViolation
        - ProtectionState
        - Hardware
        - Support
        required: false
        type: string
      - name: object_ids
        in: query
        description: Filter by a comma separated list of object IDs.
        required: false
        type: array
        items:
          type: string
      - name: before_date
        in: query
        description: Filter all the notifications before a date.
        required: false
        type: string
        format: date-time
      - name: after_date
        in: query
        description: Filter all the notifications after a date.
        required: false
        type: string
        format: date-time
      - name: object_type
        in: query
        description: 'Filter all the notifications by object type. Enter any of the
          following values: **VmwareVm**, **SlaDomain**, **DataLocation**, **Cluster**,
          **MountVm**, **LinuxFileset**, **ShareFileset**, **WindowsFileset**, **NutanixVm**,
          **HypervVm**, **ManagedVolume**, or **Mssql**'
        required: false
        type: string
      responses:
        '200':
          description: Returns the list of notifications based on query.
          schema:
            type: array
            items:
              description: listResponse
              $ref: '#/definitions/UserNotificationDetail'
  /internal/user_notification/update/bulk:
    patch:
      summary: Update user notification state in bulk
      description: 'Update user notification state in bulk. For each notification
        state, enter any of the following values: **NEW** or **READ**.'
      operationId: userNotificationBulkUpdate
      tags:
      - /internal/user_notification
      x-group: user_notification
      parameters:
      - in: body
        description: user notifications to update
        name: update_detail
        required: true
        schema:
          $ref: '#/definitions/BulkUpdateDetail'
      responses:
        '200':
          description: The list of updated notifications.
          schema:
            type: array
            items:
              $ref: '#/definitions/UserNotificationDetail'
  /internal/user_notification/{notification_id}:
    patch:
      summary: Change status of given notification
      description: Change status of given notification
      operationId: patchUserNotification
      tags:
      - /internal/user_notification
      x-group: user_notification
      parameters:
      - in: path
        description: ID of notification
        name: notification_id
        required: true
        type: string
      - in: body
        description: 'State to update. Enter any of the following values: **NEW**
          or **READ**.'
        name: state
        required: true
        schema:
          $ref: '#/definitions/UpdateDetail'
      responses:
        '200':
          description: The updated notification
          schema:
            $ref: '#/definitions/UserNotificationDetail'
  /internal/vmware/agent:
    get:
      summary: Get Rubrik Backup Service deployment setting
      description: Retrieve the global setting for automatic deployment of the Rubrik
        Backup Service to virtual machines.
      operationId: getVmAgentDeploymentSetting
      tags:
      - /internal/vmware/agent
      x-group: vm
      parameters: []
      responses:
        '200':
          description: Returned on successful retrieval of deployment setting.
          schema:
            $ref: '#/definitions/AgentDeploymentSettings'
    put:
      summary: Change the Rubrik Backup Service deployment setting
      description: Modify the global setting for automatic deployment of the Rubrik
        Backup Service to virtual machines.
      operationId: updateVmAgentDeploymentSetting
      tags:
      - /internal/vmware/agent
      x-group: vm
      parameters:
      - in: body
        description: Modify the Rubrik Backup Service deployment setting for a specified
          virtual machine.
        name: settings
        required: true
        schema:
          $ref: '#/definitions/AgentDeploymentSettings'
      responses:
        '200':
          description: Returned on successful retrieval of deployment setting.
          schema:
            $ref: '#/definitions/AgentDeploymentSettings'
  /internal/vmware/compute_cluster:
    get:
      summary: Get all the clusters belonging to this datacenter
      description: Get all the clusters belonging to this datacenter
      operationId: queryComputeCluster
      tags:
      - /internal/vmware/compute_cluster
      x-group: compute_cluster
      parameters:
      - in: query
        description: Filter clusters on data center ID
        name: data_center_id
        required: false
        type: string
      - in: query
        description: Filter on a primary cluster ID. Also accepts value 'local'
        name: primary_cluster_id
        required: false
        type: string
      responses:
        '200':
          description: Returns list of compute clusters subject to provided filters
          schema:
            $ref: '#/definitions/ComputeClusterSummaryListResponse'
  /internal/vmware/compute_cluster/{id}:
    get:
      summary: Get details for the compute cluster
      description: Get details for the compute cluster
      operationId: getComputeCluster
      tags:
      - /internal/vmware/compute_cluster
      x-group: compute_cluster
      parameters:
      - in: path
        description: id of the compute cluster
        name: id
        required: true
        type: string
      responses:
        '200':
          description: The requested compute cluster
          schema:
            $ref: '#/definitions/ComputeClusterDetail'
        '404':
          description: Returned if there is no compute cluster with the given id
  /internal/vmware/data_center:
    get:
      summary: Gets the list of all the data centers.
      description: Returns the summary of all the data centers.
      operationId: queryDataCenter
      tags:
      - /internal/vmware/data_center
      x-group: data_center
      parameters:
      - in: query
        description: Filter by Primary cluster ID, or local
        name: primary_cluster_id
        required: false
        type: string
      responses:
        '200':
          description: Returns the list of all the data centers
          schema:
            type: array
            items:
              description: listResponse
              $ref: '#/definitions/DataCenterSummary'
  /internal/vmware/data_center/{id}:
    get:
      summary: Gets details about the specific DataCenter
      description: Returns details about the specific DataCenter
      operationId: getDataCenter
      tags:
      - /internal/vmware/data_center
      x-group: data_center
      parameters:
      - in: path
        description: ID of the data center that needs to be fetched
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Returns the data center object matching given ID
          schema:
            $ref: '#/definitions/DataCenterDetail'
        '404':
          description: Returned if data center with given ID cannot be found
  /internal/vmware/datastore:
    get:
      summary: Get summaries of all the DataStores
      description: Get summaries of all the DataStores
      operationId: queryDatastore
      tags:
      - /internal/vmware/datastore
      x-group: datastore
      parameters: []
      responses:
        '200':
          description: Returns the summaries of DataStores
          schema:
            $ref: '#/definitions/DataStoreSummaryListResponse'
  /internal/vmware/datastore/{id}:
    get:
      summary: Get details about the specific DataStore
      description: Get details about the specific DataStore
      operationId: getDatastore
      tags:
      - /internal/vmware/datastore
      x-group: datastore
      parameters:
      - in: path
        description: ID of the DataStore that needs to be fetched
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Returns details of the DataStore.
          schema:
            $ref: '#/definitions/DataStoreDetail'
  /internal/vmware/guest_credential:
    get:
      summary: Summary of all guest OS credentials
      description: Retrieve the ID, domain, username and password for all guest OS
        credentials.
      operationId: queryGuestCredential
      tags:
      - /internal/vmware/guest_credential
      x-group: guest_credential
      parameters: []
      responses:
        '200':
          description: Guest OS credentials
          schema:
            $ref: '#/definitions/GuestCredentialDetailListResponse'
    post:
      summary: Create a new guest OS credential
      description: Create a new guest OS credential
      operationId: createGuestCredential
      tags:
      - /internal/vmware/guest_credential
      x-group: guest_credential
      parameters:
      - in: body
        description: Object for guest OS credential definition.
        name: definition
        required: true
        schema:
          $ref: '#/definitions/GuestCredentialDefinition'
      responses:
        '201':
          description: Returns the created guest OS credential object.
          schema:
            $ref: '#/definitions/GuestCredentialDetail'
  /internal/vmware/guest_credential/{id}:
    get:
      summary: Get information about a specific guest OS credential.
      description: Get information about a specific guest OS credential.
      operationId: getGuestCredential
      tags:
      - /internal/vmware/guest_credential
      x-group: guest_credential
      parameters:
      - in: path
        description: ID of the guest OS credential.
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Object for guest OS credential definition.
          schema:
            $ref: '#/definitions/GuestCredentialDetail'
    put:
      summary: Update a specific guest OS credential
      description: Update the domain, username and password of given guest OS credential.
      operationId: updateGuestCredential
      tags:
      - /internal/vmware/guest_credential
      x-group: guest_credential
      parameters:
      - in: path
        description: ID of the guest OS credential to update.
        name: id
        required: true
        type: string
      - in: body
        description: Object for guest OS credential definition.
        name: definition
        required: true
        schema:
          $ref: '#/definitions/GuestCredentialDefinition'
      responses:
        '200':
          description: Returns the updated guest OS credential object.
          schema:
            $ref: '#/definitions/GuestCredentialDetail'
    delete:
      summary: Remove a specific guest OS credential.
      description: Remove a specific guest OS credential.
      operationId: deleteGuestCredentialById
      tags:
      - /internal/vmware/guest_credential
      x-group: guest_credential
      parameters:
      - in: path
        description: ID of the guest OS credential to remove.
        name: id
        required: true
        type: string
      responses:
        '204':
          description: Successfully removed given guest OS credential.
  /internal/vmware/vcenter/{id}/refresh_vm:
    post:
      summary: Refresh single virtual machine metadata in a vcenter.
      description: Refresh a single virtual machine metadata in a vcenter.
      operationId: createRefreshVm
      tags:
      - /internal/vmware/vcenter
      x-group: vcenter
      parameters:
      - in: path
        description: ID of the vCenter Server
        name: id
        required: true
        type: string
      - in: body
        name: config
        description: Configuration of the vm request to refresh
        required: true
        schema:
          $ref: '#/definitions/RefreshVmRequest'
      responses:
        '204':
          description: The vm metadata is refreshed successfully
  /internal/vmware/vm/count:
    get:
      summary: Count of all the local non-archived VMs
      description: Count of all the local non-archived VMs
      operationId: countVm
      tags:
      - /internal/vmware/vm
      x-group: vm
      parameters: []
      responses:
        '200':
          description: Returns a count of all the non-archived VMs
          schema:
            $ref: '#/definitions/CountResponse'
  /internal/vmware/vm/credential_failure:
    get:
      summary: Fetch VMs with authentication failures
      description: Fetch VMs with authentication failures
      operationId: getCredentialFailureVms
      tags:
      - /internal/vmware/vm
      x-group: vm
      parameters: []
      responses:
        '200':
          description: Return a list with brief description of virtual machine.
          schema:
            $ref: '#/definitions/VirtualMachineBriefListResponse'
  /internal/vmware/vm/credential_failure/count:
    get:
      summary: Fetch count of VMs with authentication failures
      description: Fetch count of VMs with authentication failures
      operationId: credentialFailureCount
      tags:
      - /internal/vmware/vm
      x-group: vm
      parameters: []
      responses:
        '200':
          description: Return a count of all credential failure.
          schema:
            $ref: '#/definitions/CountResponse'
  /internal/vmware/vm/live_snapshot/count/{id}:
    get:
      summary: Count of all the live snapshots of a VM
      description: Count of all the live snapshots of a VM
      operationId: liveSnapshotCount
      tags:
      - /internal/vmware/vm
      x-group: vm
      parameters:
      - in: path
        description: ID of the Virtual Machine
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Return a count of live snapshot for a vm.
          schema:
            $ref: '#/definitions/CountResponse'
  /internal/vmware/vm/snapshot/count:
    get:
      summary: Get a count of snapshots
      description: Retrieve total number of snapshots.
      operationId: countSnapshot
      tags:
      - /internal/vmware/vm
      x-group: vm
      parameters: []
      responses:
        '200':
          description: Returns total number of snapshots.
          schema:
            $ref: '#/definitions/CountResponse'
  /internal/vmware/vm/snapshot/mount:
    get:
      deprecated: true
      summary: Get summary information for all live mounts
      description: 'Retrieve the following information for all live mounts: ID, snapshot
        date, ID of source VM, name of source VM, ID of source host, status of the
        mount, mount event ID, and unmount event ID.'
      operationId: queryMount
      tags:
      - /internal/vmware/vm
      x-group: vm
      parameters:
      - in: query
        description: Filters live mounts by VM ID
        name: vm_id
        required: false
        type: string
      - name: offset
        in: query
        description: Ignore these many matches in the beginning.
        required: false
        type: integer
        format: int32
        minimum: 0
      - name: limit
        in: query
        description: Limit the number of matches returned. Default is 25.
        required: false
        type: integer
        format: int32
        minimum: 0
      responses:
        '200':
          description: Returns summary information for all live mounts.
          schema:
            $ref: '#/definitions/VmwareVmMountSummaryListResponse'
  /internal/vmware/vm/snapshot/mount/count:
    get:
      summary: Get a count of live mounts
      description: Retrieve total number of live mounts.
      operationId: countMount
      tags:
      - /internal/vmware/vm
      x-group: vm
      parameters: []
      responses:
        '200':
          description: Returns total number of live mounts.
          schema:
            $ref: '#/definitions/CountResponse'
  /internal/vmware/vm/snapshot/mount/{id}:
    get:
      deprecated: true
      summary: Get summary information for a live mount
      description: 'Retrieve the following summary information for a specified live
        mount: ID, snapshot date, ID of source VM, name of source VM, ID of source
        host, status of the mount, mount event ID, and unmount event ID.'
      operationId: getMount
      tags:
      - /internal/vmware/vm
      x-group: vm
      parameters:
      - in: path
        description: ID of the live mount
        name: id
        required: true
        type: string
      responses:
        '200':
          description: Returns detail information for a specified live mount.
          schema:
            $ref: '#/definitions/MountDetail'
  /internal/vmware/vm/snapshot/{id}/mount:
    post:
      deprecated: true
      summary: Create a live mount request
      description: Create a live mount request with given configuration
      operationId: createMount
      tags:
      - /internal/vmware/vm
      x-group: vm
      parameters:
      - in: path
        description: ID of Snapshot
        name: id
        required: true
        type: string
      - in: body
        description: Configuration for the mount request
        name: config
        required: false
        schema:
          $ref: '#/definitions/MountSnapshotJobConfig'
      responses:
        '202':
          description: Status for the mount request.
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
  /internal/vmware/vm/snapshot/{id}/restore_files:
    post:
      summary: Restores multiple files/directories from VM snapshot
      description: Create a request to restore multiple file or folder to the source
        virtual machine.
      operationId: createRestoreFilesJob
      tags:
      - /internal/vmware/vm
      x-group: vm
      parameters:
      - in: path
        description: ID of a snapshot.
        name: id
        required: true
        type: string
      - in: body
        description: Configuration for the restore request.
        name: config
        required: true
        schema:
          $ref: '#/definitions/RestoreFilesJobConfig'
      responses:
        '202':
          description: Status of the restore request.
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
  /internal/vmware/vm/snapshot/{id}/standalone_esx_host_export:
    post:
      summary: Create an export request to standalone esx server
      description: Export snapshot of a vm to stanadlone esx server.
      operationId: createStandaloneExport
      tags:
      - /internal/vmware/vm
      x-group: vm
      parameters:
      - name: id
        in: path
        description: ID of snapshot
        required: true
        type: string
      - in: body
        name: config
        description: Configuration for the export request to standalone esx host
        required: true
        schema:
          $ref: '#/definitions/ExportSnapshotToStandaloneHostRequest'
      responses:
        '202':
          description: Status for the export request.
          schema:
            $ref: '#/definitions/AsyncRequestStatus'
  /internal/vmware/vm/update/bulk:
    patch:
      summary: Update VMs in bulk
      description: Update VMs with specified properties
      operationId: vmBulkUpdate
      tags:
      - /internal/vmware/vm
      x-group: vm
      parameters:
      - in: body
        description: Properties to update
        name: update
        required: true
        schema:
          $ref: '#/definitions/VirtualMachineBulkUpdate'
      responses:
        '200':
          description: TODO
          schema:
            $ref: '#/definitions/Map_VmEndPointStatus'
  /internal/vmware/vm/virtual_disk:
    get:
      summary: Get a list of all the Virtual Disks
      description: Get a list of all the Virtual Disks
      operationId: queryVirtualDisk
      tags:
      - /internal/vmware/vm
      x-group: virtual_disk
      parameters: []
      responses:
        '200':
          description: Return details about all virtual disks
          schema:
            $ref: '#/definitions/VirtualDiskSummaryListResponse'
  /internal/vmware/vm/{id}/register_agent:
    post:
      summary: register the agent installed in vm
      description: Register the agent that installed in vm
      operationId: vmRegisterAgent
      tags:
      - /internal/vmware/vm
      x-group: vm
      parameters:
      - in: path
        description: ID of the Virtual Machine
        name: id
        required: true
        type: string
      responses:
        '204':
          description: The vm agent is registered successfully
